/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:441: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
attention mode is flash
logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=7_20250828_225256/cache_interval_4_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=7/bon=1/guidance_strength=1.0
Logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=7_20250828_225256/cache_interval_4_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=7/bon=1/guidance_strength=1.0
Arguments: Arguments(data_type='image', dataset='cifar10', task='label_guidance', image_size=32, include_charges=False, generators_path='./pretrained_models/EDMsecond/generative_model_ema.npy', args_generators_path='./pretrained_models/EDMsecond/args.pickle', energy_path='./pretrained_models/tf_predict_mu/model_ema_2000.npy', args_energy_path='./pretrained_models/tf_predict_mu/args_2000.pickle', classifiers_path='./pretrained_models/evaluate_mu/best_checkpoint.npy', args_classifiers_path='./pretrained_models/evaluate_mu/args.pickle', clip_scale=100, audio_length=10, volume_factor=80.0, motion_prompt='walk', radius=3.0, model_name_or_path='openai_cifar10.pt', model_type='unet', use_deepcache=True, cache_interval=4, cache_block_id=5, skip_mode='uniform', clean_step=0, vae='mse', train_steps=1000, inference_steps=50, eta=1.0, clip_x0=True, clip_sample_range=1.0, seed=42, device=device(type='cuda'), logging_dir='/home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=7_20250828_225256/cache_interval_4_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=7/bon=1/guidance_strength=1.0', logger=None, per_sample_batch_size=128, num_samples=1024, batch_id=0, guidance_name='dps', guider='classifier', target='7', recur_steps=1, iter_steps=4, guidance_strength=1.0, guidance_scale=1.0, start_gradient=50, use_early_exit=False, early_exit_layer=None, use_time_based_early_exit=False, time_early_exit_mapping=None, rho=1.0, mu=0.25, sigma=0.001, eps_bsz=1, rho_schedule='increase', mu_schedule='increase', sigma_schedule='decrease', guide_network='resnet_cifar10.pt', classifier_image_size=224, eval_batch_size=512, logging_resolution=512, log_suffix='', log_traj=False, max_show_images=256, check_done=False, wandb=False, wandb_project='trail', wandb_name=None, wandb_entity='llm-selection', saved_file=None, sort_metric=None, topk=5, output_path='vis_molecule', output_dir=None, max_n_samples=10000000000, bon_rate=1, bon_guidance=None)
[DeepCache] DeepCacheDPSGuidance 초기화: use_deepcache=True, cache_interval=4
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:56,  1.16s/it]  4%|▍         | 2/50 [00:01<00:32,  1.46it/s]  6%|▌         | 3/50 [00:01<00:25,  1.88it/s]  8%|▊         | 4/50 [00:02<00:21,  2.17it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache] DeepCache UNet 초기화: cache_interval=4, cache_block_id=5, clean_step=0
[DeepCache Debug] 첫 번째 실행: start_timestep=50
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694b20>
[DeepCache DPS Debug] t=0, grad_norm: 55.934097, grad_max: 1.377457
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac6949d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac6949d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694a60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694a60>
[DeepCache DPS Debug] t=1, grad_norm: 43.766106, grad_max: 1.295159
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac6948b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac6948b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694a90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694a90>
[DeepCache DPS Debug] t=2, grad_norm: 34.301407, grad_max: 1.024313
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694a60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694a60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694ca0>
[DeepCache DPS Debug] t=3, grad_norm: 28.512997, grad_max: 0.744360
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694a90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694a90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac695060> 10%|█         | 5/50 [00:03<00:26,  1.68it/s] 12%|█▏        | 6/50 [00:03<00:22,  1.93it/s] 14%|█▍        | 7/50 [00:03<00:20,  2.12it/s] 16%|█▌        | 8/50 [00:04<00:18,  2.27it/s] 18%|█▊        | 9/50 [00:05<00:23,  1.73it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac695060>
[DeepCache DPS Debug] t=4, grad_norm: 41.610210, grad_max: 1.336288
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac6954e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac6954e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac6957b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac6957b0>
[DeepCache DPS Debug] t=5, grad_norm: 24.402634, grad_max: 0.699462
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac6958d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac6958d0>
[DeepCache DPS Debug] t=6, grad_norm: 19.500841, grad_max: 0.480132
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac6957b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac6957b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac695690>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac695690>
[DeepCache DPS Debug] t=7, grad_norm: 16.365717, grad_max: 0.347044
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac6958d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac6958d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] t=8, grad_norm: 32.634048, grad_max: 1.069733
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694a60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694a60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:20,  1.94it/s] 22%|██▏       | 11/50 [00:05<00:18,  2.10it/s] 24%|██▍       | 12/50 [00:06<00:17,  2.23it/s] 26%|██▌       | 13/50 [00:07<00:21,  1.72it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac695ab0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac695ab0>
[DeepCache DPS Debug] t=9, grad_norm: 18.502672, grad_max: 0.420898
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694ca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac695ae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac695ae0>
[DeepCache DPS Debug] t=10, grad_norm: 14.195470, grad_max: 0.368523
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac695ab0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac695ab0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac695900>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac695900>
[DeepCache DPS Debug] t=11, grad_norm: 12.279488, grad_max: 0.274543
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac695ae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac695ae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9d50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9d50>
[DeepCache DPS Debug] t=12, grad_norm: 21.743414, grad_max: 0.662804
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac695900>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac695900>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694b80> 28%|██▊       | 14/50 [00:07<00:18,  1.91it/s] 30%|███       | 15/50 [00:07<00:16,  2.07it/s] 32%|███▏      | 16/50 [00:08<00:15,  2.19it/s] 34%|███▍      | 17/50 [00:09<00:22,  1.48it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694b80>
[DeepCache DPS Debug] t=13, grad_norm: 31.231405, grad_max: 0.620686
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac6957e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac6957e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac695ff0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac695ff0>
[DeepCache DPS Debug] t=14, grad_norm: 20.581392, grad_max: 0.414386
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694b80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694b80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac6955a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac6955a0>
[DeepCache DPS Debug] t=15, grad_norm: 16.836405, grad_max: 0.396433
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac695ff0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac695ff0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9b70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9b70>
[DeepCache DPS Debug] t=16, grad_norm: 14.173282, grad_max: 0.216965
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9c30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9c30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9b40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9b40>
[DeepCache DPS Debug] t=17, grad_norm: 51.907810, grad_max: 0.981604
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9a80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9a80> 36%|███▌      | 18/50 [00:09<00:18,  1.69it/s] 38%|███▊      | 19/50 [00:10<00:16,  1.88it/s] 40%|████      | 20/50 [00:10<00:14,  2.03it/s] 42%|████▏     | 21/50 [00:11<00:18,  1.60it/s] 44%|████▍     | 22/50 [00:11<00:15,  1.79it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa170>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa170>
[DeepCache DPS Debug] t=18, grad_norm: 34.540016, grad_max: 0.650386
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9b40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9b40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] t=19, grad_norm: 29.378696, grad_max: 0.635826
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa170>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa170>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa3e0>
[DeepCache DPS Debug] t=20, grad_norm: 17.946066, grad_max: 0.471736
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9d50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9d50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa530>
[DeepCache DPS Debug] t=21, grad_norm: 58.518250, grad_max: 1.063040
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a99f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a99f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:12<00:13,  1.95it/s] 48%|████▊     | 24/50 [00:12<00:12,  2.08it/s] 50%|█████     | 25/50 [00:13<00:15,  1.61it/s] 52%|█████▏    | 26/50 [00:14<00:13,  1.79it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa770>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa770>
[DeepCache DPS Debug] t=22, grad_norm: 40.048050, grad_max: 1.002979
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] t=23, grad_norm: 34.319042, grad_max: 0.778618
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa770>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa770>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa260>
[DeepCache DPS Debug] t=24, grad_norm: 23.186705, grad_max: 0.611275
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa350>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa350>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9330>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9330>
[DeepCache DPS Debug] t=25, grad_norm: 52.588169, grad_max: 1.071899
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa860>
[DeepCache DPS Debug] t=26, grad_norm: 41.621529, grad_max: 0.802795
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9330> 54%|█████▍    | 27/50 [00:14<00:11,  1.94it/s] 56%|█████▌    | 28/50 [00:14<00:10,  2.07it/s] 58%|█████▊    | 29/50 [00:15<00:13,  1.61it/s] 60%|██████    | 30/50 [00:16<00:11,  1.78it/s] 62%|██████▏   | 31/50 [00:16<00:09,  1.93it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9330>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9390>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9390>
[DeepCache DPS Debug] t=27, grad_norm: 36.309994, grad_max: 0.787318
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa860>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa560>
[DeepCache DPS Debug] t=28, grad_norm: 28.544985, grad_max: 1.115866
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa2f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa2f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9e40>
[DeepCache DPS Debug] t=29, grad_norm: 60.440876, grad_max: 1.186672
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aace0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aace0>
[DeepCache DPS Debug] t=30, grad_norm: 44.009178, grad_max: 1.085514
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:17<00:08,  2.05it/s] 66%|██████▌   | 33/50 [00:18<00:10,  1.59it/s] 68%|██████▊   | 34/50 [00:18<00:09,  1.77it/s] 70%|███████   | 35/50 [00:18<00:07,  1.91it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa440>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa440>
[DeepCache DPS Debug] t=31, grad_norm: 37.185825, grad_max: 0.687001
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aace0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aace0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa710>
[DeepCache DPS Debug] t=32, grad_norm: 63.966080, grad_max: 5.057229
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9b40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9b40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa7d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa7d0>
[DeepCache DPS Debug] t=33, grad_norm: 62.649155, grad_max: 1.621758
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9390>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9390>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab0d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab0d0>
[DeepCache DPS Debug] t=34, grad_norm: 47.152233, grad_max: 1.231219
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa7d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa7d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9a80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9a80>
[DeepCache DPS Debug] t=35, grad_norm: 41.038910, grad_max: 1.043242
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab0d0> 72%|███████▏  | 36/50 [00:19<00:06,  2.03it/s] 74%|███████▍  | 37/50 [00:20<00:08,  1.57it/s] 76%|███████▌  | 38/50 [00:20<00:06,  1.75it/s] 78%|███████▊  | 39/50 [00:21<00:05,  1.91it/s] 80%|████████  | 40/50 [00:21<00:04,  2.02it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab0d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa830>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa830>
[DeepCache DPS Debug] t=36, grad_norm: 62.855595, grad_max: 2.349524
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa200>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa200>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=37, grad_norm: 97.101181, grad_max: 2.327392
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa440>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa440>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab580>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab580>
[DeepCache DPS Debug] t=38, grad_norm: 65.289185, grad_max: 1.671815
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a99f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a99f0>
[DeepCache DPS Debug] t=39, grad_norm: 56.001575, grad_max: 1.490219
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab580>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab580>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:22<00:05,  1.57it/s] 84%|████████▍ | 42/50 [00:23<00:04,  1.74it/s] 86%|████████▌ | 43/50 [00:23<00:03,  1.89it/s] 88%|████████▊ | 44/50 [00:23<00:02,  2.01it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f013a6883a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f013a6883a0>
[DeepCache DPS Debug] t=40, grad_norm: 59.437233, grad_max: 2.003186
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f013a6896c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f013a6896c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab130>
[DeepCache DPS Debug] t=41, grad_norm: 116.459702, grad_max: 3.582261
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aaad0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aaad0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab9d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab9d0>
[DeepCache DPS Debug] t=42, grad_norm: 98.999062, grad_max: 3.384793
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab130>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] t=43, grad_norm: 94.816307, grad_max: 3.593872
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab9d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab9d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=44, grad_norm: 76.616272, grad_max: 5.053207
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab580> 90%|█████████ | 45/50 [00:24<00:03,  1.55it/s] 92%|█████████▏| 46/50 [00:25<00:02,  1.72it/s] 94%|█████████▍| 47/50 [00:25<00:01,  1.87it/s] 96%|█████████▌| 48/50 [00:26<00:01,  1.98it/s] 98%|█████████▊| 49/50 [00:27<00:00,  1.53it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab580>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab910>
[DeepCache DPS Debug] t=45, grad_norm: 157.817215, grad_max: 3.885966
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9a80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9a80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab0a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab0a0>
[DeepCache DPS Debug] t=46, grad_norm: 153.163300, grad_max: 4.474543
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] t=47, grad_norm: 171.265488, grad_max: 6.739954
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08ab0a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08ab0a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] t=48, grad_norm: 182.192657, grad_max: 10.351742
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aadd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aadd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>100%|██████████| 50/50 [00:28<00:00,  1.33it/s]100%|██████████| 50/50 [00:28<00:00,  1.78it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] t=49, grad_norm: 201.880981, grad_max: 6.617508
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aba60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aba60>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:48,  1.01it/s]  4%|▍         | 2/50 [00:01<00:31,  1.51it/s]  6%|▌         | 3/50 [00:01<00:26,  1.79it/s]  8%|▊         | 4/50 [00:02<00:23,  1.97it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] t=0, grad_norm: 54.399601, grad_max: 1.643257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa440>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa440>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] t=1, grad_norm: 43.891766, grad_max: 0.957102
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=2, grad_norm: 35.001881, grad_max: 0.918599
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] t=3, grad_norm: 28.822676, grad_max: 0.644873
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230> 10%|█         | 5/50 [00:03<00:30,  1.45it/s] 12%|█▏        | 6/50 [00:03<00:26,  1.66it/s] 14%|█▍        | 7/50 [00:04<00:23,  1.82it/s] 16%|█▌        | 8/50 [00:04<00:21,  1.94it/s] 18%|█▊        | 9/50 [00:05<00:27,  1.49it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] t=4, grad_norm: 42.972057, grad_max: 1.729172
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] t=5, grad_norm: 24.494816, grad_max: 0.538069
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] t=6, grad_norm: 19.500521, grad_max: 0.499069
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] t=7, grad_norm: 16.394268, grad_max: 0.375698
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] t=8, grad_norm: 34.446873, grad_max: 0.847824
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:06<00:23,  1.67it/s] 22%|██▏       | 11/50 [00:06<00:21,  1.82it/s] 24%|██▍       | 12/50 [00:06<00:19,  1.94it/s] 26%|██▌       | 13/50 [00:07<00:24,  1.50it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=9, grad_norm: 18.445093, grad_max: 0.412672
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] t=10, grad_norm: 14.170568, grad_max: 0.331402
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] t=11, grad_norm: 12.225240, grad_max: 0.257912
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] t=12, grad_norm: 22.366907, grad_max: 0.397167
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970> 28%|██▊       | 14/50 [00:08<00:21,  1.67it/s] 30%|███       | 15/50 [00:08<00:19,  1.82it/s] 32%|███▏      | 16/50 [00:09<00:17,  1.93it/s] 34%|███▍      | 17/50 [00:10<00:22,  1.49it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] t=13, grad_norm: 31.120161, grad_max: 0.802686
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] t=14, grad_norm: 20.067482, grad_max: 0.443731
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] t=15, grad_norm: 16.540375, grad_max: 0.347176
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=16, grad_norm: 14.623601, grad_max: 0.488293
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] t=17, grad_norm: 55.259785, grad_max: 0.949182
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230> 36%|███▌      | 18/50 [00:10<00:19,  1.66it/s] 38%|███▊      | 19/50 [00:11<00:17,  1.80it/s] 40%|████      | 20/50 [00:11<00:15,  1.91it/s] 42%|████▏     | 21/50 [00:12<00:19,  1.49it/s] 44%|████▍     | 22/50 [00:13<00:16,  1.65it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] t=18, grad_norm: 35.688148, grad_max: 0.599109
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] t=19, grad_norm: 29.389156, grad_max: 0.638216
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] t=20, grad_norm: 15.618450, grad_max: 0.196255
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] t=21, grad_norm: 59.857937, grad_max: 1.093868
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:13<00:15,  1.79it/s] 48%|████▊     | 24/50 [00:14<00:13,  1.91it/s] 50%|█████     | 25/50 [00:15<00:16,  1.48it/s] 52%|█████▏    | 26/50 [00:15<00:14,  1.65it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] t=22, grad_norm: 40.261925, grad_max: 0.733737
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=23, grad_norm: 33.502903, grad_max: 0.705545
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] t=24, grad_norm: 18.442396, grad_max: 0.495345
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] t=25, grad_norm: 52.065029, grad_max: 0.883279
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] t=26, grad_norm: 41.560081, grad_max: 1.015396
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970> 54%|█████▍    | 27/50 [00:15<00:12,  1.78it/s] 56%|█████▌    | 28/50 [00:16<00:11,  1.89it/s] 58%|█████▊    | 29/50 [00:17<00:14,  1.48it/s] 60%|██████    | 30/50 [00:17<00:12,  1.64it/s] 62%|██████▏   | 31/50 [00:18<00:10,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] t=27, grad_norm: 37.099094, grad_max: 0.868063
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] t=28, grad_norm: 33.086197, grad_max: 2.031075
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] t=29, grad_norm: 59.254864, grad_max: 1.206055
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=30, grad_norm: 44.091534, grad_max: 0.913454
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:18<00:09,  1.90it/s] 66%|██████▌   | 33/50 [00:19<00:11,  1.48it/s] 68%|██████▊   | 34/50 [00:20<00:09,  1.64it/s] 70%|███████   | 35/50 [00:20<00:08,  1.78it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] t=31, grad_norm: 37.483906, grad_max: 0.592381
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] t=32, grad_norm: 48.375206, grad_max: 1.627139
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] t=33, grad_norm: 71.348312, grad_max: 1.847536
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] t=34, grad_norm: 49.595787, grad_max: 1.385064
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] t=35, grad_norm: 40.335560, grad_max: 1.073820
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0> 72%|███████▏  | 36/50 [00:21<00:07,  1.89it/s] 74%|███████▍  | 37/50 [00:22<00:08,  1.47it/s] 76%|███████▌  | 38/50 [00:22<00:07,  1.63it/s] 78%|███████▊  | 39/50 [00:23<00:06,  1.78it/s] 80%|████████  | 40/50 [00:23<00:05,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] t=36, grad_norm: 60.493286, grad_max: 3.067294
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=37, grad_norm: 95.839821, grad_max: 2.624825
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] t=38, grad_norm: 67.147461, grad_max: 1.888966
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa230>
[DeepCache DPS Debug] t=39, grad_norm: 55.699841, grad_max: 1.182679
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:24<00:06,  1.46it/s] 84%|████████▍ | 42/50 [00:25<00:04,  1.63it/s] 86%|████████▌ | 43/50 [00:25<00:03,  1.76it/s] 88%|████████▊ | 44/50 [00:25<00:03,  1.88it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] t=40, grad_norm: 59.692772, grad_max: 2.044300
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8970>
[DeepCache DPS Debug] t=41, grad_norm: 110.191795, grad_max: 3.323924
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4d0>
[DeepCache DPS Debug] t=42, grad_norm: 100.273155, grad_max: 3.110661
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aa4a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aa4a0>
[DeepCache DPS Debug] t=43, grad_norm: 94.723686, grad_max: 2.358445
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=44, grad_norm: 85.101128, grad_max: 4.546932
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdf0> 90%|█████████ | 45/50 [00:26<00:03,  1.46it/s] 92%|█████████▏| 46/50 [00:27<00:02,  1.62it/s] 94%|█████████▍| 47/50 [00:27<00:01,  1.76it/s] 96%|█████████▌| 48/50 [00:28<00:01,  1.87it/s] 98%|█████████▊| 49/50 [00:29<00:00,  1.45it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effe3837dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effe3837dc0>
[DeepCache DPS Debug] t=45, grad_norm: 155.202438, grad_max: 3.864927
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effe6f70ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effe6f70ca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=46, grad_norm: 143.097595, grad_max: 4.662584
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a96f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a96f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08abdc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08abdc0>
[DeepCache DPS Debug] t=47, grad_norm: 160.098846, grad_max: 4.733828
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9330>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9330>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9330>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9330>
[DeepCache DPS Debug] t=48, grad_norm: 195.126495, grad_max: 14.593788
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a98a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a98a0>100%|██████████| 50/50 [00:30<00:00,  1.25it/s]100%|██████████| 50/50 [00:30<00:00,  1.64it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a98a0>
[DeepCache DPS Debug] t=49, grad_norm: 194.932404, grad_max: 6.266020
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:51,  1.04s/it]  4%|▍         | 2/50 [00:01<00:33,  1.43it/s]  6%|▌         | 3/50 [00:01<00:27,  1.70it/s]  8%|▊         | 4/50 [00:02<00:24,  1.86it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] t=0, grad_norm: 55.536510, grad_max: 1.471550
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=1, grad_norm: 43.721313, grad_max: 1.125955
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9330>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9330>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effafc03100>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effafc03100>
[DeepCache DPS Debug] t=2, grad_norm: 34.595261, grad_max: 0.740799
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effafc02e60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effafc02e60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=3, grad_norm: 28.516569, grad_max: 0.682153
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190> 10%|█         | 5/50 [00:03<00:32,  1.38it/s] 12%|█▏        | 6/50 [00:03<00:27,  1.58it/s] 14%|█▍        | 7/50 [00:04<00:24,  1.75it/s] 16%|█▌        | 8/50 [00:04<00:22,  1.86it/s] 18%|█▊        | 9/50 [00:05<00:28,  1.43it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] t=4, grad_norm: 41.947872, grad_max: 2.336456
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] t=5, grad_norm: 24.611303, grad_max: 0.589728
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] t=6, grad_norm: 20.079231, grad_max: 0.566836
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=7, grad_norm: 16.409313, grad_max: 0.392712
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=8, grad_norm: 33.892506, grad_max: 0.791320
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:06<00:24,  1.61it/s] 22%|██▏       | 11/50 [00:06<00:22,  1.75it/s] 24%|██▍       | 12/50 [00:07<00:20,  1.86it/s] 26%|██▌       | 13/50 [00:08<00:25,  1.44it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] t=9, grad_norm: 18.293325, grad_max: 0.408988
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=10, grad_norm: 14.005198, grad_max: 0.387267
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] t=11, grad_norm: 12.193982, grad_max: 0.254860
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] t=12, grad_norm: 21.882307, grad_max: 0.584883
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0> 28%|██▊       | 14/50 [00:08<00:22,  1.60it/s] 30%|███       | 15/50 [00:09<00:20,  1.74it/s] 32%|███▏      | 16/50 [00:09<00:18,  1.85it/s] 34%|███▍      | 17/50 [00:10<00:22,  1.44it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] t=13, grad_norm: 30.727579, grad_max: 0.569662
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=14, grad_norm: 20.325741, grad_max: 0.537164
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=15, grad_norm: 16.603277, grad_max: 0.338298
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] t=16, grad_norm: 15.095748, grad_max: 0.243605
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=17, grad_norm: 52.559063, grad_max: 0.887413
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190> 36%|███▌      | 18/50 [00:11<00:19,  1.60it/s] 38%|███▊      | 19/50 [00:11<00:17,  1.74it/s] 40%|████      | 20/50 [00:12<00:16,  1.85it/s] 42%|████▏     | 21/50 [00:13<00:20,  1.44it/s] 44%|████▍     | 22/50 [00:13<00:17,  1.60it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] t=18, grad_norm: 35.363987, grad_max: 0.656755
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] t=19, grad_norm: 29.653183, grad_max: 0.588999
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] t=20, grad_norm: 15.641219, grad_max: 0.245587
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=21, grad_norm: 59.748936, grad_max: 1.189054
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:14<00:15,  1.74it/s] 48%|████▊     | 24/50 [00:14<00:14,  1.84it/s] 50%|█████     | 25/50 [00:15<00:17,  1.43it/s] 52%|█████▏    | 26/50 [00:16<00:15,  1.59it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=22, grad_norm: 38.357773, grad_max: 0.937575
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] t=23, grad_norm: 35.572872, grad_max: 0.749065
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=24, grad_norm: 20.716356, grad_max: 0.506709
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] t=25, grad_norm: 52.033520, grad_max: 0.912160
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] t=26, grad_norm: 41.653458, grad_max: 0.760426
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0> 54%|█████▍    | 27/50 [00:16<00:13,  1.73it/s] 56%|█████▌    | 28/50 [00:17<00:11,  1.84it/s] 58%|█████▊    | 29/50 [00:18<00:14,  1.43it/s] 60%|██████    | 30/50 [00:18<00:12,  1.59it/s] 62%|██████▏   | 31/50 [00:19<00:10,  1.73it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] t=27, grad_norm: 36.541451, grad_max: 0.687131
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=28, grad_norm: 28.997526, grad_max: 1.208169
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=29, grad_norm: 60.091385, grad_max: 1.439222
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] t=30, grad_norm: 44.521641, grad_max: 0.752544
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:19<00:09,  1.83it/s] 66%|██████▌   | 33/50 [00:20<00:11,  1.42it/s] 68%|██████▊   | 34/50 [00:21<00:10,  1.58it/s] 70%|███████   | 35/50 [00:21<00:08,  1.72it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=31, grad_norm: 37.984119, grad_max: 0.574360
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] t=32, grad_norm: 42.061947, grad_max: 1.472854
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] t=33, grad_norm: 71.053429, grad_max: 2.233872
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] t=34, grad_norm: 50.411499, grad_max: 1.564455
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=35, grad_norm: 41.130501, grad_max: 1.141027
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0> 72%|███████▏  | 36/50 [00:21<00:07,  1.83it/s] 74%|███████▍  | 37/50 [00:23<00:09,  1.42it/s] 76%|███████▌  | 38/50 [00:23<00:07,  1.58it/s] 78%|███████▊  | 39/50 [00:23<00:06,  1.72it/s] 80%|████████  | 40/50 [00:24<00:05,  1.83it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=36, grad_norm: 47.264332, grad_max: 1.624046
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] t=37, grad_norm: 97.409302, grad_max: 2.320119
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=38, grad_norm: 72.566231, grad_max: 1.618500
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] t=39, grad_norm: 59.179207, grad_max: 1.896215
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:25<00:06,  1.42it/s] 84%|████████▍ | 42/50 [00:25<00:05,  1.58it/s] 86%|████████▌ | 43/50 [00:26<00:04,  1.72it/s] 88%|████████▊ | 44/50 [00:26<00:03,  1.83it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] t=40, grad_norm: 55.480209, grad_max: 1.857351
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] t=41, grad_norm: 115.001007, grad_max: 2.556767
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=42, grad_norm: 100.906509, grad_max: 3.478949
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=43, grad_norm: 101.461014, grad_max: 2.405709
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] t=44, grad_norm: 85.512444, grad_max: 4.313702
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80> 90%|█████████ | 45/50 [00:27<00:03,  1.43it/s] 92%|█████████▏| 46/50 [00:28<00:02,  1.58it/s] 94%|█████████▍| 47/50 [00:28<00:01,  1.73it/s] 96%|█████████▌| 48/50 [00:29<00:01,  1.84it/s] 98%|█████████▊| 49/50 [00:30<00:00,  1.43it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=45, grad_norm: 168.162170, grad_max: 4.609287
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a8190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a8190>
[DeepCache DPS Debug] t=46, grad_norm: 147.433426, grad_max: 3.763758
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9150>
[DeepCache DPS Debug] t=47, grad_norm: 183.364639, grad_max: 5.531601
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a94e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a94e0>
[DeepCache DPS Debug] t=48, grad_norm: 222.815933, grad_max: 9.547670
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>100%|██████████| 50/50 [00:31<00:00,  1.23it/s]100%|██████████| 50/50 [00:31<00:00,  1.59it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=49, grad_norm: 209.270248, grad_max: 13.832697
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:52,  1.07s/it]  4%|▍         | 2/50 [00:01<00:34,  1.40it/s]  6%|▌         | 3/50 [00:02<00:28,  1.67it/s]  8%|▊         | 4/50 [00:02<00:25,  1.84it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=0, grad_norm: 55.195530, grad_max: 2.381653
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] t=1, grad_norm: 43.496170, grad_max: 1.427493
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=2, grad_norm: 34.994778, grad_max: 0.838742
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=3, grad_norm: 28.769093, grad_max: 0.708003
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0> 10%|█         | 5/50 [00:03<00:32,  1.37it/s] 12%|█▏        | 6/50 [00:03<00:28,  1.56it/s] 14%|█▍        | 7/50 [00:04<00:25,  1.72it/s] 16%|█▌        | 8/50 [00:04<00:22,  1.83it/s] 18%|█▊        | 9/50 [00:05<00:29,  1.41it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=4, grad_norm: 42.909126, grad_max: 1.821365
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=5, grad_norm: 24.256113, grad_max: 0.523955
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=6, grad_norm: 19.382507, grad_max: 0.466605
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=7, grad_norm: 16.199003, grad_max: 0.343836
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] t=8, grad_norm: 33.570797, grad_max: 1.079543
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:06<00:25,  1.57it/s] 22%|██▏       | 11/50 [00:06<00:22,  1.71it/s] 24%|██▍       | 12/50 [00:07<00:20,  1.82it/s] 26%|██▌       | 13/50 [00:08<00:26,  1.42it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=9, grad_norm: 18.282616, grad_max: 0.433806
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=10, grad_norm: 13.784745, grad_max: 0.330455
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=11, grad_norm: 12.102204, grad_max: 0.311034
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=12, grad_norm: 21.646296, grad_max: 0.729023
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890> 28%|██▊       | 14/50 [00:08<00:22,  1.57it/s] 30%|███       | 15/50 [00:09<00:20,  1.71it/s] 32%|███▏      | 16/50 [00:09<00:18,  1.82it/s] 34%|███▍      | 17/50 [00:10<00:23,  1.42it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=13, grad_norm: 31.222084, grad_max: 0.598819
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=14, grad_norm: 20.128595, grad_max: 0.542200
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=15, grad_norm: 16.426331, grad_max: 0.340707
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] t=16, grad_norm: 13.669451, grad_max: 0.203953
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=17, grad_norm: 53.650841, grad_max: 0.921566
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0> 36%|███▌      | 18/50 [00:11<00:20,  1.58it/s] 38%|███▊      | 19/50 [00:11<00:18,  1.72it/s] 40%|████      | 20/50 [00:12<00:16,  1.83it/s] 42%|████▏     | 21/50 [00:13<00:20,  1.42it/s] 44%|████▍     | 22/50 [00:13<00:17,  1.58it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=18, grad_norm: 36.821651, grad_max: 0.768114
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=19, grad_norm: 29.759445, grad_max: 0.517657
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=20, grad_norm: 15.345778, grad_max: 0.236112
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=21, grad_norm: 57.772942, grad_max: 0.901012
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:14<00:15,  1.72it/s] 48%|████▊     | 24/50 [00:14<00:14,  1.83it/s] 50%|█████     | 25/50 [00:15<00:17,  1.43it/s] 52%|█████▏    | 26/50 [00:16<00:15,  1.59it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=22, grad_norm: 39.830837, grad_max: 0.906702
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=23, grad_norm: 32.941181, grad_max: 0.613312
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] t=24, grad_norm: 23.839388, grad_max: 0.667570
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=25, grad_norm: 51.960236, grad_max: 0.989977
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=26, grad_norm: 41.519669, grad_max: 0.597115
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940> 54%|█████▍    | 27/50 [00:16<00:13,  1.72it/s] 56%|█████▌    | 28/50 [00:17<00:12,  1.82it/s] 58%|█████▊    | 29/50 [00:18<00:14,  1.41it/s] 60%|██████    | 30/50 [00:18<00:12,  1.57it/s] 62%|██████▏   | 31/50 [00:19<00:11,  1.70it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=27, grad_norm: 36.634956, grad_max: 0.572512
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=28, grad_norm: 32.352165, grad_max: 1.049580
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=29, grad_norm: 59.131317, grad_max: 1.221950
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=30, grad_norm: 43.991596, grad_max: 0.958745
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:19<00:09,  1.82it/s] 66%|██████▌   | 33/50 [00:20<00:12,  1.41it/s] 68%|██████▊   | 34/50 [00:21<00:10,  1.57it/s] 70%|███████   | 35/50 [00:21<00:08,  1.70it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=31, grad_norm: 37.608849, grad_max: 0.644166
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] t=32, grad_norm: 39.345768, grad_max: 1.016465
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=33, grad_norm: 70.655647, grad_max: 1.705830
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=34, grad_norm: 47.615646, grad_max: 1.223588
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=35, grad_norm: 41.315632, grad_max: 1.021436
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0> 72%|███████▏  | 36/50 [00:22<00:07,  1.82it/s] 74%|███████▍  | 37/50 [00:23<00:09,  1.41it/s] 76%|███████▌  | 38/50 [00:23<00:07,  1.57it/s] 78%|███████▊  | 39/50 [00:24<00:06,  1.70it/s] 80%|████████  | 40/50 [00:24<00:05,  1.81it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=36, grad_norm: 51.440723, grad_max: 2.246092
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=37, grad_norm: 91.019714, grad_max: 2.106779
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=38, grad_norm: 69.909233, grad_max: 1.529608
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=39, grad_norm: 59.361485, grad_max: 1.818596
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:25<00:06,  1.40it/s] 84%|████████▍ | 42/50 [00:26<00:05,  1.56it/s] 86%|████████▌ | 43/50 [00:26<00:04,  1.70it/s] 88%|████████▊ | 44/50 [00:27<00:03,  1.81it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] t=40, grad_norm: 67.762047, grad_max: 3.342965
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=41, grad_norm: 118.380325, grad_max: 3.659961
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=42, grad_norm: 97.516815, grad_max: 1.919286
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=43, grad_norm: 95.823990, grad_max: 2.676423
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=44, grad_norm: 77.166367, grad_max: 3.652079
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890> 90%|█████████ | 45/50 [00:28<00:03,  1.41it/s] 92%|█████████▏| 46/50 [00:28<00:02,  1.56it/s] 94%|█████████▍| 47/50 [00:29<00:01,  1.69it/s] 96%|█████████▌| 48/50 [00:29<00:01,  1.81it/s] 98%|█████████▊| 49/50 [00:30<00:00,  1.40it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=45, grad_norm: 175.024994, grad_max: 4.651049
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=46, grad_norm: 155.101562, grad_max: 4.987678
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=47, grad_norm: 175.953751, grad_max: 5.107275
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] t=48, grad_norm: 179.742584, grad_max: 8.433652
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>100%|██████████| 50/50 [00:31<00:00,  1.21it/s]100%|██████████| 50/50 [00:31<00:00,  1.57it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=49, grad_norm: 206.461700, grad_max: 6.399199
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:53,  1.09s/it]  4%|▍         | 2/50 [00:01<00:34,  1.38it/s]  6%|▌         | 3/50 [00:02<00:28,  1.65it/s]  8%|▊         | 4/50 [00:02<00:25,  1.80it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95a0>
[DeepCache DPS Debug] t=0, grad_norm: 56.585915, grad_max: 1.482513
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=1, grad_norm: 43.320766, grad_max: 1.279634
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a95d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a95d0>
[DeepCache DPS Debug] t=2, grad_norm: 34.625557, grad_max: 0.744748
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=3, grad_norm: 28.645321, grad_max: 0.625549
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08aac80> 10%|█         | 5/50 [00:03<00:33,  1.34it/s] 12%|█▏        | 6/50 [00:04<00:28,  1.53it/s] 14%|█▍        | 7/50 [00:04<00:25,  1.69it/s] 16%|█▌        | 8/50 [00:05<00:23,  1.80it/s] 18%|█▊        | 9/50 [00:06<00:29,  1.38it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08aac80>
[DeepCache DPS Debug] t=4, grad_norm: 41.242630, grad_max: 1.164085
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=5, grad_norm: 24.216665, grad_max: 0.606511
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effd08a9750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effd08a9750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] t=6, grad_norm: 19.307281, grad_max: 0.446616
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] t=7, grad_norm: 16.198015, grad_max: 0.370425
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] t=8, grad_norm: 34.245304, grad_max: 1.029846
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:06<00:25,  1.55it/s] 22%|██▏       | 11/50 [00:07<00:23,  1.69it/s] 24%|██▍       | 12/50 [00:07<00:21,  1.81it/s] 26%|██▌       | 13/50 [00:08<00:26,  1.40it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] t=9, grad_norm: 18.187990, grad_max: 0.448946
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] t=10, grad_norm: 14.002873, grad_max: 0.283676
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] t=11, grad_norm: 11.973041, grad_max: 0.252290
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=12, grad_norm: 22.088350, grad_max: 0.443754
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460> 28%|██▊       | 14/50 [00:09<00:23,  1.56it/s] 30%|███       | 15/50 [00:09<00:20,  1.70it/s] 32%|███▏      | 16/50 [00:09<00:18,  1.81it/s] 34%|███▍      | 17/50 [00:11<00:23,  1.40it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] t=13, grad_norm: 32.220978, grad_max: 0.753413
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=14, grad_norm: 20.705704, grad_max: 0.389751
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=15, grad_norm: 16.889606, grad_max: 0.360418
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] t=16, grad_norm: 14.047027, grad_max: 0.230685
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] t=17, grad_norm: 51.762642, grad_max: 1.041614
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0> 36%|███▌      | 18/50 [00:11<00:20,  1.55it/s] 38%|███▊      | 19/50 [00:12<00:18,  1.69it/s] 40%|████      | 20/50 [00:12<00:16,  1.80it/s] 42%|████▏     | 21/50 [00:13<00:20,  1.40it/s] 44%|████▍     | 22/50 [00:14<00:17,  1.56it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] t=18, grad_norm: 35.170971, grad_max: 0.586399
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] t=19, grad_norm: 28.807957, grad_max: 0.611114
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=20, grad_norm: 15.191202, grad_max: 0.231385
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] t=21, grad_norm: 59.932003, grad_max: 1.540476
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:14<00:15,  1.69it/s] 48%|████▊     | 24/50 [00:15<00:14,  1.81it/s] 50%|█████     | 25/50 [00:16<00:17,  1.40it/s] 52%|█████▏    | 26/50 [00:16<00:15,  1.56it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=22, grad_norm: 40.802277, grad_max: 0.873690
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=23, grad_norm: 33.539612, grad_max: 0.708274
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] t=24, grad_norm: 22.911854, grad_max: 1.032642
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] t=25, grad_norm: 52.396240, grad_max: 0.833722
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] t=26, grad_norm: 41.523788, grad_max: 0.668169
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0> 54%|█████▍    | 27/50 [00:17<00:13,  1.69it/s] 56%|█████▌    | 28/50 [00:17<00:12,  1.80it/s] 58%|█████▊    | 29/50 [00:18<00:15,  1.40it/s] 60%|██████    | 30/50 [00:19<00:12,  1.55it/s] 62%|██████▏   | 31/50 [00:19<00:11,  1.69it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] t=27, grad_norm: 36.613689, grad_max: 0.577142
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=28, grad_norm: 40.925480, grad_max: 2.867749
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] t=29, grad_norm: 57.900387, grad_max: 1.139881
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=30, grad_norm: 44.095688, grad_max: 1.365490
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:20<00:10,  1.80it/s] 66%|██████▌   | 33/50 [00:21<00:12,  1.39it/s] 68%|██████▊   | 34/50 [00:21<00:10,  1.55it/s] 70%|███████   | 35/50 [00:22<00:08,  1.69it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=31, grad_norm: 37.724056, grad_max: 0.824466
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] t=32, grad_norm: 39.726814, grad_max: 1.594794
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] t=33, grad_norm: 65.825706, grad_max: 1.446752
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] t=34, grad_norm: 48.689602, grad_max: 1.036476
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] t=35, grad_norm: 40.093143, grad_max: 1.156002
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940> 72%|███████▏  | 36/50 [00:22<00:07,  1.79it/s] 74%|███████▍  | 37/50 [00:23<00:09,  1.39it/s] 76%|███████▌  | 38/50 [00:24<00:07,  1.55it/s] 78%|███████▊  | 39/50 [00:24<00:06,  1.68it/s] 80%|████████  | 40/50 [00:25<00:05,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=36, grad_norm: 53.086182, grad_max: 3.038548
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] t=37, grad_norm: 97.556664, grad_max: 3.184204
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=38, grad_norm: 71.447372, grad_max: 2.204556
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=39, grad_norm: 59.528557, grad_max: 1.830644
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:26<00:06,  1.39it/s] 84%|████████▍ | 42/50 [00:26<00:05,  1.54it/s] 86%|████████▌ | 43/50 [00:27<00:04,  1.68it/s] 88%|████████▊ | 44/50 [00:27<00:03,  1.79it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] t=40, grad_norm: 60.660736, grad_max: 2.702514
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] t=41, grad_norm: 120.823662, grad_max: 2.750851
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] t=42, grad_norm: 97.264580, grad_max: 2.508110
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] t=43, grad_norm: 92.572311, grad_max: 3.126295
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=44, grad_norm: 85.530945, grad_max: 4.859366
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460> 90%|█████████ | 45/50 [00:28<00:03,  1.39it/s] 92%|█████████▏| 46/50 [00:29<00:02,  1.55it/s] 94%|█████████▍| 47/50 [00:29<00:01,  1.68it/s] 96%|█████████▌| 48/50 [00:30<00:01,  1.78it/s] 98%|█████████▊| 49/50 [00:31<00:00,  1.39it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] t=45, grad_norm: 167.305588, grad_max: 5.074439
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=46, grad_norm: 152.933151, grad_max: 3.396927
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=47, grad_norm: 166.825974, grad_max: 5.544577
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] t=48, grad_norm: 198.414551, grad_max: 8.890523
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>100%|██████████| 50/50 [00:32<00:00,  1.20it/s]100%|██████████| 50/50 [00:32<00:00,  1.55it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] t=49, grad_norm: 236.492584, grad_max: 9.072908
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:53,  1.09s/it]  4%|▍         | 2/50 [00:01<00:34,  1.38it/s]  6%|▌         | 3/50 [00:02<00:28,  1.64it/s]  8%|▊         | 4/50 [00:02<00:25,  1.80it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] t=0, grad_norm: 58.310833, grad_max: 1.722382
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] t=1, grad_norm: 43.237076, grad_max: 1.258320
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=2, grad_norm: 34.655167, grad_max: 0.711005
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] t=3, grad_norm: 28.955654, grad_max: 0.670645
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890> 10%|█         | 5/50 [00:03<00:33,  1.33it/s] 12%|█▏        | 6/50 [00:04<00:28,  1.53it/s] 14%|█▍        | 7/50 [00:04<00:25,  1.68it/s] 16%|█▌        | 8/50 [00:05<00:23,  1.79it/s] 18%|█▊        | 9/50 [00:06<00:29,  1.38it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=4, grad_norm: 41.288666, grad_max: 1.973663
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=5, grad_norm: 24.431089, grad_max: 0.552689
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac694d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac694d90>
[DeepCache DPS Debug] t=6, grad_norm: 19.663975, grad_max: 0.458091
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04fa30>
[DeepCache DPS Debug] t=7, grad_norm: 16.325829, grad_max: 0.372803
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697eb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697eb0>
[DeepCache DPS Debug] t=8, grad_norm: 33.533497, grad_max: 0.757118
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:06<00:25,  1.54it/s] 22%|██▏       | 11/50 [00:07<00:23,  1.68it/s] 24%|██▍       | 12/50 [00:07<00:21,  1.79it/s] 26%|██▌       | 13/50 [00:08<00:26,  1.39it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f8e0>
[DeepCache DPS Debug] t=9, grad_norm: 18.481457, grad_max: 0.423517
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] t=10, grad_norm: 13.746534, grad_max: 0.325475
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04f460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04f460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=11, grad_norm: 12.066437, grad_max: 0.336021
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=12, grad_norm: 22.006607, grad_max: 0.412651
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940> 28%|██▊       | 14/50 [00:09<00:23,  1.55it/s] 30%|███       | 15/50 [00:09<00:20,  1.68it/s] 32%|███▏      | 16/50 [00:10<00:19,  1.78it/s] 34%|███▍      | 17/50 [00:11<00:23,  1.39it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=13, grad_norm: 31.672462, grad_max: 0.697173
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=14, grad_norm: 20.458239, grad_max: 0.498082
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=15, grad_norm: 16.788240, grad_max: 0.317016
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=16, grad_norm: 13.948744, grad_max: 0.239091
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=17, grad_norm: 53.862179, grad_max: 1.148358
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0> 36%|███▌      | 18/50 [00:11<00:20,  1.55it/s] 38%|███▊      | 19/50 [00:12<00:18,  1.68it/s] 40%|████      | 20/50 [00:12<00:16,  1.79it/s] 42%|████▏     | 21/50 [00:13<00:20,  1.40it/s] 44%|████▍     | 22/50 [00:14<00:18,  1.55it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=18, grad_norm: 35.755917, grad_max: 0.976955
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=19, grad_norm: 29.158579, grad_max: 0.651247
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=20, grad_norm: 15.027995, grad_max: 0.219189
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=21, grad_norm: 60.461834, grad_max: 0.978431
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:14<00:15,  1.69it/s] 48%|████▊     | 24/50 [00:15<00:14,  1.80it/s] 50%|█████     | 25/50 [00:16<00:17,  1.40it/s] 52%|█████▏    | 26/50 [00:16<00:15,  1.56it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=22, grad_norm: 39.388123, grad_max: 0.877937
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=23, grad_norm: 33.238739, grad_max: 0.714152
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=24, grad_norm: 21.734900, grad_max: 0.727280
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=25, grad_norm: 52.430267, grad_max: 1.064195
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=26, grad_norm: 41.205776, grad_max: 0.674644
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370> 54%|█████▍    | 27/50 [00:17<00:13,  1.69it/s] 56%|█████▌    | 28/50 [00:17<00:12,  1.80it/s] 58%|█████▊    | 29/50 [00:18<00:15,  1.40it/s] 60%|██████    | 30/50 [00:19<00:12,  1.55it/s] 62%|██████▏   | 31/50 [00:19<00:11,  1.69it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=27, grad_norm: 37.118595, grad_max: 0.655868
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=28, grad_norm: 35.831417, grad_max: 1.559836
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=29, grad_norm: 59.398228, grad_max: 2.541148
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=30, grad_norm: 44.154377, grad_max: 1.276214
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:20<00:10,  1.80it/s] 66%|██████▌   | 33/50 [00:21<00:12,  1.39it/s] 68%|██████▊   | 34/50 [00:21<00:10,  1.55it/s] 70%|███████   | 35/50 [00:22<00:08,  1.68it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=31, grad_norm: 37.176937, grad_max: 0.632724
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=32, grad_norm: 45.019207, grad_max: 1.621932
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=33, grad_norm: 67.731903, grad_max: 2.548480
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=34, grad_norm: 47.610535, grad_max: 0.931922
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=35, grad_norm: 42.208237, grad_max: 1.172807
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0> 72%|███████▏  | 36/50 [00:22<00:07,  1.79it/s] 74%|███████▍  | 37/50 [00:23<00:09,  1.40it/s] 76%|███████▌  | 38/50 [00:24<00:07,  1.55it/s] 78%|███████▊  | 39/50 [00:24<00:06,  1.69it/s] 80%|████████  | 40/50 [00:25<00:05,  1.80it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=36, grad_norm: 58.821274, grad_max: 5.090716
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=37, grad_norm: 99.752907, grad_max: 2.629796
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=38, grad_norm: 68.845688, grad_max: 1.939236
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=39, grad_norm: 62.240829, grad_max: 1.662007
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:26<00:06,  1.40it/s] 84%|████████▍ | 42/50 [00:26<00:05,  1.55it/s] 86%|████████▌ | 43/50 [00:27<00:04,  1.69it/s] 88%|████████▊ | 44/50 [00:27<00:03,  1.80it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=40, grad_norm: 66.922661, grad_max: 3.833389
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=41, grad_norm: 118.218430, grad_max: 3.342090
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=42, grad_norm: 97.816315, grad_max: 2.922020
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=43, grad_norm: 92.267319, grad_max: 2.068904
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=44, grad_norm: 81.480576, grad_max: 3.780667
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370> 90%|█████████ | 45/50 [00:28<00:03,  1.39it/s] 92%|█████████▏| 46/50 [00:29<00:02,  1.55it/s] 94%|█████████▍| 47/50 [00:29<00:01,  1.68it/s] 96%|█████████▌| 48/50 [00:30<00:01,  1.79it/s] 98%|█████████▊| 49/50 [00:31<00:00,  1.39it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=45, grad_norm: 159.799332, grad_max: 5.085782
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=46, grad_norm: 149.941284, grad_max: 3.715152
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=47, grad_norm: 155.854858, grad_max: 4.187557
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=48, grad_norm: 168.486282, grad_max: 9.585526
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>100%|██████████| 50/50 [00:32<00:00,  1.20it/s]100%|██████████| 50/50 [00:32<00:00,  1.55it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=49, grad_norm: 187.513901, grad_max: 5.694587
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:53,  1.10s/it]  4%|▍         | 2/50 [00:01<00:35,  1.37it/s]  6%|▌         | 3/50 [00:02<00:28,  1.64it/s]  8%|▊         | 4/50 [00:02<00:25,  1.80it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=0, grad_norm: 55.711838, grad_max: 1.405960
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=1, grad_norm: 43.270733, grad_max: 0.928888
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=2, grad_norm: 34.589664, grad_max: 0.843771
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=3, grad_norm: 28.895964, grad_max: 0.775179
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0> 10%|█         | 5/50 [00:03<00:33,  1.33it/s] 12%|█▏        | 6/50 [00:04<00:29,  1.52it/s] 14%|█▍        | 7/50 [00:04<00:25,  1.66it/s] 16%|█▌        | 8/50 [00:05<00:23,  1.79it/s] 18%|█▊        | 9/50 [00:06<00:29,  1.38it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=4, grad_norm: 42.468727, grad_max: 1.667084
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=5, grad_norm: 24.553865, grad_max: 0.715624
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=6, grad_norm: 19.506807, grad_max: 0.431281
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=7, grad_norm: 16.491461, grad_max: 0.365011
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=8, grad_norm: 34.110607, grad_max: 1.353577
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:06<00:25,  1.55it/s] 22%|██▏       | 11/50 [00:07<00:23,  1.68it/s] 24%|██▍       | 12/50 [00:07<00:21,  1.79it/s] 26%|██▌       | 13/50 [00:08<00:26,  1.39it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=9, grad_norm: 18.423580, grad_max: 0.447424
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=10, grad_norm: 13.665292, grad_max: 0.392230
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=11, grad_norm: 11.874022, grad_max: 0.388970
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=12, grad_norm: 21.452614, grad_max: 0.348722
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370> 28%|██▊       | 14/50 [00:09<00:23,  1.55it/s] 30%|███       | 15/50 [00:09<00:20,  1.68it/s] 32%|███▏      | 16/50 [00:10<00:19,  1.79it/s] 34%|███▍      | 17/50 [00:11<00:23,  1.39it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=13, grad_norm: 31.572300, grad_max: 0.661026
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=14, grad_norm: 20.484324, grad_max: 0.408561
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=15, grad_norm: 16.664564, grad_max: 0.441385
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=16, grad_norm: 14.462953, grad_max: 0.232891
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac049ea0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac049ea0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04ded0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04ded0>
[DeepCache DPS Debug] t=17, grad_norm: 52.970394, grad_max: 0.905678
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940> 36%|███▌      | 18/50 [00:11<00:20,  1.55it/s] 38%|███▊      | 19/50 [00:12<00:18,  1.68it/s] 40%|████      | 20/50 [00:12<00:16,  1.79it/s] 42%|████▏     | 21/50 [00:13<00:20,  1.38it/s] 44%|████▍     | 22/50 [00:14<00:18,  1.54it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=18, grad_norm: 35.052872, grad_max: 0.746817
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] t=19, grad_norm: 29.230732, grad_max: 0.666644
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=20, grad_norm: 15.855136, grad_max: 0.236114
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=21, grad_norm: 58.117554, grad_max: 1.085793
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:14<00:16,  1.67it/s] 48%|████▊     | 24/50 [00:15<00:14,  1.78it/s] 50%|█████     | 25/50 [00:16<00:17,  1.39it/s] 52%|█████▏    | 26/50 [00:16<00:15,  1.55it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] t=22, grad_norm: 41.169273, grad_max: 0.852070
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=23, grad_norm: 33.620544, grad_max: 0.573785
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=24, grad_norm: 20.804850, grad_max: 0.377137
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] t=25, grad_norm: 52.457977, grad_max: 0.847752
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] t=26, grad_norm: 41.294125, grad_max: 0.879592
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940> 54%|█████▍    | 27/50 [00:17<00:13,  1.68it/s] 56%|█████▌    | 28/50 [00:17<00:12,  1.79it/s] 58%|█████▊    | 29/50 [00:18<00:15,  1.39it/s] 60%|██████    | 30/50 [00:19<00:12,  1.55it/s] 62%|██████▏   | 31/50 [00:19<00:11,  1.68it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=27, grad_norm: 36.825691, grad_max: 0.680463
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] t=28, grad_norm: 30.521851, grad_max: 1.084825
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=29, grad_norm: 60.309700, grad_max: 1.457692
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=30, grad_norm: 44.577248, grad_max: 0.752386
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:20<00:10,  1.78it/s] 66%|██████▌   | 33/50 [00:21<00:12,  1.38it/s] 68%|██████▊   | 34/50 [00:21<00:10,  1.54it/s] 70%|███████   | 35/50 [00:22<00:08,  1.68it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] t=31, grad_norm: 38.276253, grad_max: 0.625111
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=32, grad_norm: 52.944042, grad_max: 3.658972
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=33, grad_norm: 66.565414, grad_max: 1.483485
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] t=34, grad_norm: 50.225105, grad_max: 1.635398
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] t=35, grad_norm: 39.299667, grad_max: 0.731853
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940> 72%|███████▏  | 36/50 [00:22<00:07,  1.79it/s] 74%|███████▍  | 37/50 [00:23<00:09,  1.39it/s] 76%|███████▌  | 38/50 [00:24<00:07,  1.55it/s] 78%|███████▊  | 39/50 [00:24<00:06,  1.68it/s] 80%|████████  | 40/50 [00:25<00:05,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=36, grad_norm: 53.060532, grad_max: 1.768546
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] t=37, grad_norm: 99.576241, grad_max: 3.009474
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=38, grad_norm: 72.930336, grad_max: 2.320398
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=39, grad_norm: 59.731987, grad_max: 2.145413
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:26<00:06,  1.39it/s] 84%|████████▍ | 42/50 [00:26<00:05,  1.55it/s] 86%|████████▌ | 43/50 [00:27<00:04,  1.68it/s] 88%|████████▊ | 44/50 [00:27<00:03,  1.79it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b310>
[DeepCache DPS Debug] t=40, grad_norm: 56.073025, grad_max: 3.828591
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=41, grad_norm: 113.999466, grad_max: 2.883733
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06bbb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06bbb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=42, grad_norm: 106.487885, grad_max: 3.306187
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=43, grad_norm: 93.123428, grad_max: 2.748402
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=44, grad_norm: 89.405312, grad_max: 4.188981
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370> 90%|█████████ | 45/50 [00:28<00:03,  1.40it/s] 92%|█████████▏| 46/50 [00:29<00:02,  1.56it/s] 94%|█████████▍| 47/50 [00:29<00:01,  1.69it/s] 96%|█████████▌| 48/50 [00:30<00:01,  1.80it/s] 98%|█████████▊| 49/50 [00:31<00:00,  1.40it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=45, grad_norm: 162.714874, grad_max: 5.920937
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06bbb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06bbb0>
[DeepCache DPS Debug] t=46, grad_norm: 145.848145, grad_max: 3.990865
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=47, grad_norm: 156.229843, grad_max: 5.846412
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=48, grad_norm: 206.357834, grad_max: 14.503592
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b340>100%|██████████| 50/50 [00:32<00:00,  1.21it/s]100%|██████████| 50/50 [00:32<00:00,  1.54it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b340>
[DeepCache DPS Debug] t=49, grad_norm: 209.513580, grad_max: 5.985256
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06bbb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06bbb0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:53,  1.08s/it]  4%|▍         | 2/50 [00:01<00:34,  1.38it/s]  6%|▌         | 3/50 [00:02<00:28,  1.65it/s]  8%|▊         | 4/50 [00:02<00:25,  1.80it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=0, grad_norm: 55.501305, grad_max: 1.467545
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=1, grad_norm: 43.580803, grad_max: 1.231175
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=2, grad_norm: 34.392982, grad_max: 0.802098
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b340>
[DeepCache DPS Debug] t=3, grad_norm: 28.678009, grad_max: 0.831191
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06bbb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06bbb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0> 10%|█         | 5/50 [00:03<00:33,  1.34it/s] 12%|█▏        | 6/50 [00:04<00:28,  1.53it/s] 14%|█▍        | 7/50 [00:04<00:25,  1.68it/s] 16%|█▌        | 8/50 [00:05<00:23,  1.80it/s] 18%|█▊        | 9/50 [00:06<00:29,  1.38it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=4, grad_norm: 40.969166, grad_max: 1.249359
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=5, grad_norm: 24.592779, grad_max: 0.565651
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=6, grad_norm: 19.574915, grad_max: 0.424707
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] t=7, grad_norm: 16.278080, grad_max: 0.513317
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=8, grad_norm: 33.134945, grad_max: 1.109558
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:06<00:25,  1.55it/s] 22%|██▏       | 11/50 [00:07<00:23,  1.69it/s] 24%|██▍       | 12/50 [00:07<00:21,  1.79it/s] 26%|██▌       | 13/50 [00:08<00:26,  1.39it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=9, grad_norm: 18.741625, grad_max: 0.513813
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06bbb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06bbb0>
[DeepCache DPS Debug] t=10, grad_norm: 14.178624, grad_max: 0.328474
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=11, grad_norm: 12.218084, grad_max: 0.319295
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b130>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b130>
[DeepCache DPS Debug] t=12, grad_norm: 22.090574, grad_max: 0.398116
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0> 28%|██▊       | 14/50 [00:09<00:23,  1.55it/s] 30%|███       | 15/50 [00:09<00:20,  1.68it/s] 32%|███▏      | 16/50 [00:10<00:18,  1.79it/s] 34%|███▍      | 17/50 [00:11<00:23,  1.38it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=13, grad_norm: 31.724257, grad_max: 0.693404
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] t=14, grad_norm: 20.378847, grad_max: 0.432792
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04afe0>
[DeepCache DPS Debug] t=15, grad_norm: 16.745443, grad_max: 0.346243
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=16, grad_norm: 15.123844, grad_max: 0.459448
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06bbb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06bbb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=17, grad_norm: 53.383537, grad_max: 0.869733
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940> 36%|███▌      | 18/50 [00:11<00:20,  1.54it/s] 38%|███▊      | 19/50 [00:12<00:18,  1.67it/s] 40%|████      | 20/50 [00:12<00:16,  1.78it/s] 42%|████▏     | 21/50 [00:13<00:21,  1.38it/s] 44%|████▍     | 22/50 [00:14<00:18,  1.53it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=18, grad_norm: 35.006920, grad_max: 0.743654
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=19, grad_norm: 28.971176, grad_max: 0.505369
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=20, grad_norm: 14.163683, grad_max: 0.173902
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=21, grad_norm: 60.088158, grad_max: 1.035211
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:14<00:16,  1.67it/s] 48%|████▊     | 24/50 [00:15<00:14,  1.77it/s] 50%|█████     | 25/50 [00:16<00:18,  1.38it/s] 52%|█████▏    | 26/50 [00:16<00:15,  1.54it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] t=22, grad_norm: 39.518410, grad_max: 1.006152
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=23, grad_norm: 33.678581, grad_max: 0.589453
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=24, grad_norm: 17.809357, grad_max: 0.397037
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=25, grad_norm: 52.194557, grad_max: 0.921007
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=26, grad_norm: 40.954094, grad_max: 0.739323
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890> 54%|█████▍    | 27/50 [00:17<00:13,  1.67it/s] 56%|█████▌    | 28/50 [00:17<00:12,  1.78it/s] 58%|█████▊    | 29/50 [00:18<00:15,  1.39it/s] 60%|██████    | 30/50 [00:19<00:12,  1.55it/s] 62%|██████▏   | 31/50 [00:19<00:11,  1.68it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=27, grad_norm: 36.077694, grad_max: 0.668597
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=28, grad_norm: 34.468899, grad_max: 1.596213
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=29, grad_norm: 59.677002, grad_max: 1.457348
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] t=30, grad_norm: 43.540432, grad_max: 0.821538
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:20<00:10,  1.78it/s] 66%|██████▌   | 33/50 [00:21<00:12,  1.39it/s] 68%|██████▊   | 34/50 [00:21<00:10,  1.55it/s] 70%|███████   | 35/50 [00:22<00:08,  1.68it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=31, grad_norm: 37.904411, grad_max: 0.858448
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=32, grad_norm: 57.450264, grad_max: 2.976837
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=33, grad_norm: 68.142738, grad_max: 2.084391
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=34, grad_norm: 48.237663, grad_max: 1.080495
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=35, grad_norm: 40.375050, grad_max: 0.938054
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0> 72%|███████▏  | 36/50 [00:22<00:07,  1.78it/s] 74%|███████▍  | 37/50 [00:23<00:09,  1.39it/s] 76%|███████▌  | 38/50 [00:24<00:07,  1.55it/s] 78%|███████▊  | 39/50 [00:24<00:06,  1.68it/s] 80%|████████  | 40/50 [00:25<00:05,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=36, grad_norm: 47.996574, grad_max: 1.749496
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=37, grad_norm: 95.567581, grad_max: 2.231191
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] t=38, grad_norm: 72.759293, grad_max: 2.071754
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=39, grad_norm: 61.686985, grad_max: 1.648139
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:26<00:06,  1.39it/s] 84%|████████▍ | 42/50 [00:26<00:05,  1.54it/s] 86%|████████▌ | 43/50 [00:27<00:04,  1.67it/s] 88%|████████▊ | 44/50 [00:27<00:03,  1.78it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=40, grad_norm: 58.540493, grad_max: 2.561944
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=41, grad_norm: 117.075958, grad_max: 3.177702
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] t=42, grad_norm: 103.137848, grad_max: 2.631965
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=43, grad_norm: 95.097473, grad_max: 3.520408
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=44, grad_norm: 86.146515, grad_max: 6.446513
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac048370> 90%|█████████ | 45/50 [00:28<00:03,  1.38it/s] 92%|█████████▏| 46/50 [00:29<00:02,  1.54it/s] 94%|█████████▍| 47/50 [00:29<00:01,  1.67it/s] 96%|█████████▌| 48/50 [00:30<00:01,  1.79it/s] 98%|█████████▊| 49/50 [00:31<00:00,  1.38it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac048370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=45, grad_norm: 166.924820, grad_max: 8.053760
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] t=46, grad_norm: 157.752945, grad_max: 5.974533
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
[DeepCache DPS Debug] t=47, grad_norm: 146.495972, grad_max: 3.389318
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac06b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac06b3a0>
[DeepCache DPS Debug] t=48, grad_norm: 178.540375, grad_max: 7.266781
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac04bf70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac04bf70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac696890>100%|██████████| 50/50 [00:32<00:00,  1.20it/s]100%|██████████| 50/50 [00:32<00:00,  1.54it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac696890>
[DeepCache DPS Debug] t=49, grad_norm: 211.205536, grad_max: 6.412387
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7effac697940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7effac697940>
save npy to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=7_20250828_225256/cache_interval_4_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=7/bon=1/guidance_strength=1.0/images.npy
Saving images to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=7_20250828_225256/cache_interval_4_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=7/bon=1/guidance_strength=1.0/images.png
