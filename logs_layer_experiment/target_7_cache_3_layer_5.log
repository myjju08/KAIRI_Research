/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:441: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
attention mode is flash
logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=7_20250828_225256/cache_interval_3_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=7/bon=1/guidance_strength=1.0
Logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=7_20250828_225256/cache_interval_3_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=7/bon=1/guidance_strength=1.0
Arguments: Arguments(data_type='image', dataset='cifar10', task='label_guidance', image_size=32, include_charges=False, generators_path='./pretrained_models/EDMsecond/generative_model_ema.npy', args_generators_path='./pretrained_models/EDMsecond/args.pickle', energy_path='./pretrained_models/tf_predict_mu/model_ema_2000.npy', args_energy_path='./pretrained_models/tf_predict_mu/args_2000.pickle', classifiers_path='./pretrained_models/evaluate_mu/best_checkpoint.npy', args_classifiers_path='./pretrained_models/evaluate_mu/args.pickle', clip_scale=100, audio_length=10, volume_factor=80.0, motion_prompt='walk', radius=3.0, model_name_or_path='openai_cifar10.pt', model_type='unet', use_deepcache=True, cache_interval=3, cache_block_id=5, skip_mode='uniform', clean_step=0, vae='mse', train_steps=1000, inference_steps=50, eta=1.0, clip_x0=True, clip_sample_range=1.0, seed=42, device=device(type='cuda'), logging_dir='/home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=7_20250828_225256/cache_interval_3_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=7/bon=1/guidance_strength=1.0', logger=None, per_sample_batch_size=128, num_samples=1024, batch_id=0, guidance_name='dps', guider='classifier', target='7', recur_steps=1, iter_steps=4, guidance_strength=1.0, guidance_scale=1.0, start_gradient=50, use_early_exit=False, early_exit_layer=None, use_time_based_early_exit=False, time_early_exit_mapping=None, rho=1.0, mu=0.25, sigma=0.001, eps_bsz=1, rho_schedule='increase', mu_schedule='increase', sigma_schedule='decrease', guide_network='resnet_cifar10.pt', classifier_image_size=224, eval_batch_size=512, logging_resolution=512, log_suffix='', log_traj=False, max_show_images=256, check_done=False, wandb=False, wandb_project='trail', wandb_name=None, wandb_entity='llm-selection', saved_file=None, sort_metric=None, topk=5, output_path='vis_molecule', output_dir=None, max_n_samples=10000000000, bon_rate=1, bon_guidance=None)
[DeepCache] DeepCacheDPSGuidance 초기화: use_deepcache=True, cache_interval=3
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:56,  1.15s/it]  4%|▍         | 2/50 [00:01<00:32,  1.48it/s]  6%|▌         | 3/50 [00:01<00:24,  1.92it/s]  8%|▊         | 4/50 [00:02<00:28,  1.59it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache] DeepCache UNet 초기화: cache_interval=3, cache_block_id=5, clean_step=0
[DeepCache Debug] 첫 번째 실행: start_timestep=50
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bcb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bcb20>
[DeepCache DPS Debug] t=0, grad_norm: 55.934162, grad_max: 1.377548
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bc9d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bc9d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bca60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bca60>
[DeepCache DPS Debug] t=1, grad_norm: 43.766094, grad_max: 1.295159
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bc8b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bc8b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bca90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bca90>
[DeepCache DPS Debug] t=2, grad_norm: 34.301491, grad_max: 1.024314
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bca60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bca60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bcca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bcca0>
[DeepCache DPS Debug] t=3, grad_norm: 48.132450, grad_max: 1.248100
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bd360>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bd360>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bd7b0> 10%|█         | 5/50 [00:02<00:23,  1.89it/s] 12%|█▏        | 6/50 [00:03<00:20,  2.12it/s] 14%|█▍        | 7/50 [00:04<00:25,  1.70it/s] 16%|█▌        | 8/50 [00:04<00:21,  1.93it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bd7b0>
[DeepCache DPS Debug] t=4, grad_norm: 27.372162, grad_max: 0.601664
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bcb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bcb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bd8d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bd8d0>
[DeepCache DPS Debug] t=5, grad_norm: 22.275070, grad_max: 0.467777
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bd7b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bd7b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bd690>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bd690>
[DeepCache DPS Debug] t=6, grad_norm: 34.969646, grad_max: 1.213852
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bcb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bcb50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bda80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bda80>
[DeepCache DPS Debug] t=7, grad_norm: 19.646593, grad_max: 0.454624
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bcca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bcca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bdab0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bdab0>
[DeepCache DPS Debug] t=8, grad_norm: 15.735413, grad_max: 0.363423
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bda80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bda80> 18%|█▊        | 9/50 [00:04<00:19,  2.12it/s] 20%|██        | 10/50 [00:05<00:23,  1.71it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.93it/s] 24%|██▍       | 12/50 [00:06<00:18,  2.11it/s] 26%|██▌       | 13/50 [00:07<00:25,  1.48it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1d50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1d50>
[DeepCache DPS Debug] t=9, grad_norm: 30.333145, grad_max: 0.743221
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bdab0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bdab0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bd600>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bd600>
[DeepCache DPS Debug] t=10, grad_norm: 18.332289, grad_max: 0.371290
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bcb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bcb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bd210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bd210>
[DeepCache DPS Debug] t=11, grad_norm: 14.092931, grad_max: 0.272203
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bd600>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bd600>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b19f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b19f0>
[DeepCache DPS Debug] t=12, grad_norm: 21.702774, grad_max: 0.664391
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1fc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1c00> 28%|██▊       | 14/50 [00:08<00:21,  1.70it/s] 30%|███       | 15/50 [00:08<00:18,  1.90it/s] 32%|███▏      | 16/50 [00:09<00:21,  1.58it/s] 34%|███▍      | 17/50 [00:09<00:18,  1.78it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1c00>
[DeepCache DPS Debug] t=13, grad_norm: 31.209768, grad_max: 0.626535
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1b10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1b10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1c90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1c90>
[DeepCache DPS Debug] t=14, grad_norm: 20.567934, grad_max: 0.413920
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1c00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1c00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=15, grad_norm: 15.802141, grad_max: 0.342445
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1690>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1690>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b25f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b25f0>
[DeepCache DPS Debug] t=16, grad_norm: 45.881283, grad_max: 0.882749
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1ab0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1ab0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2710>
[DeepCache DPS Debug] t=17, grad_norm: 29.192533, grad_max: 0.755571
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b25f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b25f0> 36%|███▌      | 18/50 [00:10<00:16,  1.97it/s] 38%|███▊      | 19/50 [00:10<00:19,  1.60it/s] 40%|████      | 20/50 [00:11<00:16,  1.80it/s] 42%|████▏     | 21/50 [00:11<00:14,  1.98it/s] 44%|████▍     | 22/50 [00:12<00:17,  1.59it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b24a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b24a0>
[DeepCache DPS Debug] t=18, grad_norm: 14.327292, grad_max: 0.274979
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1330>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1330>
[DeepCache DPS Debug] t=19, grad_norm: 53.809940, grad_max: 1.086949
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b11e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b11e0>
[DeepCache DPS Debug] t=20, grad_norm: 43.473080, grad_max: 0.678032
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1330>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1330>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b19c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b19c0>
[DeepCache DPS Debug] t=21, grad_norm: 18.636019, grad_max: 0.391447
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b22c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b22c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b13f0> 46%|████▌     | 23/50 [00:13<00:15,  1.78it/s] 48%|████▊     | 24/50 [00:13<00:13,  1.95it/s] 50%|█████     | 25/50 [00:14<00:15,  1.58it/s] 52%|█████▏    | 26/50 [00:14<00:13,  1.77it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b13f0>
[DeepCache DPS Debug] t=22, grad_norm: 57.083324, grad_max: 0.793760
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b24a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b24a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1e10>
[DeepCache DPS Debug] t=23, grad_norm: 42.151463, grad_max: 0.740084
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b13f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b13f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1e40>
[DeepCache DPS Debug] t=24, grad_norm: 20.659168, grad_max: 0.409739
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1b10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1b10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2320>
[DeepCache DPS Debug] t=25, grad_norm: 52.583858, grad_max: 1.117244
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b19c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b19c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2740>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2740>
[DeepCache DPS Debug] t=26, grad_norm: 41.584560, grad_max: 0.810712
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2320> 54%|█████▍    | 27/50 [00:15<00:11,  1.94it/s] 56%|█████▌    | 28/50 [00:16<00:14,  1.56it/s] 58%|█████▊    | 29/50 [00:16<00:11,  1.75it/s] 60%|██████    | 30/50 [00:16<00:10,  1.91it/s] 62%|██████▏   | 31/50 [00:17<00:12,  1.54it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b26b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b26b0>
[DeepCache DPS Debug] t=27, grad_norm: 30.993860, grad_max: 1.141875
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2770>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2770>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2080>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2080>
[DeepCache DPS Debug] t=28, grad_norm: 58.055599, grad_max: 1.137194
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2830>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2830>
[DeepCache DPS Debug] t=29, grad_norm: 43.530598, grad_max: 0.978147
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2080>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2080>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2bc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2bc0>
[DeepCache DPS Debug] t=30, grad_norm: 35.333275, grad_max: 2.069572
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b24a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b24a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860> 64%|██████▍   | 32/50 [00:18<00:10,  1.73it/s] 66%|██████▌   | 33/50 [00:18<00:08,  1.89it/s] 68%|██████▊   | 34/50 [00:19<00:10,  1.53it/s] 70%|███████   | 35/50 [00:20<00:08,  1.72it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] t=31, grad_norm: 63.861393, grad_max: 1.605971
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b26b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b26b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2c80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2c80>
[DeepCache DPS Debug] t=32, grad_norm: 45.001102, grad_max: 1.007629
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8b687443a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8b687443a0>
[DeepCache DPS Debug] t=33, grad_norm: 43.135872, grad_max: 1.736194
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8b687456c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8b687456c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b29e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b29e0>
[DeepCache DPS Debug] t=34, grad_norm: 78.626038, grad_max: 2.492751
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3010>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3010>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] t=35, grad_norm: 52.656445, grad_max: 1.283510
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b29e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b29e0> 72%|███████▏  | 36/50 [00:20<00:07,  1.89it/s] 74%|███████▍  | 37/50 [00:21<00:08,  1.52it/s] 76%|███████▌  | 38/50 [00:21<00:07,  1.70it/s] 78%|███████▊  | 39/50 [00:22<00:05,  1.86it/s] 80%|████████  | 40/50 [00:23<00:06,  1.50it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=36, grad_norm: 54.473961, grad_max: 2.095072
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b39a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b39a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2e30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2e30>
[DeepCache DPS Debug] t=37, grad_norm: 95.484360, grad_max: 2.463768
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] t=38, grad_norm: 69.634346, grad_max: 2.339901
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2e30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2e30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] t=39, grad_norm: 70.615913, grad_max: 4.925834
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b35b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460> 82%|████████▏ | 41/50 [00:23<00:05,  1.68it/s] 84%|████████▍ | 42/50 [00:24<00:04,  1.84it/s] 86%|████████▌ | 43/50 [00:25<00:04,  1.48it/s] 88%|████████▊ | 44/50 [00:25<00:03,  1.67it/s] 90%|█████████ | 45/50 [00:25<00:02,  1.82it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460>
[DeepCache DPS Debug] t=40, grad_norm: 110.225357, grad_max: 3.298060
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3880>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] t=41, grad_norm: 91.317497, grad_max: 3.134233
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] t=42, grad_norm: 71.008209, grad_max: 2.770821
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] t=43, grad_norm: 128.915802, grad_max: 3.308883
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] t=44, grad_norm: 123.435509, grad_max: 2.534082
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:26<00:02,  1.48it/s] 94%|█████████▍| 47/50 [00:27<00:01,  1.66it/s] 96%|█████████▌| 48/50 [00:27<00:01,  1.83it/s] 98%|█████████▊| 49/50 [00:28<00:00,  1.47it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=45, grad_norm: 90.629883, grad_max: 4.783480
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] t=46, grad_norm: 191.513916, grad_max: 6.042686
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460>
[DeepCache DPS Debug] t=47, grad_norm: 182.521713, grad_max: 5.010402
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] t=48, grad_norm: 176.289032, grad_max: 19.437586
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] t=49, grad_norm: 183.151260, grad_max: 5.393647
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:29<00:00,  1.30it/s]100%|██████████| 50/50 [00:29<00:00,  1.68it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:48,  1.00it/s]  4%|▍         | 2/50 [00:01<00:31,  1.50it/s]  6%|▌         | 3/50 [00:01<00:26,  1.79it/s]  8%|▊         | 4/50 [00:02<00:33,  1.36it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] t=0, grad_norm: 54.399529, grad_max: 1.643295
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] t=1, grad_norm: 43.891502, grad_max: 0.957102
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=2, grad_norm: 35.001587, grad_max: 0.918599
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] t=3, grad_norm: 46.977722, grad_max: 1.018974
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460> 10%|█         | 5/50 [00:03<00:28,  1.60it/s] 12%|█▏        | 6/50 [00:03<00:24,  1.78it/s] 14%|█▍        | 7/50 [00:04<00:30,  1.42it/s] 16%|█▌        | 8/50 [00:05<00:25,  1.62it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460>
[DeepCache DPS Debug] t=4, grad_norm: 27.281279, grad_max: 0.750527
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] t=5, grad_norm: 21.914347, grad_max: 0.532652
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] t=6, grad_norm: 38.140953, grad_max: 1.666565
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] t=7, grad_norm: 19.820097, grad_max: 0.554072
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] t=8, grad_norm: 15.818316, grad_max: 0.381429
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730> 18%|█▊        | 9/50 [00:05<00:23,  1.78it/s] 20%|██        | 10/50 [00:06<00:28,  1.42it/s] 22%|██▏       | 11/50 [00:07<00:24,  1.61it/s] 24%|██▍       | 12/50 [00:07<00:21,  1.77it/s] 26%|██▌       | 13/50 [00:08<00:25,  1.43it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=9, grad_norm: 31.969719, grad_max: 0.693230
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] t=10, grad_norm: 18.388416, grad_max: 0.402443
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460>
[DeepCache DPS Debug] t=11, grad_norm: 14.197715, grad_max: 0.313818
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] t=12, grad_norm: 22.208467, grad_max: 0.405781
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760> 28%|██▊       | 14/50 [00:08<00:22,  1.61it/s] 30%|███       | 15/50 [00:09<00:19,  1.77it/s] 32%|███▏      | 16/50 [00:10<00:23,  1.43it/s] 34%|███▍      | 17/50 [00:10<00:20,  1.60it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] t=13, grad_norm: 31.127480, grad_max: 0.823819
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] t=14, grad_norm: 20.065649, grad_max: 0.447324
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] t=15, grad_norm: 15.983084, grad_max: 0.285702
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=16, grad_norm: 47.571888, grad_max: 0.987519
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] t=17, grad_norm: 29.689857, grad_max: 0.596433
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460> 36%|███▌      | 18/50 [00:11<00:18,  1.76it/s] 38%|███▊      | 19/50 [00:12<00:21,  1.43it/s] 40%|████      | 20/50 [00:12<00:18,  1.61it/s] 42%|████▏     | 21/50 [00:13<00:16,  1.76it/s] 44%|████▍     | 22/50 [00:14<00:19,  1.42it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460>
[DeepCache DPS Debug] t=18, grad_norm: 14.348309, grad_max: 0.375832
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] t=19, grad_norm: 56.040508, grad_max: 1.014125
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] t=20, grad_norm: 42.561535, grad_max: 0.779744
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] t=21, grad_norm: 15.652724, grad_max: 0.205039
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3040> 46%|████▌     | 23/50 [00:14<00:16,  1.59it/s] 48%|████▊     | 24/50 [00:15<00:14,  1.75it/s] 50%|█████     | 25/50 [00:16<00:17,  1.41it/s] 52%|█████▏    | 26/50 [00:16<00:15,  1.60it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3040>
[DeepCache DPS Debug] t=22, grad_norm: 58.578400, grad_max: 1.025355
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=23, grad_norm: 42.331490, grad_max: 0.960229
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2860>
[DeepCache DPS Debug] t=24, grad_norm: 19.003899, grad_max: 0.687178
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3460>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3460>
[DeepCache DPS Debug] t=25, grad_norm: 51.871567, grad_max: 0.920418
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3fa0>
[DeepCache DPS Debug] t=26, grad_norm: 41.553108, grad_max: 0.838148
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760> 54%|█████▍    | 27/50 [00:16<00:13,  1.75it/s] 56%|█████▌    | 28/50 [00:18<00:15,  1.41it/s] 58%|█████▊    | 29/50 [00:18<00:13,  1.58it/s] 60%|██████    | 30/50 [00:18<00:11,  1.73it/s] 62%|██████▏   | 31/50 [00:19<00:13,  1.40it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] t=27, grad_norm: 30.664520, grad_max: 1.191024
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2cb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2cb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a117a38e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a117a38e0>
[DeepCache DPS Debug] t=28, grad_norm: 57.056076, grad_max: 1.514189
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a14f08d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a14f08d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] t=29, grad_norm: 42.306831, grad_max: 1.416798
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b18a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b18a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=30, grad_norm: 36.697422, grad_max: 0.898993
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b16f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b16f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b16f0> 64%|██████▍   | 32/50 [00:20<00:11,  1.58it/s] 66%|██████▌   | 33/50 [00:20<00:09,  1.73it/s] 68%|██████▊   | 34/50 [00:21<00:11,  1.39it/s] 70%|███████   | 35/50 [00:22<00:09,  1.57it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b16f0>
[DeepCache DPS Debug] t=31, grad_norm: 62.128246, grad_max: 2.791497
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1e40>
[DeepCache DPS Debug] t=32, grad_norm: 47.734020, grad_max: 1.486414
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2ad0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2ad0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2ad0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2ad0>
[DeepCache DPS Debug] t=33, grad_norm: 45.289402, grad_max: 1.364278
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=34, grad_norm: 77.882629, grad_max: 1.758705
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3760>
[DeepCache DPS Debug] t=35, grad_norm: 50.613857, grad_max: 1.463434
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730> 72%|███████▏  | 36/50 [00:22<00:08,  1.72it/s] 74%|███████▍  | 37/50 [00:23<00:09,  1.39it/s] 76%|███████▌  | 38/50 [00:24<00:07,  1.57it/s] 78%|███████▊  | 39/50 [00:24<00:06,  1.71it/s] 80%|████████  | 40/50 [00:25<00:07,  1.39it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=36, grad_norm: 47.680260, grad_max: 2.599688
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b16f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b16f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b16f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b16f0>
[DeepCache DPS Debug] t=37, grad_norm: 97.386810, grad_max: 2.782130
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee8f3b80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee8f3b80>
[DeepCache DPS Debug] t=38, grad_norm: 67.125198, grad_max: 1.632484
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee8f1ae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee8f1ae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a14f08d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a14f08d00>
[DeepCache DPS Debug] t=39, grad_norm: 57.395863, grad_max: 3.000761
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee8f3b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee8f3b20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee8f3b20> 82%|████████▏ | 41/50 [00:26<00:05,  1.56it/s] 84%|████████▍ | 42/50 [00:26<00:04,  1.72it/s] 86%|████████▌ | 43/50 [00:27<00:05,  1.39it/s] 88%|████████▊ | 44/50 [00:28<00:03,  1.57it/s] 90%|█████████ | 45/50 [00:28<00:02,  1.71it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee8f3b20>
[DeepCache DPS Debug] t=40, grad_norm: 109.274612, grad_max: 2.607687
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a14f08ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a14f08ca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a14f08ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a14f08ca0>
[DeepCache DPS Debug] t=41, grad_norm: 95.427513, grad_max: 2.685115
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=42, grad_norm: 72.339668, grad_max: 4.218753
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee8f3b80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee8f3b80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee8f3b80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee8f3b80>
[DeepCache DPS Debug] t=43, grad_norm: 130.469986, grad_max: 4.696331
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a14f08ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a14f08ca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a14f08ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a14f08ca0>
[DeepCache DPS Debug] t=44, grad_norm: 113.455971, grad_max: 2.661752
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:29<00:02,  1.38it/s] 94%|█████████▍| 47/50 [00:30<00:01,  1.56it/s] 96%|█████████▌| 48/50 [00:30<00:01,  1.70it/s] 98%|█████████▊| 49/50 [00:31<00:00,  1.38it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=45, grad_norm: 93.728539, grad_max: 4.145250
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee8f3b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee8f3b20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee8f3b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee8f3b20>
[DeepCache DPS Debug] t=46, grad_norm: 189.026962, grad_max: 5.412377
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a14f08ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a14f08ca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a14f08ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a14f08ca0>
[DeepCache DPS Debug] t=47, grad_norm: 168.187912, grad_max: 4.167195
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=48, grad_norm: 173.378555, grad_max: 6.630928
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee8f3b80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee8f3b80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee8f3b80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee8f3b80>
[DeepCache DPS Debug] t=49, grad_norm: 217.645233, grad_max: 7.341126
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:32<00:00,  1.22it/s]100%|██████████| 50/50 [00:32<00:00,  1.53it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a14f08ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a14f08ca0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:51,  1.05s/it]  4%|▍         | 2/50 [00:01<00:33,  1.42it/s]  6%|▌         | 3/50 [00:01<00:27,  1.69it/s]  8%|▊         | 4/50 [00:03<00:35,  1.29it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f8a14f08ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f8a14f08ca0>
[DeepCache DPS Debug] t=0, grad_norm: 55.536549, grad_max: 1.471573
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=1, grad_norm: 43.721539, grad_max: 1.125955
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1150>
[DeepCache DPS Debug] t=2, grad_norm: 34.595703, grad_max: 0.740799
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=3, grad_norm: 50.188519, grad_max: 1.125313
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810> 10%|█         | 5/50 [00:03<00:29,  1.51it/s] 12%|█▏        | 6/50 [00:03<00:26,  1.69it/s] 14%|█▍        | 7/50 [00:05<00:32,  1.34it/s] 16%|█▌        | 8/50 [00:05<00:27,  1.53it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] t=4, grad_norm: 27.266623, grad_max: 0.720023
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15d0>
[DeepCache DPS Debug] t=5, grad_norm: 21.807266, grad_max: 0.453300
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] t=6, grad_norm: 36.096260, grad_max: 1.193573
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1510>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1510>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1510>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1510>
[DeepCache DPS Debug] t=7, grad_norm: 19.911842, grad_max: 0.458036
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=8, grad_norm: 15.877394, grad_max: 0.368279
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1150> 18%|█▊        | 9/50 [00:05<00:24,  1.69it/s] 20%|██        | 10/50 [00:06<00:29,  1.36it/s] 22%|██▏       | 11/50 [00:07<00:25,  1.53it/s] 24%|██▍       | 12/50 [00:07<00:22,  1.68it/s] 26%|██▌       | 13/50 [00:08<00:27,  1.36it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1150>
[DeepCache DPS Debug] t=9, grad_norm: 31.513157, grad_max: 1.267975
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=10, grad_norm: 18.353069, grad_max: 0.459924
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] t=11, grad_norm: 14.167647, grad_max: 0.344902
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15d0>
[DeepCache DPS Debug] t=12, grad_norm: 21.954193, grad_max: 0.599213
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750> 28%|██▊       | 14/50 [00:09<00:23,  1.53it/s] 30%|███       | 15/50 [00:09<00:20,  1.68it/s] 32%|███▏      | 16/50 [00:10<00:24,  1.36it/s] 34%|███▍      | 17/50 [00:11<00:21,  1.53it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] t=13, grad_norm: 30.757954, grad_max: 0.593527
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1510>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1510>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1510>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1510>
[DeepCache DPS Debug] t=14, grad_norm: 20.314354, grad_max: 0.536173
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=15, grad_norm: 16.258987, grad_max: 0.346418
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1150>
[DeepCache DPS Debug] t=16, grad_norm: 46.410370, grad_max: 1.003212
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=17, grad_norm: 29.766737, grad_max: 0.661817
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810> 36%|███▌      | 18/50 [00:11<00:19,  1.68it/s] 38%|███▊      | 19/50 [00:12<00:22,  1.36it/s] 40%|████      | 20/50 [00:13<00:19,  1.53it/s] 42%|████▏     | 21/50 [00:13<00:17,  1.68it/s] 44%|████▍     | 22/50 [00:14<00:20,  1.36it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] t=18, grad_norm: 14.131800, grad_max: 0.202884
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15d0>
[DeepCache DPS Debug] t=19, grad_norm: 56.406696, grad_max: 1.112511
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] t=20, grad_norm: 44.109764, grad_max: 0.723083
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1510>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1510>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1510>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1510>
[DeepCache DPS Debug] t=21, grad_norm: 15.638612, grad_max: 0.225370
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b3730> 46%|████▌     | 23/50 [00:15<00:17,  1.53it/s] 48%|████▊     | 24/50 [00:15<00:15,  1.68it/s] 50%|█████     | 25/50 [00:16<00:18,  1.36it/s] 52%|█████▏    | 26/50 [00:17<00:15,  1.53it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b3730>
[DeepCache DPS Debug] t=22, grad_norm: 59.203510, grad_max: 1.003769
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1150>
[DeepCache DPS Debug] t=23, grad_norm: 43.347942, grad_max: 0.819720
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=24, grad_norm: 20.185854, grad_max: 0.524363
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] t=25, grad_norm: 52.018330, grad_max: 0.916104
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=26, grad_norm: 41.664772, grad_max: 0.780241
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0> 54%|█████▍    | 27/50 [00:17<00:13,  1.68it/s] 56%|█████▌    | 28/50 [00:18<00:16,  1.36it/s] 58%|█████▊    | 29/50 [00:19<00:13,  1.53it/s] 60%|██████    | 30/50 [00:19<00:11,  1.67it/s] 62%|██████▏   | 31/50 [00:20<00:14,  1.36it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=27, grad_norm: 25.085857, grad_max: 0.679944
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=28, grad_norm: 56.660831, grad_max: 1.307314
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=29, grad_norm: 42.540722, grad_max: 0.766134
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=30, grad_norm: 33.328373, grad_max: 0.768358
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750> 64%|██████▍   | 32/50 [00:21<00:11,  1.53it/s] 66%|██████▌   | 33/50 [00:21<00:10,  1.68it/s] 68%|██████▊   | 34/50 [00:22<00:11,  1.36it/s] 70%|███████   | 35/50 [00:23<00:09,  1.53it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] t=31, grad_norm: 62.142292, grad_max: 1.249484
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=32, grad_norm: 45.607307, grad_max: 1.129295
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] t=33, grad_norm: 38.553268, grad_max: 1.198474
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=34, grad_norm: 78.241539, grad_max: 1.461094
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] t=35, grad_norm: 51.902973, grad_max: 1.325645
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0> 72%|███████▏  | 36/50 [00:23<00:08,  1.68it/s] 74%|███████▍  | 37/50 [00:24<00:09,  1.35it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.53it/s] 78%|███████▊  | 39/50 [00:25<00:06,  1.67it/s] 80%|████████  | 40/50 [00:26<00:07,  1.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=36, grad_norm: 50.395882, grad_max: 3.180436
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=37, grad_norm: 96.838287, grad_max: 2.193926
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=38, grad_norm: 71.279259, grad_max: 1.635152
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] t=39, grad_norm: 56.287643, grad_max: 2.398090
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0> 82%|████████▏ | 41/50 [00:27<00:05,  1.52it/s] 84%|████████▍ | 42/50 [00:27<00:04,  1.67it/s] 86%|████████▌ | 43/50 [00:28<00:05,  1.34it/s] 88%|████████▊ | 44/50 [00:29<00:03,  1.51it/s] 90%|█████████ | 45/50 [00:29<00:03,  1.65it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=40, grad_norm: 104.731079, grad_max: 2.552990
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] t=41, grad_norm: 94.474983, grad_max: 2.368001
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=42, grad_norm: 71.069267, grad_max: 3.618118
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] t=43, grad_norm: 134.179031, grad_max: 3.684935
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=44, grad_norm: 115.140488, grad_max: 2.582146
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:30<00:02,  1.34it/s] 94%|█████████▍| 47/50 [00:31<00:01,  1.51it/s] 96%|█████████▌| 48/50 [00:31<00:01,  1.65it/s] 98%|█████████▊| 49/50 [00:32<00:00,  1.34it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=45, grad_norm: 94.293396, grad_max: 6.452607
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=46, grad_norm: 202.892258, grad_max: 8.681304
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] t=47, grad_norm: 177.900146, grad_max: 6.854961
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=48, grad_norm: 185.243393, grad_max: 7.245727
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] t=49, grad_norm: 208.817398, grad_max: 14.837959
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:33<00:00,  1.18it/s]100%|██████████| 50/50 [00:33<00:00,  1.47it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:52,  1.07s/it]  4%|▍         | 2/50 [00:01<00:34,  1.39it/s]  6%|▌         | 3/50 [00:02<00:28,  1.65it/s]  8%|▊         | 4/50 [00:03<00:36,  1.26it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=0, grad_norm: 55.195526, grad_max: 2.381592
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] t=1, grad_norm: 43.496403, grad_max: 1.427493
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=2, grad_norm: 34.995369, grad_max: 0.838742
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=3, grad_norm: 51.127865, grad_max: 2.240356
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70> 10%|█         | 5/50 [00:03<00:30,  1.47it/s] 12%|█▏        | 6/50 [00:04<00:26,  1.65it/s] 14%|█▍        | 7/50 [00:05<00:32,  1.31it/s] 16%|█▌        | 8/50 [00:05<00:28,  1.49it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=4, grad_norm: 27.017218, grad_max: 0.812737
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] t=5, grad_norm: 22.006077, grad_max: 0.596355
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=6, grad_norm: 37.082550, grad_max: 1.740852
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] t=7, grad_norm: 20.124599, grad_max: 0.454029
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=8, grad_norm: 15.833214, grad_max: 0.362427
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810> 18%|█▊        | 9/50 [00:06<00:24,  1.65it/s] 20%|██        | 10/50 [00:07<00:30,  1.33it/s] 22%|██▏       | 11/50 [00:07<00:26,  1.50it/s] 24%|██▍       | 12/50 [00:08<00:23,  1.65it/s] 26%|██▌       | 13/50 [00:09<00:27,  1.33it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] t=9, grad_norm: 31.178606, grad_max: 1.242905
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=10, grad_norm: 18.137751, grad_max: 0.492335
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=11, grad_norm: 13.864738, grad_max: 0.307250
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=12, grad_norm: 21.544060, grad_max: 0.624565
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750> 28%|██▊       | 14/50 [00:09<00:24,  1.50it/s] 30%|███       | 15/50 [00:10<00:21,  1.65it/s] 32%|███▏      | 16/50 [00:11<00:25,  1.33it/s] 34%|███▍      | 17/50 [00:11<00:21,  1.50it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] t=13, grad_norm: 31.216690, grad_max: 0.609083
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=14, grad_norm: 20.129683, grad_max: 0.561389
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] t=15, grad_norm: 15.518849, grad_max: 0.370149
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=16, grad_norm: 46.987251, grad_max: 1.045222
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1810>
[DeepCache DPS Debug] t=17, grad_norm: 29.226343, grad_max: 0.530714
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0> 36%|███▌      | 18/50 [00:12<00:19,  1.65it/s] 38%|███▊      | 19/50 [00:13<00:23,  1.33it/s] 40%|████      | 20/50 [00:13<00:19,  1.50it/s] 42%|████▏     | 21/50 [00:14<00:17,  1.64it/s] 44%|████▍     | 22/50 [00:15<00:21,  1.33it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=18, grad_norm: 13.311190, grad_max: 0.180016
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b2050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b2050>
[DeepCache DPS Debug] t=19, grad_norm: 54.626240, grad_max: 1.026530
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=20, grad_norm: 43.529495, grad_max: 0.819978
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b1750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b1750>
[DeepCache DPS Debug] t=21, grad_norm: 15.380106, grad_max: 0.223714
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0> 46%|████▌     | 23/50 [00:15<00:18,  1.49it/s] 48%|████▊     | 24/50 [00:16<00:15,  1.64it/s] 50%|█████     | 25/50 [00:17<00:18,  1.33it/s] 52%|█████▏    | 26/50 [00:17<00:16,  1.49it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=22, grad_norm: 58.537785, grad_max: 1.086573
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89ee9b15a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89ee9b15a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=23, grad_norm: 43.656170, grad_max: 0.821303
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] t=24, grad_norm: 22.975203, grad_max: 0.713510
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] t=25, grad_norm: 51.876831, grad_max: 1.051624
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] t=26, grad_norm: 41.411484, grad_max: 0.590566
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820> 54%|█████▍    | 27/50 [00:18<00:14,  1.64it/s] 56%|█████▌    | 28/50 [00:19<00:16,  1.33it/s] 58%|█████▊    | 29/50 [00:19<00:14,  1.49it/s] 60%|██████    | 30/50 [00:20<00:12,  1.64it/s] 62%|██████▏   | 31/50 [00:21<00:14,  1.32it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=27, grad_norm: 26.202150, grad_max: 1.204734
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0>
[DeepCache DPS Debug] t=28, grad_norm: 56.743607, grad_max: 1.196969
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=29, grad_norm: 42.521904, grad_max: 0.803642
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=30, grad_norm: 34.161396, grad_max: 1.274088
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70> 64%|██████▍   | 32/50 [00:21<00:12,  1.49it/s] 66%|██████▌   | 33/50 [00:22<00:10,  1.64it/s] 68%|██████▊   | 34/50 [00:23<00:12,  1.33it/s] 70%|███████   | 35/50 [00:23<00:10,  1.49it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=31, grad_norm: 62.034046, grad_max: 1.352615
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=32, grad_norm: 46.742180, grad_max: 0.883804
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] t=33, grad_norm: 43.731518, grad_max: 1.634171
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] t=34, grad_norm: 78.145576, grad_max: 2.241518
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=35, grad_norm: 54.314548, grad_max: 1.981465
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0> 72%|███████▏  | 36/50 [00:24<00:08,  1.63it/s] 74%|███████▍  | 37/50 [00:25<00:09,  1.32it/s] 76%|███████▌  | 38/50 [00:25<00:08,  1.49it/s] 78%|███████▊  | 39/50 [00:26<00:06,  1.63it/s] 80%|████████  | 40/50 [00:27<00:07,  1.32it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0>
[DeepCache DPS Debug] t=36, grad_norm: 45.703743, grad_max: 2.242440
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=37, grad_norm: 94.813957, grad_max: 2.398441
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=38, grad_norm: 69.947861, grad_max: 1.758160
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=39, grad_norm: 63.631348, grad_max: 2.814696
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0> 82%|████████▏ | 41/50 [00:27<00:06,  1.49it/s] 84%|████████▍ | 42/50 [00:28<00:04,  1.64it/s] 86%|████████▌ | 43/50 [00:29<00:05,  1.33it/s] 88%|████████▊ | 44/50 [00:29<00:04,  1.49it/s] 90%|█████████ | 45/50 [00:30<00:03,  1.63it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=40, grad_norm: 113.591225, grad_max: 4.001930
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] t=41, grad_norm: 95.853279, grad_max: 3.617423
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] t=42, grad_norm: 75.868935, grad_max: 4.842225
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=43, grad_norm: 132.585159, grad_max: 2.823230
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0>
[DeepCache DPS Debug] t=44, grad_norm: 117.487411, grad_max: 3.365031
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:31<00:03,  1.33it/s] 94%|█████████▍| 47/50 [00:32<00:02,  1.49it/s] 96%|█████████▌| 48/50 [00:32<00:01,  1.64it/s] 98%|█████████▊| 49/50 [00:33<00:00,  1.33it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=45, grad_norm: 87.251335, grad_max: 3.071753
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=46, grad_norm: 190.462769, grad_max: 8.778884
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=47, grad_norm: 166.264786, grad_max: 6.315131
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=48, grad_norm: 162.767258, grad_max: 6.695223
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] t=49, grad_norm: 191.686081, grad_max: 6.044925
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:34<00:00,  1.17it/s]100%|██████████| 50/50 [00:34<00:00,  1.44it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:53,  1.08s/it]  4%|▍         | 2/50 [00:01<00:34,  1.38it/s]  6%|▌         | 3/50 [00:02<00:28,  1.64it/s]  8%|▊         | 4/50 [00:03<00:36,  1.25it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] t=0, grad_norm: 56.585880, grad_max: 1.482574
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=1, grad_norm: 43.321609, grad_max: 1.279634
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0>
[DeepCache DPS Debug] t=2, grad_norm: 34.625698, grad_max: 0.744748
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=3, grad_norm: 50.115620, grad_max: 1.152100
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0> 10%|█         | 5/50 [00:03<00:30,  1.46it/s] 12%|█▏        | 6/50 [00:04<00:26,  1.64it/s] 14%|█▍        | 7/50 [00:05<00:32,  1.30it/s] 16%|█▌        | 8/50 [00:05<00:28,  1.48it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=4, grad_norm: 26.847551, grad_max: 0.647298
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=5, grad_norm: 21.716309, grad_max: 0.529425
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=6, grad_norm: 33.424957, grad_max: 0.855316
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] t=7, grad_norm: 20.028957, grad_max: 0.517684
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] t=8, grad_norm: 15.812557, grad_max: 0.379609
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820> 18%|█▊        | 9/50 [00:06<00:25,  1.64it/s] 20%|██        | 10/50 [00:07<00:30,  1.32it/s] 22%|██▏       | 11/50 [00:07<00:26,  1.49it/s] 24%|██▍       | 12/50 [00:08<00:23,  1.64it/s] 26%|██▌       | 13/50 [00:09<00:27,  1.33it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=9, grad_norm: 30.551800, grad_max: 0.979988
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0>
[DeepCache DPS Debug] t=10, grad_norm: 18.192665, grad_max: 0.359451
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bfaf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bfaf0>
[DeepCache DPS Debug] t=11, grad_norm: 13.876369, grad_max: 0.307759
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=12, grad_norm: 22.056005, grad_max: 0.392521
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bed70> 28%|██▊       | 14/50 [00:09<00:24,  1.50it/s] 30%|███       | 15/50 [00:10<00:21,  1.64it/s] 32%|███▏      | 16/50 [00:11<00:25,  1.34it/s] 34%|███▍      | 17/50 [00:11<00:22,  1.50it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bed70>
[DeepCache DPS Debug] t=13, grad_norm: 32.244762, grad_max: 0.798494
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=14, grad_norm: 20.687431, grad_max: 0.392294
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf7f0>
[DeepCache DPS Debug] t=15, grad_norm: 15.426041, grad_max: 0.245136
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d35b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d35b0>
[DeepCache DPS Debug] t=16, grad_norm: 46.458504, grad_max: 0.927946
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c608af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c608af0>
[DeepCache DPS Debug] t=17, grad_norm: 29.026430, grad_max: 0.586878
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d03d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d03d0> 36%|███▌      | 18/50 [00:12<00:19,  1.65it/s] 38%|███▊      | 19/50 [00:13<00:23,  1.34it/s] 40%|████      | 20/50 [00:13<00:19,  1.51it/s] 42%|████▏     | 21/50 [00:14<00:17,  1.65it/s] 44%|████▍     | 22/50 [00:15<00:21,  1.33it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=18, grad_norm: 13.051135, grad_max: 0.200238
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] t=19, grad_norm: 55.206863, grad_max: 1.120058
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=20, grad_norm: 42.846146, grad_max: 0.801219
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=21, grad_norm: 15.188491, grad_max: 0.232376
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90> 46%|████▌     | 23/50 [00:15<00:18,  1.50it/s] 48%|████▊     | 24/50 [00:16<00:15,  1.65it/s] 50%|█████     | 25/50 [00:17<00:18,  1.33it/s] 52%|█████▏    | 26/50 [00:17<00:15,  1.50it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=22, grad_norm: 57.701870, grad_max: 0.872164
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=23, grad_norm: 41.995880, grad_max: 0.774071
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=24, grad_norm: 22.786331, grad_max: 0.981460
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] t=25, grad_norm: 52.300762, grad_max: 0.811058
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=26, grad_norm: 41.457336, grad_max: 0.625854
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0> 54%|█████▍    | 27/50 [00:18<00:13,  1.65it/s] 56%|█████▌    | 28/50 [00:19<00:16,  1.33it/s] 58%|█████▊    | 29/50 [00:19<00:14,  1.50it/s] 60%|██████    | 30/50 [00:20<00:12,  1.65it/s] 62%|██████▏   | 31/50 [00:21<00:14,  1.33it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=27, grad_norm: 29.328127, grad_max: 1.061831
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=28, grad_norm: 56.507221, grad_max: 1.156947
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=29, grad_norm: 42.535114, grad_max: 0.729241
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=30, grad_norm: 40.210304, grad_max: 2.002433
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470> 64%|██████▍   | 32/50 [00:21<00:11,  1.50it/s] 66%|██████▌   | 33/50 [00:22<00:10,  1.65it/s] 68%|██████▊   | 34/50 [00:23<00:11,  1.34it/s] 70%|███████   | 35/50 [00:23<00:09,  1.51it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] t=31, grad_norm: 61.102890, grad_max: 1.459449
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=32, grad_norm: 45.083775, grad_max: 0.974149
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=33, grad_norm: 39.663834, grad_max: 1.636575
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=34, grad_norm: 77.510933, grad_max: 1.955161
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=35, grad_norm: 55.084625, grad_max: 1.290083
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0> 72%|███████▏  | 36/50 [00:24<00:08,  1.65it/s] 74%|███████▍  | 37/50 [00:25<00:09,  1.33it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.51it/s] 78%|███████▊  | 39/50 [00:26<00:06,  1.65it/s] 80%|████████  | 40/50 [00:27<00:07,  1.34it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=36, grad_norm: 50.563450, grad_max: 2.118616
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] t=37, grad_norm: 98.570778, grad_max: 3.169383
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=38, grad_norm: 72.947029, grad_max: 2.349499
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=39, grad_norm: 53.617134, grad_max: 2.777667
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90> 82%|████████▏ | 41/50 [00:27<00:05,  1.51it/s] 84%|████████▍ | 42/50 [00:28<00:04,  1.65it/s] 86%|████████▌ | 43/50 [00:29<00:05,  1.34it/s] 88%|████████▊ | 44/50 [00:29<00:03,  1.50it/s] 90%|█████████ | 45/50 [00:30<00:03,  1.65it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=40, grad_norm: 108.745781, grad_max: 2.507063
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=41, grad_norm: 90.791656, grad_max: 2.333576
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=42, grad_norm: 65.901527, grad_max: 3.056541
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] t=43, grad_norm: 134.418121, grad_max: 3.829842
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=44, grad_norm: 119.797340, grad_max: 3.280929
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:31<00:02,  1.34it/s] 94%|█████████▍| 47/50 [00:31<00:01,  1.51it/s] 96%|█████████▌| 48/50 [00:32<00:01,  1.66it/s] 98%|█████████▊| 49/50 [00:33<00:00,  1.34it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=45, grad_norm: 95.101097, grad_max: 6.965492
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=46, grad_norm: 200.586639, grad_max: 6.342597
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=47, grad_norm: 170.505966, grad_max: 5.040053
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=48, grad_norm: 174.434189, grad_max: 10.505678
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] t=49, grad_norm: 206.967926, grad_max: 12.204573
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:34<00:00,  1.18it/s]100%|██████████| 50/50 [00:34<00:00,  1.45it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:52,  1.08s/it]  4%|▍         | 2/50 [00:01<00:34,  1.39it/s]  6%|▌         | 3/50 [00:02<00:28,  1.66it/s]  8%|▊         | 4/50 [00:03<00:36,  1.27it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=0, grad_norm: 58.310837, grad_max: 1.722527
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=1, grad_norm: 43.236645, grad_max: 1.258320
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=2, grad_norm: 34.655804, grad_max: 0.711006
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=3, grad_norm: 50.396450, grad_max: 1.935452
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0> 10%|█         | 5/50 [00:03<00:30,  1.49it/s] 12%|█▏        | 6/50 [00:04<00:26,  1.67it/s] 14%|█▍        | 7/50 [00:05<00:32,  1.32it/s] 16%|█▌        | 8/50 [00:05<00:27,  1.51it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=4, grad_norm: 27.539698, grad_max: 0.770223
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] t=5, grad_norm: 22.294270, grad_max: 0.498791
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=6, grad_norm: 33.137733, grad_max: 1.145706
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=7, grad_norm: 19.734823, grad_max: 0.464803
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=8, grad_norm: 15.539482, grad_max: 0.343129
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820> 18%|█▊        | 9/50 [00:06<00:24,  1.67it/s] 20%|██        | 10/50 [00:07<00:29,  1.34it/s] 22%|██▏       | 11/50 [00:07<00:25,  1.51it/s] 24%|██▍       | 12/50 [00:08<00:22,  1.67it/s] 26%|██▌       | 13/50 [00:09<00:27,  1.34it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=9, grad_norm: 30.046028, grad_max: 0.728592
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=10, grad_norm: 18.032318, grad_max: 0.464913
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] t=11, grad_norm: 14.031303, grad_max: 0.335884
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] t=12, grad_norm: 21.904343, grad_max: 0.394558
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0> 28%|██▊       | 14/50 [00:09<00:23,  1.52it/s] 30%|███       | 15/50 [00:10<00:20,  1.67it/s] 32%|███▏      | 16/50 [00:11<00:25,  1.35it/s] 34%|███▍      | 17/50 [00:11<00:21,  1.52it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=13, grad_norm: 31.657309, grad_max: 0.758818
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=14, grad_norm: 20.448536, grad_max: 0.509510
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0bf820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0bf820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=15, grad_norm: 15.723903, grad_max: 0.273773
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=16, grad_norm: 46.080490, grad_max: 0.992660
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=17, grad_norm: 29.414640, grad_max: 0.619233
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90> 36%|███▌      | 18/50 [00:12<00:19,  1.67it/s] 38%|███▊      | 19/50 [00:13<00:23,  1.35it/s] 40%|████      | 20/50 [00:13<00:19,  1.52it/s] 42%|████▏     | 21/50 [00:14<00:17,  1.67it/s] 44%|████▍     | 22/50 [00:15<00:20,  1.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=18, grad_norm: 13.717896, grad_max: 0.193888
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=19, grad_norm: 56.471310, grad_max: 1.082723
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=20, grad_norm: 43.358089, grad_max: 0.687246
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=21, grad_norm: 21.998341, grad_max: 0.814380
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0> 46%|████▌     | 23/50 [00:15<00:17,  1.52it/s] 48%|████▊     | 24/50 [00:15<00:15,  1.67it/s] 50%|█████     | 25/50 [00:17<00:18,  1.35it/s] 52%|█████▏    | 26/50 [00:17<00:15,  1.53it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=22, grad_norm: 57.758274, grad_max: 1.026843
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=23, grad_norm: 38.526726, grad_max: 0.694572
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=24, grad_norm: 23.872107, grad_max: 0.825952
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=25, grad_norm: 52.442459, grad_max: 1.093921
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=26, grad_norm: 41.219204, grad_max: 0.725918
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90> 54%|█████▍    | 27/50 [00:17<00:13,  1.67it/s] 56%|█████▌    | 28/50 [00:19<00:16,  1.35it/s] 58%|█████▊    | 29/50 [00:19<00:13,  1.52it/s] 60%|██████    | 30/50 [00:19<00:11,  1.67it/s] 62%|██████▏   | 31/50 [00:21<00:14,  1.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=27, grad_norm: 33.587261, grad_max: 2.025027
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=28, grad_norm: 58.101109, grad_max: 1.066174
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=29, grad_norm: 43.277534, grad_max: 0.890335
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=30, grad_norm: 55.033607, grad_max: 4.130360
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0> 64%|██████▍   | 32/50 [00:21<00:11,  1.52it/s] 66%|██████▌   | 33/50 [00:21<00:10,  1.67it/s] 68%|██████▊   | 34/50 [00:23<00:11,  1.35it/s] 70%|███████   | 35/50 [00:23<00:09,  1.52it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=31, grad_norm: 63.455605, grad_max: 1.980003
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=32, grad_norm: 45.612953, grad_max: 0.939720
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=33, grad_norm: 45.308853, grad_max: 3.461177
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=34, grad_norm: 80.278969, grad_max: 2.977649
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=35, grad_norm: 53.927025, grad_max: 1.585076
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90> 72%|███████▏  | 36/50 [00:23<00:08,  1.67it/s] 74%|███████▍  | 37/50 [00:25<00:09,  1.35it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.52it/s] 78%|███████▊  | 39/50 [00:25<00:06,  1.67it/s] 80%|████████  | 40/50 [00:27<00:07,  1.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=36, grad_norm: 49.082100, grad_max: 1.485536
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=37, grad_norm: 100.930664, grad_max: 2.515666
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=38, grad_norm: 69.199707, grad_max: 1.745175
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=39, grad_norm: 57.878353, grad_max: 2.484851
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0> 82%|████████▏ | 41/50 [00:27<00:05,  1.52it/s] 84%|████████▍ | 42/50 [00:27<00:04,  1.66it/s] 86%|████████▌ | 43/50 [00:29<00:05,  1.35it/s] 88%|████████▊ | 44/50 [00:29<00:03,  1.52it/s] 90%|█████████ | 45/50 [00:29<00:03,  1.67it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=40, grad_norm: 109.452141, grad_max: 2.224525
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=41, grad_norm: 91.831619, grad_max: 3.163234
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=42, grad_norm: 67.495468, grad_max: 2.871105
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=43, grad_norm: 132.626373, grad_max: 4.262288
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=44, grad_norm: 124.950714, grad_max: 3.458020
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:31<00:02,  1.35it/s] 94%|█████████▍| 47/50 [00:31<00:01,  1.52it/s] 96%|█████████▌| 48/50 [00:31<00:01,  1.66it/s] 98%|█████████▊| 49/50 [00:33<00:00,  1.35it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=45, grad_norm: 89.946701, grad_max: 6.281786
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=46, grad_norm: 187.002136, grad_max: 5.953381
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=47, grad_norm: 176.444611, grad_max: 4.500206
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=48, grad_norm: 158.146393, grad_max: 7.766880
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=49, grad_norm: 172.710022, grad_max: 5.849656
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:34<00:00,  1.19it/s]100%|██████████| 50/50 [00:34<00:00,  1.47it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:52,  1.07s/it]  4%|▍         | 2/50 [00:01<00:34,  1.41it/s]  6%|▌         | 3/50 [00:01<00:28,  1.68it/s]  8%|▊         | 4/50 [00:03<00:35,  1.28it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=0, grad_norm: 55.711830, grad_max: 1.406006
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=1, grad_norm: 43.270370, grad_max: 0.928888
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=2, grad_norm: 34.590267, grad_max: 0.843771
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=3, grad_norm: 48.291695, grad_max: 1.681107
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0> 10%|█         | 5/50 [00:03<00:29,  1.50it/s] 12%|█▏        | 6/50 [00:03<00:26,  1.67it/s] 14%|█▍        | 7/50 [00:05<00:32,  1.33it/s] 16%|█▌        | 8/50 [00:05<00:27,  1.52it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=4, grad_norm: 26.813803, grad_max: 0.621420
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=5, grad_norm: 21.671350, grad_max: 0.528160
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=6, grad_norm: 36.279423, grad_max: 2.049438
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=7, grad_norm: 20.025280, grad_max: 0.506564
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=8, grad_norm: 15.854183, grad_max: 0.365995
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90> 18%|█▊        | 9/50 [00:05<00:24,  1.67it/s] 20%|██        | 10/50 [00:07<00:29,  1.35it/s] 22%|██▏       | 11/50 [00:07<00:25,  1.52it/s] 24%|██▍       | 12/50 [00:07<00:22,  1.67it/s] 26%|██▌       | 13/50 [00:09<00:27,  1.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=9, grad_norm: 30.632803, grad_max: 0.627388
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=10, grad_norm: 18.315622, grad_max: 0.356848
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=11, grad_norm: 14.018694, grad_max: 0.294391
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=12, grad_norm: 21.434605, grad_max: 0.351839
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0> 28%|██▊       | 14/50 [00:09<00:23,  1.53it/s] 30%|███       | 15/50 [00:09<00:20,  1.67it/s] 32%|███▏      | 16/50 [00:11<00:25,  1.35it/s] 34%|███▍      | 17/50 [00:11<00:21,  1.52it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=13, grad_norm: 31.604221, grad_max: 0.707783
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=14, grad_norm: 20.416391, grad_max: 0.415007
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=15, grad_norm: 15.610044, grad_max: 0.288431
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=16, grad_norm: 46.057384, grad_max: 1.037024
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=17, grad_norm: 28.959679, grad_max: 0.646007
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90> 36%|███▌      | 18/50 [00:11<00:19,  1.67it/s] 38%|███▊      | 19/50 [00:13<00:22,  1.35it/s] 40%|████      | 20/50 [00:13<00:19,  1.53it/s] 42%|████▏     | 21/50 [00:13<00:17,  1.67it/s] 44%|████▍     | 22/50 [00:15<00:20,  1.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=18, grad_norm: 13.621255, grad_max: 0.237021
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=19, grad_norm: 54.148045, grad_max: 0.972784
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=20, grad_norm: 44.338997, grad_max: 0.995763
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=21, grad_norm: 16.107008, grad_max: 0.233296
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30> 46%|████▌     | 23/50 [00:15<00:17,  1.52it/s] 48%|████▊     | 24/50 [00:15<00:15,  1.67it/s] 50%|█████     | 25/50 [00:17<00:18,  1.36it/s] 52%|█████▏    | 26/50 [00:17<00:15,  1.53it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=22, grad_norm: 56.558067, grad_max: 0.894633
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=23, grad_norm: 43.267200, grad_max: 0.884725
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=24, grad_norm: 21.216837, grad_max: 0.378832
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=25, grad_norm: 52.382645, grad_max: 0.890951
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=26, grad_norm: 41.304230, grad_max: 0.882085
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30> 54%|█████▍    | 27/50 [00:17<00:13,  1.67it/s] 56%|█████▌    | 28/50 [00:19<00:16,  1.35it/s] 58%|█████▊    | 29/50 [00:19<00:13,  1.52it/s] 60%|██████    | 30/50 [00:19<00:11,  1.67it/s] 62%|██████▏   | 31/50 [00:21<00:14,  1.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=27, grad_norm: 26.056993, grad_max: 0.625615
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=28, grad_norm: 57.410461, grad_max: 1.163127
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=29, grad_norm: 42.727943, grad_max: 0.739914
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=30, grad_norm: 35.270798, grad_max: 1.363876
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30> 64%|██████▍   | 32/50 [00:21<00:11,  1.52it/s] 66%|██████▌   | 33/50 [00:21<00:10,  1.67it/s] 68%|██████▊   | 34/50 [00:23<00:11,  1.35it/s] 70%|███████   | 35/50 [00:23<00:09,  1.52it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=31, grad_norm: 61.219261, grad_max: 1.506227
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=32, grad_norm: 46.335945, grad_max: 1.162352
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=33, grad_norm: 48.618122, grad_max: 1.886097
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=34, grad_norm: 79.813118, grad_max: 1.799433
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=35, grad_norm: 52.701141, grad_max: 1.488477
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0> 72%|███████▏  | 36/50 [00:23<00:08,  1.67it/s] 74%|███████▍  | 37/50 [00:25<00:09,  1.34it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.51it/s] 78%|███████▊  | 39/50 [00:25<00:06,  1.66it/s] 80%|████████  | 40/50 [00:27<00:07,  1.34it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=36, grad_norm: 63.850578, grad_max: 6.459217
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=37, grad_norm: 98.710159, grad_max: 3.122921
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] t=38, grad_norm: 73.122162, grad_max: 1.643446
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=39, grad_norm: 56.811729, grad_max: 1.897949
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0> 82%|████████▏ | 41/50 [00:27<00:05,  1.51it/s] 84%|████████▍ | 42/50 [00:27<00:04,  1.66it/s] 86%|████████▌ | 43/50 [00:29<00:05,  1.34it/s] 88%|████████▊ | 44/50 [00:29<00:03,  1.51it/s] 90%|█████████ | 45/50 [00:29<00:03,  1.66it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=40, grad_norm: 103.132935, grad_max: 2.179736
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=41, grad_norm: 92.337502, grad_max: 2.687854
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=42, grad_norm: 73.291527, grad_max: 3.445302
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=43, grad_norm: 128.941574, grad_max: 3.570490
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=44, grad_norm: 120.475815, grad_max: 3.721696
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:31<00:02,  1.35it/s] 94%|█████████▍| 47/50 [00:31<00:01,  1.51it/s] 96%|█████████▌| 48/50 [00:31<00:01,  1.66it/s] 98%|█████████▊| 49/50 [00:33<00:00,  1.35it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=45, grad_norm: 94.819092, grad_max: 5.626295
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=46, grad_norm: 183.940399, grad_max: 4.627076
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=47, grad_norm: 181.501434, grad_max: 6.088355
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=48, grad_norm: 196.251389, grad_max: 7.811788
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=49, grad_norm: 187.704346, grad_max: 4.991853
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:34<00:00,  1.19it/s]100%|██████████| 50/50 [00:34<00:00,  1.47it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:52,  1.07s/it]  4%|▍         | 2/50 [00:01<00:34,  1.39it/s]  6%|▌         | 3/50 [00:02<00:28,  1.66it/s]  8%|▊         | 4/50 [00:03<00:36,  1.27it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=0, grad_norm: 55.501320, grad_max: 1.467583
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=1, grad_norm: 43.581406, grad_max: 1.231175
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=2, grad_norm: 34.392712, grad_max: 0.802098
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=3, grad_norm: 50.909977, grad_max: 2.481293
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910> 10%|█         | 5/50 [00:03<00:30,  1.49it/s] 12%|█▏        | 6/50 [00:04<00:26,  1.66it/s] 14%|█▍        | 7/50 [00:05<00:32,  1.32it/s] 16%|█▌        | 8/50 [00:05<00:27,  1.51it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=4, grad_norm: 27.133053, grad_max: 0.716915
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=5, grad_norm: 22.218681, grad_max: 0.615268
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=6, grad_norm: 36.995686, grad_max: 1.763428
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=7, grad_norm: 20.135820, grad_max: 0.471208
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=8, grad_norm: 15.803835, grad_max: 0.383867
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0> 18%|█▊        | 9/50 [00:06<00:24,  1.66it/s] 20%|██        | 10/50 [00:07<00:29,  1.34it/s] 22%|██▏       | 11/50 [00:07<00:25,  1.51it/s] 24%|██▍       | 12/50 [00:08<00:22,  1.66it/s] 26%|██▌       | 13/50 [00:09<00:27,  1.34it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=9, grad_norm: 30.853512, grad_max: 0.786884
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=10, grad_norm: 18.100433, grad_max: 0.344663
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=11, grad_norm: 14.128776, grad_max: 0.292060
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=12, grad_norm: 22.054222, grad_max: 0.406814
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0> 28%|██▊       | 14/50 [00:09<00:23,  1.51it/s] 30%|███       | 15/50 [00:10<00:21,  1.66it/s] 32%|███▏      | 16/50 [00:11<00:25,  1.35it/s] 34%|███▍      | 17/50 [00:11<00:21,  1.51it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=13, grad_norm: 31.802835, grad_max: 0.676435
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=14, grad_norm: 20.391516, grad_max: 0.427862
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=15, grad_norm: 16.105082, grad_max: 0.356910
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=16, grad_norm: 45.822472, grad_max: 0.751281
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=17, grad_norm: 28.890831, grad_max: 0.801109
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0> 36%|███▌      | 18/50 [00:12<00:19,  1.67it/s] 38%|███▊      | 19/50 [00:13<00:22,  1.35it/s] 40%|████      | 20/50 [00:13<00:19,  1.52it/s] 42%|████▏     | 21/50 [00:14<00:17,  1.66it/s] 44%|████▍     | 22/50 [00:15<00:20,  1.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=18, grad_norm: 13.592762, grad_max: 0.203062
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=19, grad_norm: 55.350372, grad_max: 1.213201
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] t=20, grad_norm: 42.299957, grad_max: 0.764838
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=21, grad_norm: 16.120001, grad_max: 0.661105
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30> 46%|████▌     | 23/50 [00:15<00:17,  1.51it/s] 48%|████▊     | 24/50 [00:16<00:15,  1.66it/s] 50%|█████     | 25/50 [00:17<00:18,  1.35it/s] 52%|█████▏    | 26/50 [00:17<00:15,  1.51it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=22, grad_norm: 58.007793, grad_max: 1.271379
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=23, grad_norm: 41.485870, grad_max: 0.907938
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=24, grad_norm: 19.540928, grad_max: 0.560348
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=25, grad_norm: 52.201275, grad_max: 0.886111
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=26, grad_norm: 40.960167, grad_max: 0.727020
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910> 54%|█████▍    | 27/50 [00:18<00:13,  1.66it/s] 56%|█████▌    | 28/50 [00:19<00:16,  1.35it/s] 58%|█████▊    | 29/50 [00:19<00:13,  1.52it/s] 60%|██████    | 30/50 [00:20<00:12,  1.66it/s] 62%|██████▏   | 31/50 [00:21<00:14,  1.34it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=27, grad_norm: 46.416924, grad_max: 3.055282
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=28, grad_norm: 55.839672, grad_max: 1.367041
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=29, grad_norm: 42.301579, grad_max: 1.063264
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=30, grad_norm: 35.531548, grad_max: 1.745402
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910> 64%|██████▍   | 32/50 [00:21<00:11,  1.51it/s] 66%|██████▌   | 33/50 [00:22<00:10,  1.66it/s] 68%|██████▊   | 34/50 [00:23<00:11,  1.34it/s] 70%|███████   | 35/50 [00:23<00:09,  1.51it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=31, grad_norm: 60.240227, grad_max: 1.959555
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=32, grad_norm: 45.191860, grad_max: 1.027256
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c622dd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c622dd0>
[DeepCache DPS Debug] t=33, grad_norm: 42.695454, grad_max: 1.846750
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=34, grad_norm: 76.640411, grad_max: 1.898605
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=35, grad_norm: 55.636513, grad_max: 1.333276
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0> 72%|███████▏  | 36/50 [00:24<00:08,  1.66it/s] 74%|███████▍  | 37/50 [00:25<00:09,  1.35it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.52it/s] 78%|███████▊  | 39/50 [00:26<00:06,  1.67it/s] 80%|████████  | 40/50 [00:27<00:07,  1.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=36, grad_norm: 47.259941, grad_max: 2.258264
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=37, grad_norm: 97.189804, grad_max: 2.007813
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c60ba90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c60ba90>
[DeepCache DPS Debug] t=38, grad_norm: 73.266609, grad_max: 2.190683
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=39, grad_norm: 58.000618, grad_max: 2.436931
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c620610> 82%|████████▏ | 41/50 [00:27<00:05,  1.51it/s] 84%|████████▍ | 42/50 [00:28<00:04,  1.66it/s] 86%|████████▌ | 43/50 [00:29<00:05,  1.34it/s] 88%|████████▊ | 44/50 [00:29<00:03,  1.51it/s] 90%|█████████ | 45/50 [00:30<00:03,  1.65it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c620610>
[DeepCache DPS Debug] t=40, grad_norm: 108.772606, grad_max: 2.058650
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=41, grad_norm: 90.600525, grad_max: 3.049923
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=42, grad_norm: 70.188034, grad_max: 3.625909
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=43, grad_norm: 128.672043, grad_max: 3.460972
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=44, grad_norm: 123.286377, grad_max: 2.677813
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:31<00:02,  1.34it/s] 94%|█████████▍| 47/50 [00:31<00:01,  1.50it/s] 96%|█████████▌| 48/50 [00:32<00:01,  1.64it/s] 98%|█████████▊| 49/50 [00:33<00:00,  1.34it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=45, grad_norm: 95.310974, grad_max: 6.126746
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
[DeepCache DPS Debug] t=46, grad_norm: 194.300110, grad_max: 5.592624
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623910>
[DeepCache DPS Debug] t=47, grad_norm: 162.587692, grad_max: 6.052589
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d3dc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d3dc0>
[DeepCache DPS Debug] t=48, grad_norm: 169.824112, grad_max: 11.438403
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f899c623d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f899c623d30>
[DeepCache DPS Debug] t=49, grad_norm: 202.728577, grad_max: 5.302799
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:34<00:00,  1.18it/s]100%|██████████| 50/50 [00:34<00:00,  1.46it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f89dc0d09a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f89dc0d09a0>
save npy to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=7_20250828_225256/cache_interval_3_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=7/bon=1/guidance_strength=1.0/images.npy
Saving images to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=7_20250828_225256/cache_interval_3_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=7/bon=1/guidance_strength=1.0/images.png
