/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:441: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
attention mode is flash
logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_2_layer_depth_9/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0
Logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_2_layer_depth_9/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0
Arguments: Arguments(data_type='image', dataset='cifar10', task='label_guidance', image_size=32, include_charges=False, generators_path='./pretrained_models/EDMsecond/generative_model_ema.npy', args_generators_path='./pretrained_models/EDMsecond/args.pickle', energy_path='./pretrained_models/tf_predict_mu/model_ema_2000.npy', args_energy_path='./pretrained_models/tf_predict_mu/args_2000.pickle', classifiers_path='./pretrained_models/evaluate_mu/best_checkpoint.npy', args_classifiers_path='./pretrained_models/evaluate_mu/args.pickle', clip_scale=100, audio_length=10, volume_factor=80.0, motion_prompt='walk', radius=3.0, model_name_or_path='openai_cifar10.pt', model_type='unet', use_deepcache=True, cache_interval=2, cache_block_id=9, skip_mode='uniform', clean_step=0, vae='mse', train_steps=1000, inference_steps=50, eta=1.0, clip_x0=True, clip_sample_range=1.0, seed=42, device=device(type='cuda'), logging_dir='/home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_2_layer_depth_9/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0', logger=None, per_sample_batch_size=128, num_samples=1024, batch_id=0, guidance_name='dps', guider='classifier', target='3', recur_steps=1, iter_steps=4, guidance_strength=1.0, guidance_scale=1.0, start_gradient=50, use_early_exit=False, early_exit_layer=None, use_time_based_early_exit=False, time_early_exit_mapping=None, rho=1.0, mu=0.25, sigma=0.001, eps_bsz=1, rho_schedule='increase', mu_schedule='increase', sigma_schedule='decrease', guide_network='resnet_cifar10.pt', classifier_image_size=224, eval_batch_size=512, logging_resolution=512, log_suffix='', log_traj=False, max_show_images=256, check_done=False, wandb=False, wandb_project='trail', wandb_name=None, wandb_entity='llm-selection', saved_file=None, sort_metric=None, topk=5, output_path='vis_molecule', output_dir=None, max_n_samples=10000000000, bon_rate=1, bon_guidance=None)
[DeepCache] DeepCacheDPSGuidance 초기화: use_deepcache=True, cache_interval=2
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:56,  1.16s/it]  4%|▍         | 2/50 [00:01<00:34,  1.38it/s]  6%|▌         | 3/50 [00:02<00:34,  1.35it/s]  8%|▊         | 4/50 [00:02<00:27,  1.64it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=2, clean_step=0
[DeepCache] DeepCache UNet 초기화: cache_interval=2, cache_block_id=9, clean_step=0
[DeepCache Debug] 첫 번째 실행: start_timestep=50
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190ac0>
[DeepCache DPS Debug] t=0, grad_norm: 91.953476, grad_max: 2.087402
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190a00>
[DeepCache DPS Debug] t=1, grad_norm: 53.091660, grad_max: 1.298090
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190a00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=48): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190a00>
[DeepCache DPS Debug] t=2, grad_norm: 88.130165, grad_max: 3.321228
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190d90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990191750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990191750>
[DeepCache DPS Debug] t=3, grad_norm: 38.085533, grad_max: 0.786581
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990191750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990191750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990191750> 10%|█         | 5/50 [00:03<00:29,  1.51it/s] 12%|█▏        | 6/50 [00:03<00:25,  1.74it/s] 14%|█▍        | 7/50 [00:04<00:27,  1.57it/s] 16%|█▌        | 8/50 [00:05<00:23,  1.77it/s] 18%|█▊        | 9/50 [00:06<00:29,  1.40it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990191750>
[DeepCache DPS Debug] t=4, grad_norm: 55.786106, grad_max: 2.194069
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990191600>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990191600>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990191690>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990191690>
[DeepCache DPS Debug] t=5, grad_norm: 28.702055, grad_max: 0.596171
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990191690>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990191690>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979e9cf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979e9cf0>
[DeepCache DPS Debug] t=6, grad_norm: 21.437740, grad_max: 2.197884
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990191000>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990191000>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990191c30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990191c30>
[DeepCache DPS Debug] t=7, grad_norm: 22.132229, grad_max: 0.529128
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990191c30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990191c30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3b017b16c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3b017b16c0>
[DeepCache DPS Debug] t=8, grad_norm: 6.321859, grad_max: 1.118801
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012c520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012c520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=2, clean_step=0 20%|██        | 10/50 [00:06<00:24,  1.62it/s] 22%|██▏       | 11/50 [00:07<00:25,  1.51it/s] 24%|██▍       | 12/50 [00:07<00:22,  1.71it/s] 26%|██▌       | 13/50 [00:08<00:23,  1.56it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012c7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012c7f0>
[DeepCache DPS Debug] t=9, grad_norm: 20.562269, grad_max: 0.517367
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012c7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012c7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012c7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012c7f0>
[DeepCache DPS Debug] t=10, grad_norm: 0.597967, grad_max: 0.028912
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012c0a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012c0a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012ce80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012ce80>
[DeepCache DPS Debug] t=11, grad_norm: 23.450891, grad_max: 0.615855
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012ce80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012ce80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012ce80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012ce80>
[DeepCache DPS Debug] t=12, grad_norm: 0.233054, grad_max: 0.011349
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012c130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012c130>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012ce20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012ce20> 28%|██▊       | 14/50 [00:08<00:20,  1.76it/s] 30%|███       | 15/50 [00:09<00:21,  1.59it/s] 32%|███▏      | 16/50 [00:10<00:19,  1.78it/s] 34%|███▍      | 17/50 [00:10<00:20,  1.61it/s] 36%|███▌      | 18/50 [00:11<00:17,  1.79it/s]
[DeepCache DPS Debug] t=13, grad_norm: 39.995907, grad_max: 0.816262
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012ce20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012ce20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=36): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012ce20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012ce20>
[DeepCache DPS Debug] t=14, grad_norm: 0.405668, grad_max: 0.035688
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012cbe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012cbe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d300>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d300>
[DeepCache DPS Debug] t=15, grad_norm: 50.047333, grad_max: 0.980944
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d300>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d300>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d300>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d300>
[DeepCache DPS Debug] t=16, grad_norm: 0.272298, grad_max: 0.013422
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012c610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012c610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d6f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d6f0>
[DeepCache DPS Debug] t=17, grad_norm: 68.212479, grad_max: 1.101818
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d6f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d6f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=2, clean_step=0 38%|███▊      | 19/50 [00:11<00:19,  1.61it/s] 40%|████      | 20/50 [00:12<00:16,  1.80it/s] 42%|████▏     | 21/50 [00:13<00:18,  1.61it/s] 44%|████▍     | 22/50 [00:13<00:15,  1.79it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d6f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d6f0>
[DeepCache DPS Debug] t=18, grad_norm: 0.164548, grad_max: 0.009244
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d060>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012da20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012da20>
[DeepCache DPS Debug] t=19, grad_norm: 68.306580, grad_max: 1.146975
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012da20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012da20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012da20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012da20>
[DeepCache DPS Debug] t=20, grad_norm: 0.149364, grad_max: 0.004788
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d540>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d540>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012de10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012de10>
[DeepCache DPS Debug] t=21, grad_norm: 56.422646, grad_max: 1.024386
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012de10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012de10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=28): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012de10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012de10> 46%|████▌     | 23/50 [00:14<00:16,  1.60it/s] 48%|████▊     | 24/50 [00:14<00:14,  1.78it/s] 50%|█████     | 25/50 [00:15<00:15,  1.60it/s] 52%|█████▏    | 26/50 [00:15<00:13,  1.78it/s] 54%|█████▍    | 27/50 [00:16<00:14,  1.59it/s]
[DeepCache DPS Debug] t=22, grad_norm: 1.897027, grad_max: 0.129847
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d930>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d930>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e140>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e140>
[DeepCache DPS Debug] t=23, grad_norm: 60.499920, grad_max: 1.089588
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e140>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e140>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e140>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e140>
[DeepCache DPS Debug] t=24, grad_norm: 4.062396, grad_max: 0.338251
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012dc60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012dc60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e530>
[DeepCache DPS Debug] t=25, grad_norm: 65.541992, grad_max: 1.134787
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=24): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e530>
[DeepCache DPS Debug] t=26, grad_norm: 6.203090, grad_max: 0.336828
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e380>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e380>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False 56%|█████▌    | 28/50 [00:17<00:12,  1.77it/s] 58%|█████▊    | 29/50 [00:17<00:13,  1.58it/s] 60%|██████    | 30/50 [00:18<00:11,  1.76it/s] 62%|██████▏   | 31/50 [00:19<00:12,  1.57it/s]
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012ffa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012ffa0>
[DeepCache DPS Debug] t=27, grad_norm: 72.225838, grad_max: 1.346796
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012ffa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012ffa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012ffa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012ffa0>
[DeepCache DPS Debug] t=28, grad_norm: 27.874973, grad_max: 2.554288
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012fc70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012fc70>
[DeepCache DPS Debug] t=29, grad_norm: 80.633270, grad_max: 2.132105
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012fc70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012fc70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012fc70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012fc70>
[DeepCache DPS Debug] t=30, grad_norm: 20.829737, grad_max: 1.333423
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e770>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e770>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f820>
[DeepCache DPS Debug] t=31, grad_norm: 91.792679, grad_max: 2.114665 64%|██████▍   | 32/50 [00:19<00:10,  1.75it/s] 66%|██████▌   | 33/50 [00:20<00:10,  1.56it/s] 68%|██████▊   | 34/50 [00:20<00:09,  1.74it/s] 70%|███████   | 35/50 [00:21<00:09,  1.55it/s] 72%|███████▏  | 36/50 [00:22<00:08,  1.72it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f820>
[DeepCache DPS Debug] t=32, grad_norm: 23.347734, grad_max: 1.514114
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f550>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f550>
[DeepCache DPS Debug] t=33, grad_norm: 111.266602, grad_max: 2.471884
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f550>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f550>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=16): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f550>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f550>
[DeepCache DPS Debug] t=34, grad_norm: 20.967094, grad_max: 2.857342
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012fa30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012fa30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f100>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f100>
[DeepCache DPS Debug] t=35, grad_norm: 152.422592, grad_max: 3.549154
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f100>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f100>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True 74%|███████▍  | 37/50 [00:22<00:08,  1.54it/s] 76%|███████▌  | 38/50 [00:23<00:07,  1.71it/s] 78%|███████▊  | 39/50 [00:24<00:07,  1.53it/s] 80%|████████  | 40/50 [00:24<00:05,  1.70it/s]
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f100>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f100>
[DeepCache DPS Debug] t=36, grad_norm: 37.318771, grad_max: 5.821810
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f5e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f5e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f370>
[DeepCache DPS Debug] t=37, grad_norm: 179.123123, grad_max: 6.026652
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=12): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f370>
[DeepCache DPS Debug] t=38, grad_norm: 28.252289, grad_max: 2.211944
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d7e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d7e0>
[DeepCache DPS Debug] t=39, grad_norm: 195.530731, grad_max: 5.097241
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f280>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f280>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e320>
[DeepCache DPS Debug] t=40, grad_norm: 31.721388, grad_max: 2.994137 82%|████████▏ | 41/50 [00:25<00:05,  1.52it/s] 84%|████████▍ | 42/50 [00:25<00:04,  1.70it/s] 86%|████████▌ | 43/50 [00:26<00:04,  1.52it/s] 88%|████████▊ | 44/50 [00:27<00:03,  1.69it/s] 90%|█████████ | 45/50 [00:27<00:03,  1.51it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012dff0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012dff0>
[DeepCache DPS Debug] t=41, grad_norm: 203.346664, grad_max: 7.307406
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012cf10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012cf10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f280>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f280>
[DeepCache DPS Debug] t=42, grad_norm: 34.674568, grad_max: 4.001344
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f0a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f0a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f0a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f0a0>
[DeepCache DPS Debug] t=43, grad_norm: 169.749069, grad_max: 5.223121
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f790>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f790>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f790>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f790>
[DeepCache DPS Debug] t=44, grad_norm: 47.994839, grad_max: 3.655581
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f370>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용 92%|█████████▏| 46/50 [00:28<00:02,  1.68it/s] 94%|█████████▍| 47/50 [00:29<00:01,  1.50it/s] 96%|█████████▌| 48/50 [00:29<00:01,  1.67it/s] 98%|█████████▊| 49/50 [00:30<00:00,  1.49it/s]
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f370>
[DeepCache DPS Debug] t=45, grad_norm: 129.930878, grad_max: 5.614382
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d7e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d7e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=4): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012d7e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012d7e0>
[DeepCache DPS Debug] t=46, grad_norm: 57.620766, grad_max: 4.926503
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e320>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012e320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012e320>
[DeepCache DPS Debug] t=47, grad_norm: 67.489174, grad_max: 3.796229
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012dff0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012dff0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012dff0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012dff0>
[DeepCache DPS Debug] t=48, grad_norm: 35.743572, grad_max: 3.550719
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f280>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f280>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f280>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f280>
[DeepCache DPS Debug] t=49, grad_norm: 9.872835, grad_max: 0.839019
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행100%|██████████| 50/50 [00:31<00:00,  1.39it/s]100%|██████████| 50/50 [00:31<00:00,  1.60it/s]

[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399012f0a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399012f0a0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:40,  1.20it/s]  4%|▍         | 2/50 [00:01<00:28,  1.66it/s]  6%|▌         | 3/50 [00:02<00:33,  1.41it/s]  8%|▊         | 4/50 [00:02<00:27,  1.66it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979eb610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979eb610>
[DeepCache DPS Debug] t=0, grad_norm: 88.771393, grad_max: 2.639832
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979e9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979e9570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979eac20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979eac20>
[DeepCache DPS Debug] t=1, grad_norm: 53.766140, grad_max: 1.110204
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979eac20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979eac20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=48): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979eac20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979eac20>
[DeepCache DPS Debug] t=2, grad_norm: 89.037323, grad_max: 3.042236
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979ea650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979ea650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979eaad0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979eaad0>
[DeepCache DPS Debug] t=3, grad_norm: 38.275417, grad_max: 0.841924
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979eaad0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979eaad0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979eaad0> 10%|█         | 5/50 [00:03<00:30,  1.46it/s] 12%|█▏        | 6/50 [00:03<00:26,  1.66it/s] 14%|█▍        | 7/50 [00:04<00:29,  1.47it/s] 16%|█▌        | 8/50 [00:05<00:25,  1.66it/s] 18%|█▊        | 9/50 [00:05<00:27,  1.48it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979eaad0>
[DeepCache DPS Debug] t=4, grad_norm: 49.469707, grad_max: 1.362953
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979eac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979eac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979eb4c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979eb4c0>
[DeepCache DPS Debug] t=5, grad_norm: 28.739281, grad_max: 0.724467
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39979eb4c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39979eb4c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] t=6, grad_norm: 26.461966, grad_max: 1.898941
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=7, grad_norm: 22.443995, grad_max: 0.636658
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=8, grad_norm: 3.572035, grad_max: 0.488123
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=2, clean_step=0 20%|██        | 10/50 [00:06<00:24,  1.66it/s] 22%|██▏       | 11/50 [00:07<00:26,  1.48it/s] 24%|██▍       | 12/50 [00:07<00:22,  1.65it/s] 26%|██▌       | 13/50 [00:08<00:24,  1.48it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=9, grad_norm: 20.662874, grad_max: 0.420494
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=10, grad_norm: 1.548849, grad_max: 0.089419
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=11, grad_norm: 24.155540, grad_max: 0.511777
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=12, grad_norm: 0.402750, grad_max: 0.024440
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20> 28%|██▊       | 14/50 [00:08<00:21,  1.66it/s] 30%|███       | 15/50 [00:09<00:23,  1.49it/s] 32%|███▏      | 16/50 [00:10<00:20,  1.66it/s] 34%|███▍      | 17/50 [00:11<00:22,  1.48it/s] 36%|███▌      | 18/50 [00:11<00:19,  1.65it/s]
[DeepCache DPS Debug] t=13, grad_norm: 39.683578, grad_max: 0.842839
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=36): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=14, grad_norm: 0.869767, grad_max: 0.069370
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=15, grad_norm: 49.446671, grad_max: 0.793861
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=16, grad_norm: 0.253725, grad_max: 0.009286
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd00>
[DeepCache DPS Debug] t=17, grad_norm: 72.270767, grad_max: 1.073265
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=2, clean_step=0 38%|███▊      | 19/50 [00:12<00:21,  1.47it/s] 40%|████      | 20/50 [00:12<00:18,  1.64it/s] 42%|████▏     | 21/50 [00:13<00:19,  1.47it/s] 44%|████▍     | 22/50 [00:14<00:17,  1.64it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] t=18, grad_norm: 0.164314, grad_max: 0.004510
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=19, grad_norm: 70.402168, grad_max: 1.415182
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd90>
[DeepCache DPS Debug] t=20, grad_norm: 0.224890, grad_max: 0.009996
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=21, grad_norm: 56.733162, grad_max: 0.869002
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=28): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0> 46%|████▌     | 23/50 [00:14<00:18,  1.47it/s] 48%|████▊     | 24/50 [00:15<00:15,  1.63it/s] 50%|█████     | 25/50 [00:16<00:17,  1.47it/s] 52%|█████▏    | 26/50 [00:16<00:14,  1.63it/s] 54%|█████▍    | 27/50 [00:17<00:15,  1.47it/s]
[DeepCache DPS Debug] t=22, grad_norm: 0.118182, grad_max: 0.006636
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87ff40>
[DeepCache DPS Debug] t=23, grad_norm: 61.332176, grad_max: 1.000253
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] t=24, grad_norm: 1.697288, grad_max: 0.110387
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=25, grad_norm: 65.943184, grad_max: 1.117014
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=24): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd00>
[DeepCache DPS Debug] t=26, grad_norm: 5.409220, grad_max: 0.409354
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False 56%|█████▌    | 28/50 [00:17<00:13,  1.63it/s] 58%|█████▊    | 29/50 [00:18<00:14,  1.46it/s] 60%|██████    | 30/50 [00:19<00:12,  1.63it/s] 62%|██████▏   | 31/50 [00:20<00:13,  1.46it/s]
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] t=27, grad_norm: 72.988289, grad_max: 1.390956
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=28, grad_norm: 6.770038, grad_max: 0.477551
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd90>
[DeepCache DPS Debug] t=29, grad_norm: 78.975121, grad_max: 1.936301
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=30, grad_norm: 10.444169, grad_max: 0.754662
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=31, grad_norm: 91.425682, grad_max: 3.796985 64%|██████▍   | 32/50 [00:20<00:11,  1.63it/s] 66%|██████▌   | 33/50 [00:21<00:11,  1.46it/s] 68%|██████▊   | 34/50 [00:21<00:09,  1.62it/s] 70%|███████   | 35/50 [00:22<00:10,  1.45it/s] 72%|███████▏  | 36/50 [00:23<00:08,  1.61it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87ff40>
[DeepCache DPS Debug] t=32, grad_norm: 16.892729, grad_max: 1.159587
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] t=33, grad_norm: 114.185120, grad_max: 2.399700
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=16): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=34, grad_norm: 4.705691, grad_max: 0.412906
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd00>
[DeepCache DPS Debug] t=35, grad_norm: 144.618561, grad_max: 5.110717
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True 74%|███████▍  | 37/50 [00:24<00:09,  1.44it/s] 76%|███████▌  | 38/50 [00:24<00:07,  1.60it/s] 78%|███████▊  | 39/50 [00:25<00:07,  1.44it/s] 80%|████████  | 40/50 [00:25<00:06,  1.60it/s]
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] t=36, grad_norm: 8.524587, grad_max: 0.639304
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=37, grad_norm: 177.897583, grad_max: 5.834127
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=12): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd90>
[DeepCache DPS Debug] t=38, grad_norm: 16.282528, grad_max: 1.306232
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=39, grad_norm: 190.493546, grad_max: 4.291795
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=40, grad_norm: 29.645746, grad_max: 3.478160 82%|████████▏ | 41/50 [00:26<00:06,  1.44it/s] 84%|████████▍ | 42/50 [00:27<00:05,  1.60it/s] 86%|████████▌ | 43/50 [00:28<00:04,  1.44it/s] 88%|████████▊ | 44/50 [00:28<00:03,  1.60it/s] 90%|█████████ | 45/50 [00:29<00:03,  1.44it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87ff40>
[DeepCache DPS Debug] t=41, grad_norm: 197.172821, grad_max: 4.563315
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] t=42, grad_norm: 32.596710, grad_max: 2.164860
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=43, grad_norm: 178.961090, grad_max: 6.183738
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd00>
[DeepCache DPS Debug] t=44, grad_norm: 34.611088, grad_max: 2.374430
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용 92%|█████████▏| 46/50 [00:29<00:02,  1.60it/s] 94%|█████████▍| 47/50 [00:30<00:02,  1.44it/s] 96%|█████████▌| 48/50 [00:31<00:01,  1.60it/s] 98%|█████████▊| 49/50 [00:32<00:00,  1.44it/s]
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] t=45, grad_norm: 121.092194, grad_max: 4.212898
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=4): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=46, grad_norm: 35.008976, grad_max: 1.714280
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa87fd90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa87fd90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=47, grad_norm: 62.615452, grad_max: 3.640976
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=48, grad_norm: 12.080615, grad_max: 0.945324
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=49, grad_norm: 21.274937, grad_max: 2.388659
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행100%|██████████| 50/50 [00:32<00:00,  1.34it/s]100%|██████████| 50/50 [00:32<00:00,  1.52it/s]

[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:29,  1.60it/s]  6%|▌         | 3/50 [00:02<00:34,  1.37it/s]  8%|▊         | 4/50 [00:02<00:28,  1.60it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=0, grad_norm: 91.347595, grad_max: 2.414101
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] t=1, grad_norm: 53.516899, grad_max: 1.345118
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=48): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=2, grad_norm: 81.065086, grad_max: 1.832642
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=3, grad_norm: 38.579868, grad_max: 0.977463
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0> 10%|█         | 5/50 [00:03<00:31,  1.41it/s] 12%|█▏        | 6/50 [00:03<00:27,  1.60it/s] 14%|█▍        | 7/50 [00:04<00:30,  1.42it/s] 16%|█▌        | 8/50 [00:05<00:26,  1.60it/s] 18%|█▊        | 9/50 [00:06<00:28,  1.43it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] t=4, grad_norm: 59.135864, grad_max: 3.181366
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=5, grad_norm: 29.056108, grad_max: 0.646236
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=6, grad_norm: 24.785494, grad_max: 2.280853
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=7, grad_norm: 22.356451, grad_max: 0.557035
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=8, grad_norm: 4.017957, grad_max: 0.401207
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=2, clean_step=0 20%|██        | 10/50 [00:06<00:24,  1.60it/s] 22%|██▏       | 11/50 [00:07<00:27,  1.43it/s] 24%|██▍       | 12/50 [00:07<00:23,  1.60it/s] 26%|██▌       | 13/50 [00:08<00:25,  1.43it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=9, grad_norm: 20.656532, grad_max: 0.440631
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] t=10, grad_norm: 0.687921, grad_max: 0.037560
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=11, grad_norm: 23.932522, grad_max: 0.423117
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=12, grad_norm: 0.559597, grad_max: 0.028734
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0> 28%|██▊       | 14/50 [00:09<00:22,  1.60it/s] 30%|███       | 15/50 [00:10<00:24,  1.44it/s] 32%|███▏      | 16/50 [00:10<00:21,  1.60it/s] 34%|███▍      | 17/50 [00:11<00:22,  1.44it/s] 36%|███▌      | 18/50 [00:11<00:19,  1.60it/s]
[DeepCache DPS Debug] t=13, grad_norm: 39.835300, grad_max: 0.889968
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=36): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=14, grad_norm: 1.179105, grad_max: 0.085271
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=15, grad_norm: 48.335381, grad_max: 0.825638
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=16, grad_norm: 0.257430, grad_max: 0.010748
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=17, grad_norm: 68.779839, grad_max: 1.399402
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=2, clean_step=0 38%|███▊      | 19/50 [00:12<00:21,  1.44it/s] 40%|████      | 20/50 [00:13<00:18,  1.60it/s] 42%|████▏     | 21/50 [00:14<00:20,  1.44it/s] 44%|████▍     | 22/50 [00:14<00:17,  1.60it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=18, grad_norm: 0.151297, grad_max: 0.004657
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] t=19, grad_norm: 69.241402, grad_max: 1.569135
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=20, grad_norm: 1.014551, grad_max: 0.075349
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=21, grad_norm: 56.528572, grad_max: 1.065307
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=28): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0> 46%|████▌     | 23/50 [00:15<00:18,  1.44it/s] 48%|████▊     | 24/50 [00:15<00:16,  1.60it/s] 50%|█████     | 25/50 [00:16<00:17,  1.44it/s] 52%|█████▏    | 26/50 [00:17<00:15,  1.60it/s] 54%|█████▍    | 27/50 [00:18<00:16,  1.43it/s]
[DeepCache DPS Debug] t=22, grad_norm: 2.674150, grad_max: 0.253738
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=23, grad_norm: 61.001438, grad_max: 1.089070
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=24, grad_norm: 0.385607, grad_max: 0.027216
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837e20>
[DeepCache DPS Debug] t=25, grad_norm: 65.091591, grad_max: 1.492342
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=24): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=26, grad_norm: 8.048326, grad_max: 0.689848
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False 56%|█████▌    | 28/50 [00:18<00:13,  1.60it/s] 58%|█████▊    | 29/50 [00:19<00:14,  1.44it/s] 60%|██████    | 30/50 [00:19<00:12,  1.60it/s] 62%|██████▏   | 31/50 [00:20<00:13,  1.44it/s]
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=27, grad_norm: 72.651817, grad_max: 1.400861
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837880>
[DeepCache DPS Debug] t=28, grad_norm: 8.664320, grad_max: 0.617775
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=29, grad_norm: 81.895317, grad_max: 2.337959
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=30, grad_norm: 7.939220, grad_max: 0.738928
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39aa837fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39aa837fd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=31, grad_norm: 92.895630, grad_max: 2.643964 64%|██████▍   | 32/50 [00:21<00:11,  1.60it/s] 66%|██████▌   | 33/50 [00:22<00:11,  1.44it/s] 68%|██████▊   | 34/50 [00:22<00:10,  1.60it/s] 70%|███████   | 35/50 [00:23<00:10,  1.44it/s] 72%|███████▏  | 36/50 [00:23<00:08,  1.60it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=32, grad_norm: 38.057007, grad_max: 4.695782
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=33, grad_norm: 117.310455, grad_max: 2.836318
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=16): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=34, grad_norm: 5.086635, grad_max: 0.485789
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] t=35, grad_norm: 148.560837, grad_max: 3.387421
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True 74%|███████▍  | 37/50 [00:24<00:09,  1.44it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.60it/s] 78%|███████▊  | 39/50 [00:25<00:07,  1.44it/s] 80%|████████  | 40/50 [00:26<00:06,  1.60it/s]
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=36, grad_norm: 7.856456, grad_max: 0.634878
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=37, grad_norm: 166.583679, grad_max: 3.683017
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=12): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=38, grad_norm: 20.178690, grad_max: 2.160974
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=39, grad_norm: 203.093307, grad_max: 5.373507
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=40, grad_norm: 33.391785, grad_max: 3.698580 82%|████████▏ | 41/50 [00:27<00:06,  1.43it/s] 84%|████████▍ | 42/50 [00:27<00:05,  1.60it/s] 86%|████████▌ | 43/50 [00:28<00:04,  1.43it/s] 88%|████████▊ | 44/50 [00:29<00:03,  1.60it/s] 90%|█████████ | 45/50 [00:29<00:03,  1.43it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] t=41, grad_norm: 200.947586, grad_max: 5.257718
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=42, grad_norm: 52.957226, grad_max: 5.618881
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=43, grad_norm: 172.284119, grad_max: 7.294163
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=44, grad_norm: 42.405445, grad_max: 2.572019
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용 92%|█████████▏| 46/50 [00:30<00:02,  1.60it/s] 94%|█████████▍| 47/50 [00:31<00:02,  1.43it/s] 96%|█████████▌| 48/50 [00:31<00:01,  1.60it/s] 98%|█████████▊| 49/50 [00:32<00:00,  1.43it/s]
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=45, grad_norm: 125.651550, grad_max: 4.829152
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=4): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=46, grad_norm: 37.546196, grad_max: 1.896009
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] t=47, grad_norm: 51.563713, grad_max: 4.061079
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=48, grad_norm: 10.769428, grad_max: 0.761259
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=49, grad_norm: 0.294658, grad_max: 0.035851
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행100%|██████████| 50/50 [00:33<00:00,  1.34it/s]100%|██████████| 50/50 [00:33<00:00,  1.49it/s]

[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:29,  1.60it/s]  6%|▌         | 3/50 [00:02<00:34,  1.36it/s]  8%|▊         | 4/50 [00:02<00:28,  1.60it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=0, grad_norm: 92.867569, grad_max: 3.724640
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=1, grad_norm: 52.929928, grad_max: 1.525792
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=48): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=2, grad_norm: 87.913910, grad_max: 3.062958
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] t=3, grad_norm: 39.060482, grad_max: 1.069376
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710> 10%|█         | 5/50 [00:03<00:31,  1.41it/s] 12%|█▏        | 6/50 [00:03<00:27,  1.60it/s] 14%|█▍        | 7/50 [00:04<00:30,  1.42it/s] 16%|█▌        | 8/50 [00:05<00:26,  1.60it/s] 18%|█▊        | 9/50 [00:06<00:28,  1.43it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=4, grad_norm: 55.959854, grad_max: 2.250153
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=5, grad_norm: 28.170835, grad_max: 0.606707
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=6, grad_norm: 23.649860, grad_max: 1.684151
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=7, grad_norm: 22.889494, grad_max: 0.467318
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=8, grad_norm: 11.133723, grad_max: 1.725529
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=2, clean_step=0 20%|██        | 10/50 [00:06<00:24,  1.60it/s] 22%|██▏       | 11/50 [00:07<00:27,  1.43it/s] 24%|██▍       | 12/50 [00:07<00:23,  1.60it/s] 26%|██▌       | 13/50 [00:08<00:25,  1.44it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] t=9, grad_norm: 20.356985, grad_max: 0.388098
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=10, grad_norm: 0.553457, grad_max: 0.025854
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=11, grad_norm: 23.893351, grad_max: 0.532805
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990190970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990190970>
[DeepCache DPS Debug] t=12, grad_norm: 0.346182, grad_max: 0.022894
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710> 28%|██▊       | 14/50 [00:09<00:22,  1.60it/s] 30%|███       | 15/50 [00:10<00:24,  1.44it/s] 32%|███▏      | 16/50 [00:10<00:21,  1.60it/s] 34%|███▍      | 17/50 [00:11<00:22,  1.44it/s] 36%|███▌      | 18/50 [00:11<00:19,  1.60it/s]
[DeepCache DPS Debug] t=13, grad_norm: 40.196564, grad_max: 0.709730
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=36): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=14, grad_norm: 0.388376, grad_max: 0.015634
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39901935b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39901935b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=15, grad_norm: 48.751499, grad_max: 0.761985
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=16, grad_norm: 0.184546, grad_max: 0.004546
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=17, grad_norm: 69.432281, grad_max: 1.250858
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=2, clean_step=0 38%|███▊      | 19/50 [00:12<00:21,  1.44it/s] 40%|████      | 20/50 [00:13<00:18,  1.60it/s] 42%|████▏     | 21/50 [00:14<00:20,  1.44it/s] 44%|████▍     | 22/50 [00:14<00:17,  1.60it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] t=18, grad_norm: 0.154348, grad_max: 0.005208
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=19, grad_norm: 67.273056, grad_max: 1.280012
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=20, grad_norm: 1.640832, grad_max: 0.152740
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=21, grad_norm: 56.006023, grad_max: 1.309024
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=28): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710> 46%|████▌     | 23/50 [00:15<00:18,  1.44it/s] 48%|████▊     | 24/50 [00:15<00:16,  1.60it/s] 50%|█████     | 25/50 [00:16<00:17,  1.44it/s] 52%|█████▏    | 26/50 [00:17<00:15,  1.60it/s] 54%|█████▍    | 27/50 [00:18<00:16,  1.43it/s]
[DeepCache DPS Debug] t=22, grad_norm: 0.153110, grad_max: 0.009616
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=23, grad_norm: 61.078293, grad_max: 1.178500
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] t=24, grad_norm: 0.764276, grad_max: 0.041519
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=25, grad_norm: 65.129578, grad_max: 1.873812
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=24): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=26, grad_norm: 2.165945, grad_max: 0.144525
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False 56%|█████▌    | 28/50 [00:18<00:13,  1.60it/s] 58%|█████▊    | 29/50 [00:19<00:14,  1.44it/s] 60%|██████    | 30/50 [00:19<00:12,  1.60it/s] 62%|██████▏   | 31/50 [00:20<00:13,  1.44it/s]
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=27, grad_norm: 72.145836, grad_max: 1.454794
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=28, grad_norm: 16.485662, grad_max: 1.628011
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=29, grad_norm: 80.727432, grad_max: 1.836113
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] t=30, grad_norm: 10.354372, grad_max: 0.823333
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=31, grad_norm: 91.287041, grad_max: 1.714256 64%|██████▍   | 32/50 [00:21<00:11,  1.60it/s] 66%|██████▌   | 33/50 [00:21<00:11,  1.44it/s] 68%|██████▊   | 34/50 [00:22<00:09,  1.60it/s] 70%|███████   | 35/50 [00:23<00:10,  1.44it/s] 72%|███████▏  | 36/50 [00:23<00:08,  1.60it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=32, grad_norm: 3.389156, grad_max: 0.285288
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=33, grad_norm: 115.221977, grad_max: 2.395765
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=16): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=34, grad_norm: 11.930903, grad_max: 1.143456
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=35, grad_norm: 148.978348, grad_max: 4.407617
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True 74%|███████▍  | 37/50 [00:24<00:09,  1.44it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.60it/s] 78%|███████▊  | 39/50 [00:25<00:07,  1.44it/s] 80%|████████  | 40/50 [00:26<00:06,  1.60it/s]
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] t=36, grad_norm: 13.582645, grad_max: 3.487134
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=37, grad_norm: 171.103622, grad_max: 4.937436
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=12): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=38, grad_norm: 14.837765, grad_max: 1.276873
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=39, grad_norm: 192.161133, grad_max: 4.393013
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=40, grad_norm: 30.271448, grad_max: 4.611565 82%|████████▏ | 41/50 [00:27<00:06,  1.43it/s] 84%|████████▍ | 42/50 [00:27<00:05,  1.60it/s] 86%|████████▌ | 43/50 [00:28<00:04,  1.44it/s] 88%|████████▊ | 44/50 [00:29<00:03,  1.60it/s] 90%|█████████ | 45/50 [00:29<00:03,  1.44it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=41, grad_norm: 194.131058, grad_max: 4.439069
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] t=42, grad_norm: 36.666862, grad_max: 2.844134
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=43, grad_norm: 189.046570, grad_max: 4.797945
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=44, grad_norm: 40.137600, grad_max: 3.807543
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용 92%|█████████▏| 46/50 [00:30<00:02,  1.60it/s] 94%|█████████▍| 47/50 [00:31<00:02,  1.44it/s] 96%|█████████▌| 48/50 [00:31<00:01,  1.60it/s] 98%|█████████▊| 49/50 [00:32<00:00,  1.44it/s]
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] t=45, grad_norm: 142.175537, grad_max: 5.295580
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=4): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=46, grad_norm: 38.764244, grad_max: 2.967721
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=47, grad_norm: 60.751945, grad_max: 3.943289
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9cc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9cc40>
[DeepCache DPS Debug] t=48, grad_norm: 20.866119, grad_max: 0.878866
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=49, grad_norm: 20.865335, grad_max: 1.727392
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행100%|██████████| 50/50 [00:33<00:00,  1.34it/s]100%|██████████| 50/50 [00:33<00:00,  1.50it/s]

[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:30,  1.60it/s]  6%|▌         | 3/50 [00:02<00:34,  1.36it/s]  8%|▊         | 4/50 [00:02<00:28,  1.60it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=0, grad_norm: 93.343056, grad_max: 2.707947
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39adf9ccd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39adf9ccd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=1, grad_norm: 52.815136, grad_max: 1.646994
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=48): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=2, grad_norm: 81.094742, grad_max: 2.085648
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=3, grad_norm: 37.862164, grad_max: 1.200494
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0> 10%|█         | 5/50 [00:03<00:31,  1.41it/s] 12%|█▏        | 6/50 [00:03<00:27,  1.60it/s] 14%|█▍        | 7/50 [00:04<00:30,  1.43it/s] 16%|█▌        | 8/50 [00:05<00:26,  1.60it/s] 18%|█▊        | 9/50 [00:06<00:28,  1.43it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=4, grad_norm: 53.437046, grad_max: 2.403336
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=5, grad_norm: 27.927332, grad_max: 0.657817
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=6, grad_norm: 20.069424, grad_max: 0.999725
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=7, grad_norm: 22.682966, grad_max: 0.528927
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=8, grad_norm: 6.551033, grad_max: 0.836647
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=2, clean_step=0 20%|██        | 10/50 [00:06<00:24,  1.60it/s] 22%|██▏       | 11/50 [00:07<00:27,  1.43it/s] 24%|██▍       | 12/50 [00:07<00:23,  1.60it/s] 26%|██▌       | 13/50 [00:08<00:25,  1.44it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=9, grad_norm: 20.510811, grad_max: 0.452839
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=10, grad_norm: 0.450248, grad_max: 0.021232
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=11, grad_norm: 23.556599, grad_max: 0.476257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=12, grad_norm: 0.851086, grad_max: 0.066267
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520> 28%|██▊       | 14/50 [00:09<00:22,  1.60it/s] 30%|███       | 15/50 [00:10<00:24,  1.44it/s] 32%|███▏      | 16/50 [00:10<00:21,  1.60it/s] 34%|███▍      | 17/50 [00:11<00:22,  1.44it/s] 36%|███▌      | 18/50 [00:11<00:19,  1.60it/s]
[DeepCache DPS Debug] t=13, grad_norm: 41.068211, grad_max: 0.822849
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=36): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=14, grad_norm: 0.419763, grad_max: 0.018592
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=15, grad_norm: 50.249310, grad_max: 0.896750
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=16, grad_norm: 0.210616, grad_max: 0.006145
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=17, grad_norm: 68.449585, grad_max: 1.162335
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=2, clean_step=0 38%|███▊      | 19/50 [00:12<00:21,  1.44it/s] 40%|████      | 20/50 [00:13<00:18,  1.60it/s] 42%|████▏     | 21/50 [00:14<00:20,  1.44it/s] 44%|████▍     | 22/50 [00:14<00:17,  1.60it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=18, grad_norm: 0.141775, grad_max: 0.004148
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=19, grad_norm: 70.692032, grad_max: 1.252386
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=20, grad_norm: 0.165344, grad_max: 0.006410
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=21, grad_norm: 57.278229, grad_max: 1.610672
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=28): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0> 46%|████▌     | 23/50 [00:15<00:18,  1.44it/s] 48%|████▊     | 24/50 [00:15<00:16,  1.60it/s] 50%|█████     | 25/50 [00:16<00:17,  1.44it/s] 52%|█████▏    | 26/50 [00:17<00:14,  1.60it/s] 54%|█████▍    | 27/50 [00:18<00:16,  1.44it/s]
[DeepCache DPS Debug] t=22, grad_norm: 0.117122, grad_max: 0.009154
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=23, grad_norm: 60.283649, grad_max: 0.888650
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=24, grad_norm: 1.801805, grad_max: 0.157858
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=25, grad_norm: 65.230988, grad_max: 1.112976
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=24): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=26, grad_norm: 5.244562, grad_max: 0.547629
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False 56%|█████▌    | 28/50 [00:18<00:13,  1.60it/s] 58%|█████▊    | 29/50 [00:19<00:14,  1.44it/s] 60%|██████    | 30/50 [00:19<00:12,  1.60it/s] 62%|██████▏   | 31/50 [00:20<00:13,  1.44it/s]
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=27, grad_norm: 75.288948, grad_max: 1.434528
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=28, grad_norm: 3.901453, grad_max: 0.362943
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=29, grad_norm: 79.602211, grad_max: 1.932222
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=30, grad_norm: 9.871611, grad_max: 0.749120
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=31, grad_norm: 90.333588, grad_max: 2.002548 64%|██████▍   | 32/50 [00:21<00:11,  1.60it/s] 66%|██████▌   | 33/50 [00:21<00:11,  1.44it/s] 68%|██████▊   | 34/50 [00:22<00:09,  1.60it/s] 70%|███████   | 35/50 [00:23<00:10,  1.44it/s] 72%|███████▏  | 36/50 [00:23<00:08,  1.60it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=32, grad_norm: 3.517396, grad_max: 0.272179
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=33, grad_norm: 113.867348, grad_max: 2.639023
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=16): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=34, grad_norm: 18.138577, grad_max: 2.864718
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=35, grad_norm: 152.619003, grad_max: 3.538049
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True 74%|███████▍  | 37/50 [00:24<00:09,  1.44it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.60it/s] 78%|███████▊  | 39/50 [00:25<00:07,  1.44it/s] 80%|████████  | 40/50 [00:26<00:06,  1.60it/s]
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=36, grad_norm: 9.280181, grad_max: 0.581987
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=37, grad_norm: 174.938995, grad_max: 5.058869
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=12): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=38, grad_norm: 20.565575, grad_max: 2.427990
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=39, grad_norm: 199.364746, grad_max: 4.600867
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=40, grad_norm: 20.824335, grad_max: 1.862875 82%|████████▏ | 41/50 [00:27<00:06,  1.44it/s] 84%|████████▍ | 42/50 [00:27<00:04,  1.60it/s] 86%|████████▌ | 43/50 [00:28<00:04,  1.44it/s] 88%|████████▊ | 44/50 [00:29<00:03,  1.60it/s] 90%|█████████ | 45/50 [00:29<00:03,  1.44it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=41, grad_norm: 193.582520, grad_max: 4.772696
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=42, grad_norm: 44.601467, grad_max: 4.543566
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=43, grad_norm: 181.826385, grad_max: 7.074322
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=44, grad_norm: 66.918793, grad_max: 5.399634
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용 92%|█████████▏| 46/50 [00:30<00:02,  1.60it/s] 94%|█████████▍| 47/50 [00:31<00:02,  1.44it/s] 96%|█████████▌| 48/50 [00:31<00:01,  1.60it/s] 98%|█████████▊| 49/50 [00:32<00:00,  1.44it/s]
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=45, grad_norm: 134.381195, grad_max: 6.549922
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=4): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=46, grad_norm: 44.408386, grad_max: 2.393415
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=47, grad_norm: 47.448776, grad_max: 2.463899
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=48, grad_norm: 15.036107, grad_max: 1.242039
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=49, grad_norm: 11.024509, grad_max: 1.351707
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행100%|██████████| 50/50 [00:33<00:00,  1.34it/s]100%|██████████| 50/50 [00:33<00:00,  1.50it/s]

[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:29,  1.60it/s]  6%|▌         | 3/50 [00:02<00:34,  1.37it/s]  8%|▊         | 4/50 [00:02<00:28,  1.60it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=0, grad_norm: 96.141052, grad_max: 2.672424
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=1, grad_norm: 53.075432, grad_max: 1.638840
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=48): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=2, grad_norm: 90.688828, grad_max: 2.747391
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=3, grad_norm: 38.424526, grad_max: 0.869615
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0> 10%|█         | 5/50 [00:03<00:31,  1.41it/s] 12%|█▏        | 6/50 [00:03<00:27,  1.60it/s] 14%|█▍        | 7/50 [00:04<00:30,  1.42it/s] 16%|█▌        | 8/50 [00:05<00:26,  1.60it/s] 18%|█▊        | 9/50 [00:06<00:28,  1.43it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=4, grad_norm: 56.642651, grad_max: 2.495590
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=5, grad_norm: 28.680737, grad_max: 0.649432
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=6, grad_norm: 22.972145, grad_max: 2.101437
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=7, grad_norm: 22.585657, grad_max: 0.514790
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=8, grad_norm: 3.386552, grad_max: 0.268768
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=2, clean_step=0 20%|██        | 10/50 [00:06<00:24,  1.60it/s] 22%|██▏       | 11/50 [00:07<00:27,  1.44it/s] 24%|██▍       | 12/50 [00:07<00:23,  1.60it/s] 26%|██▌       | 13/50 [00:08<00:25,  1.44it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=9, grad_norm: 20.746830, grad_max: 0.486362
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=10, grad_norm: 1.166341, grad_max: 0.078249
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=11, grad_norm: 23.746244, grad_max: 0.430872
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=12, grad_norm: 0.506691, grad_max: 0.034632
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0> 28%|██▊       | 14/50 [00:09<00:22,  1.60it/s] 30%|███       | 15/50 [00:10<00:24,  1.44it/s] 32%|███▏      | 16/50 [00:10<00:21,  1.60it/s] 34%|███▍      | 17/50 [00:11<00:22,  1.44it/s] 36%|███▌      | 18/50 [00:11<00:19,  1.60it/s]
[DeepCache DPS Debug] t=13, grad_norm: 40.470028, grad_max: 0.772448
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=36): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=14, grad_norm: 0.712999, grad_max: 0.048850
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=15, grad_norm: 50.832397, grad_max: 0.840114
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=16, grad_norm: 0.209852, grad_max: 0.008120
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=17, grad_norm: 70.250420, grad_max: 1.639853
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=2, clean_step=0 38%|███▊      | 19/50 [00:12<00:21,  1.44it/s] 40%|████      | 20/50 [00:13<00:18,  1.60it/s] 42%|████▏     | 21/50 [00:14<00:20,  1.44it/s] 44%|████▍     | 22/50 [00:14<00:17,  1.60it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=18, grad_norm: 0.152854, grad_max: 0.004366
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=19, grad_norm: 71.952171, grad_max: 1.547012
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=20, grad_norm: 1.784224, grad_max: 0.129989
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=21, grad_norm: 56.751484, grad_max: 0.955277
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=28): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0> 46%|████▌     | 23/50 [00:15<00:18,  1.44it/s] 48%|████▊     | 24/50 [00:15<00:16,  1.60it/s] 50%|█████     | 25/50 [00:16<00:17,  1.44it/s] 52%|█████▏    | 26/50 [00:17<00:14,  1.60it/s] 54%|█████▍    | 27/50 [00:18<00:15,  1.44it/s]
[DeepCache DPS Debug] t=22, grad_norm: 5.675438, grad_max: 0.311214
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=23, grad_norm: 62.194714, grad_max: 0.902710
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=24, grad_norm: 10.543460, grad_max: 1.272737
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=25, grad_norm: 64.366974, grad_max: 1.206638
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=24): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=26, grad_norm: 9.717722, grad_max: 0.964369
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False 56%|█████▌    | 28/50 [00:18<00:13,  1.60it/s] 58%|█████▊    | 29/50 [00:19<00:14,  1.44it/s] 60%|██████    | 30/50 [00:19<00:12,  1.60it/s] 62%|██████▏   | 31/50 [00:20<00:13,  1.44it/s]
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=27, grad_norm: 71.669991, grad_max: 1.293721
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=28, grad_norm: 14.888794, grad_max: 1.473768
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=29, grad_norm: 81.105919, grad_max: 3.822361
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=30, grad_norm: 12.413510, grad_max: 0.975992
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=31, grad_norm: 96.827202, grad_max: 2.808808 64%|██████▍   | 32/50 [00:21<00:11,  1.60it/s] 66%|██████▌   | 33/50 [00:21<00:11,  1.44it/s] 68%|██████▊   | 34/50 [00:22<00:09,  1.60it/s] 70%|███████   | 35/50 [00:23<00:10,  1.44it/s] 72%|███████▏  | 36/50 [00:23<00:08,  1.60it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=32, grad_norm: 6.733873, grad_max: 0.747024
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=33, grad_norm: 116.259987, grad_max: 4.639703
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=16): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=34, grad_norm: 23.178320, grad_max: 3.188396
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=35, grad_norm: 148.840668, grad_max: 3.231202
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True 74%|███████▍  | 37/50 [00:24<00:09,  1.44it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.60it/s] 78%|███████▊  | 39/50 [00:25<00:07,  1.44it/s] 80%|████████  | 40/50 [00:26<00:06,  1.60it/s]
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=36, grad_norm: 26.031107, grad_max: 2.045622
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=37, grad_norm: 184.150589, grad_max: 5.725904
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=12): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=38, grad_norm: 15.899217, grad_max: 1.023756
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=39, grad_norm: 198.932510, grad_max: 6.752309
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=40, grad_norm: 22.028048, grad_max: 2.623415 82%|████████▏ | 41/50 [00:27<00:06,  1.44it/s] 84%|████████▍ | 42/50 [00:27<00:04,  1.60it/s] 86%|████████▌ | 43/50 [00:28<00:04,  1.44it/s] 88%|████████▊ | 44/50 [00:29<00:03,  1.60it/s] 90%|█████████ | 45/50 [00:29<00:03,  1.44it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=41, grad_norm: 198.986084, grad_max: 5.532948
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=42, grad_norm: 38.157528, grad_max: 2.421622
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=43, grad_norm: 178.863358, grad_max: 4.108397
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=44, grad_norm: 41.543159, grad_max: 5.629602
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용 92%|█████████▏| 46/50 [00:30<00:02,  1.60it/s] 94%|█████████▍| 47/50 [00:31<00:02,  1.44it/s] 96%|█████████▌| 48/50 [00:31<00:01,  1.60it/s] 98%|█████████▊| 49/50 [00:32<00:00,  1.44it/s]
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=45, grad_norm: 130.608475, grad_max: 5.651299
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=4): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=46, grad_norm: 39.449463, grad_max: 3.978441
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=47, grad_norm: 72.960541, grad_max: 3.365069
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=48, grad_norm: 21.318401, grad_max: 1.606230
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=49, grad_norm: 12.309131, grad_max: 1.033946
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행100%|██████████| 50/50 [00:33<00:00,  1.34it/s]100%|██████████| 50/50 [00:33<00:00,  1.50it/s]

[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:29,  1.60it/s]  6%|▌         | 3/50 [00:02<00:34,  1.37it/s]  8%|▊         | 4/50 [00:02<00:28,  1.60it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=0, grad_norm: 90.057022, grad_max: 2.067078
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=1, grad_norm: 52.992435, grad_max: 1.323833
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=48): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=2, grad_norm: 85.621429, grad_max: 2.710157
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=3, grad_norm: 38.362183, grad_max: 0.863078
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710> 10%|█         | 5/50 [00:03<00:31,  1.41it/s] 12%|█▏        | 6/50 [00:03<00:27,  1.60it/s] 14%|█▍        | 7/50 [00:04<00:30,  1.43it/s] 16%|█▌        | 8/50 [00:05<00:26,  1.60it/s] 18%|█▊        | 9/50 [00:06<00:28,  1.43it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=4, grad_norm: 52.335007, grad_max: 2.577225
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=5, grad_norm: 28.538439, grad_max: 0.732245
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=6, grad_norm: 20.465921, grad_max: 2.157227
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=7, grad_norm: 22.858006, grad_max: 0.500472
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=8, grad_norm: 4.187510, grad_max: 0.455793
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=2, clean_step=0 20%|██        | 10/50 [00:06<00:24,  1.60it/s] 22%|██▏       | 11/50 [00:07<00:27,  1.44it/s] 24%|██▍       | 12/50 [00:07<00:23,  1.60it/s] 26%|██▌       | 13/50 [00:08<00:25,  1.44it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=9, grad_norm: 20.665956, grad_max: 0.462661
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=10, grad_norm: 1.153270, grad_max: 0.048913
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=11, grad_norm: 23.619850, grad_max: 0.478158
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=12, grad_norm: 0.818588, grad_max: 0.068643
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710> 28%|██▊       | 14/50 [00:09<00:22,  1.60it/s] 30%|███       | 15/50 [00:10<00:24,  1.44it/s] 32%|███▏      | 16/50 [00:10<00:21,  1.60it/s] 34%|███▍      | 17/50 [00:11<00:22,  1.44it/s] 36%|███▌      | 18/50 [00:11<00:19,  1.60it/s]
[DeepCache DPS Debug] t=13, grad_norm: 40.134262, grad_max: 0.842550
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=36): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=14, grad_norm: 0.557814, grad_max: 0.030605
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=15, grad_norm: 49.367527, grad_max: 0.871042
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=16, grad_norm: 0.476354, grad_max: 0.027092
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=17, grad_norm: 69.670395, grad_max: 0.980429
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=2, clean_step=0 38%|███▊      | 19/50 [00:12<00:21,  1.44it/s] 40%|████      | 20/50 [00:13<00:18,  1.60it/s] 42%|████▏     | 21/50 [00:14<00:20,  1.44it/s] 44%|████▍     | 22/50 [00:14<00:17,  1.60it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=18, grad_norm: 0.180425, grad_max: 0.005816
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=19, grad_norm: 67.215263, grad_max: 1.165602
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=20, grad_norm: 0.860857, grad_max: 0.043177
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=21, grad_norm: 57.460602, grad_max: 1.063904
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=28): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710> 46%|████▌     | 23/50 [00:15<00:18,  1.44it/s] 48%|████▊     | 24/50 [00:15<00:16,  1.60it/s] 50%|█████     | 25/50 [00:16<00:17,  1.44it/s] 52%|█████▏    | 26/50 [00:17<00:14,  1.60it/s] 54%|█████▍    | 27/50 [00:18<00:15,  1.44it/s]
[DeepCache DPS Debug] t=22, grad_norm: 3.985892, grad_max: 0.481506
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=23, grad_norm: 61.153698, grad_max: 1.034933
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=24, grad_norm: 3.567895, grad_max: 0.209019
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=25, grad_norm: 64.842758, grad_max: 1.103580
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=24): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=26, grad_norm: 3.260897, grad_max: 0.263287
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False 56%|█████▌    | 28/50 [00:18<00:13,  1.60it/s] 58%|█████▊    | 29/50 [00:19<00:14,  1.44it/s] 60%|██████    | 30/50 [00:19<00:12,  1.60it/s] 62%|██████▏   | 31/50 [00:20<00:13,  1.44it/s]
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=27, grad_norm: 73.412781, grad_max: 1.661093
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=28, grad_norm: 9.783918, grad_max: 0.672489
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=29, grad_norm: 79.092216, grad_max: 1.961767
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=30, grad_norm: 10.215266, grad_max: 0.730371
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=31, grad_norm: 93.793221, grad_max: 1.718006 64%|██████▍   | 32/50 [00:21<00:11,  1.60it/s] 66%|██████▌   | 33/50 [00:21<00:11,  1.44it/s] 68%|██████▊   | 34/50 [00:22<00:09,  1.60it/s] 70%|███████   | 35/50 [00:23<00:10,  1.44it/s] 72%|███████▏  | 36/50 [00:23<00:08,  1.60it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=32, grad_norm: 4.611187, grad_max: 0.561505
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=33, grad_norm: 112.312363, grad_max: 2.114003
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=16): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=34, grad_norm: 15.892110, grad_max: 3.692355
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=35, grad_norm: 151.900467, grad_max: 4.662604
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True 74%|███████▍  | 37/50 [00:24<00:09,  1.44it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.60it/s] 78%|███████▊  | 39/50 [00:25<00:07,  1.44it/s] 80%|████████  | 40/50 [00:26<00:06,  1.60it/s]
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=36, grad_norm: 16.068399, grad_max: 1.710560
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=37, grad_norm: 178.536026, grad_max: 4.335791
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=12): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=38, grad_norm: 13.777936, grad_max: 1.035186
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=39, grad_norm: 197.137329, grad_max: 4.591542
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=40, grad_norm: 25.454460, grad_max: 2.468338 82%|████████▏ | 41/50 [00:27<00:06,  1.44it/s] 84%|████████▍ | 42/50 [00:27<00:04,  1.60it/s] 86%|████████▌ | 43/50 [00:28<00:04,  1.44it/s] 88%|████████▊ | 44/50 [00:29<00:03,  1.60it/s] 90%|█████████ | 45/50 [00:29<00:03,  1.44it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=41, grad_norm: 191.122543, grad_max: 5.476029
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=42, grad_norm: 60.379601, grad_max: 5.830552
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=43, grad_norm: 177.383911, grad_max: 5.211774
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=44, grad_norm: 57.080635, grad_max: 3.478930
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용 92%|█████████▏| 46/50 [00:30<00:02,  1.60it/s] 94%|█████████▍| 47/50 [00:31<00:02,  1.44it/s] 96%|█████████▌| 48/50 [00:31<00:01,  1.60it/s] 98%|█████████▊| 49/50 [00:32<00:00,  1.44it/s]
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=45, grad_norm: 134.500702, grad_max: 5.095202
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=4): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=46, grad_norm: 44.388340, grad_max: 3.647200
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=47, grad_norm: 51.064156, grad_max: 3.465279
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=48, grad_norm: 28.806496, grad_max: 2.304538
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=49, grad_norm: 9.476444, grad_max: 1.103925
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행100%|██████████| 50/50 [00:33<00:00,  1.34it/s]100%|██████████| 50/50 [00:33<00:00,  1.50it/s]

[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:29,  1.61it/s]  6%|▌         | 3/50 [00:02<00:34,  1.37it/s]  8%|▊         | 4/50 [00:02<00:28,  1.61it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=0, grad_norm: 92.322716, grad_max: 2.177895
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=1, grad_norm: 53.244656, grad_max: 1.379750
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=48): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=2, grad_norm: 90.378204, grad_max: 2.495148
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=48): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=3, grad_norm: 38.067741, grad_max: 0.974376
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0> 10%|█         | 5/50 [00:03<00:31,  1.41it/s] 12%|█▏        | 6/50 [00:03<00:27,  1.60it/s] 14%|█▍        | 7/50 [00:04<00:30,  1.43it/s] 16%|█▌        | 8/50 [00:05<00:26,  1.60it/s] 18%|█▊        | 9/50 [00:06<00:28,  1.43it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=4, grad_norm: 55.422424, grad_max: 2.014465
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=5, grad_norm: 28.794783, grad_max: 0.623425
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=6, grad_norm: 25.054150, grad_max: 1.843948
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=7, grad_norm: 22.967737, grad_max: 0.546002
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=8, grad_norm: 3.470901, grad_max: 0.286379
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=2, clean_step=0 20%|██        | 10/50 [00:06<00:24,  1.60it/s] 22%|██▏       | 11/50 [00:07<00:27,  1.44it/s] 24%|██▍       | 12/50 [00:07<00:23,  1.60it/s] 26%|██▌       | 13/50 [00:08<00:25,  1.44it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=9, grad_norm: 20.859947, grad_max: 0.503055
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=10, grad_norm: 0.999677, grad_max: 0.105735
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=11, grad_norm: 23.480707, grad_max: 0.452701
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=12, grad_norm: 1.516420, grad_max: 0.141830
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520> 28%|██▊       | 14/50 [00:09<00:22,  1.60it/s] 30%|███       | 15/50 [00:10<00:24,  1.44it/s] 32%|███▏      | 16/50 [00:10<00:21,  1.60it/s] 34%|███▍      | 17/50 [00:11<00:22,  1.44it/s] 36%|███▌      | 18/50 [00:11<00:19,  1.60it/s]
[DeepCache DPS Debug] t=13, grad_norm: 39.941120, grad_max: 0.821078
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=36): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=14, grad_norm: 0.442941, grad_max: 0.023146
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=36): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=15, grad_norm: 49.344074, grad_max: 0.942045
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=16, grad_norm: 0.167136, grad_max: 0.007586
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=17, grad_norm: 69.835960, grad_max: 1.414974
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=2, clean_step=0 38%|███▊      | 19/50 [00:12<00:21,  1.44it/s] 40%|████      | 20/50 [00:13<00:18,  1.61it/s] 42%|████▏     | 21/50 [00:14<00:20,  1.44it/s] 44%|████▍     | 22/50 [00:14<00:17,  1.60it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=18, grad_norm: 0.134931, grad_max: 0.007501
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=19, grad_norm: 68.343208, grad_max: 1.601667
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=20, grad_norm: 0.226244, grad_max: 0.011762
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=21, grad_norm: 56.574879, grad_max: 0.954265
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=28): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0> 46%|████▌     | 23/50 [00:15<00:18,  1.44it/s] 48%|████▊     | 24/50 [00:15<00:16,  1.60it/s] 50%|█████     | 25/50 [00:16<00:17,  1.44it/s] 52%|█████▏    | 26/50 [00:17<00:14,  1.60it/s] 54%|█████▍    | 27/50 [00:17<00:15,  1.44it/s]
[DeepCache DPS Debug] t=22, grad_norm: 3.164382, grad_max: 0.242130
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=28): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=23, grad_norm: 61.667374, grad_max: 1.315162
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=24, grad_norm: 5.877697, grad_max: 0.470029
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=25, grad_norm: 65.282906, grad_max: 1.049238
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=24): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=26, grad_norm: 0.962133, grad_max: 0.079551
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=24): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False 56%|█████▌    | 28/50 [00:18<00:13,  1.60it/s] 58%|█████▊    | 29/50 [00:19<00:14,  1.44it/s] 60%|██████    | 30/50 [00:19<00:12,  1.60it/s] 62%|██████▏   | 31/50 [00:20<00:13,  1.44it/s]
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=27, grad_norm: 72.904617, grad_max: 1.576106
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=28, grad_norm: 0.156671, grad_max: 0.007443
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=29, grad_norm: 80.356880, grad_max: 1.864151
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=30, grad_norm: 17.373976, grad_max: 2.216992
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=31, grad_norm: 90.814934, grad_max: 2.576843 64%|██████▍   | 32/50 [00:21<00:11,  1.60it/s] 66%|██████▌   | 33/50 [00:21<00:11,  1.44it/s] 68%|██████▊   | 34/50 [00:22<00:09,  1.60it/s] 70%|███████   | 35/50 [00:23<00:10,  1.44it/s] 72%|███████▏  | 36/50 [00:23<00:08,  1.61it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=32, grad_norm: 14.766987, grad_max: 1.474065
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=33, grad_norm: 115.287598, grad_max: 2.621792
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=16): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=34, grad_norm: 16.275162, grad_max: 1.499048
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=16): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=35, grad_norm: 149.721817, grad_max: 3.148739
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True 74%|███████▍  | 37/50 [00:24<00:08,  1.45it/s] 76%|███████▌  | 38/50 [00:25<00:07,  1.61it/s] 78%|███████▊  | 39/50 [00:25<00:07,  1.45it/s] 80%|████████  | 40/50 [00:26<00:06,  1.61it/s]
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=36, grad_norm: 11.311276, grad_max: 1.032585
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=37, grad_norm: 174.635254, grad_max: 3.001869
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=12): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=38, grad_norm: 15.567403, grad_max: 1.649925
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=12): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=39, grad_norm: 194.301727, grad_max: 4.532537
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=40, grad_norm: 23.329155, grad_max: 3.800591 82%|████████▏ | 41/50 [00:27<00:06,  1.45it/s] 84%|████████▍ | 42/50 [00:27<00:04,  1.61it/s] 86%|████████▌ | 43/50 [00:28<00:04,  1.45it/s] 88%|████████▊ | 44/50 [00:28<00:03,  1.62it/s] 90%|█████████ | 45/50 [00:29<00:03,  1.45it/s]
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=41, grad_norm: 197.270737, grad_max: 4.225061
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=42, grad_norm: 41.509602, grad_max: 3.609103
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=43, grad_norm: 173.935013, grad_max: 5.623359
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=44, grad_norm: 48.453564, grad_max: 5.375235
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용 92%|█████████▏| 46/50 [00:30<00:02,  1.62it/s] 94%|█████████▍| 47/50 [00:31<00:02,  1.45it/s] 96%|█████████▌| 48/50 [00:31<00:01,  1.62it/s] 98%|█████████▊| 49/50 [00:32<00:00,  1.45it/s]
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=45, grad_norm: 152.587112, grad_max: 8.156512
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=4): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3990098ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3990098ac0>
[DeepCache DPS Debug] t=46, grad_norm: 47.820797, grad_max: 3.659661
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=4): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
[DeepCache DPS Debug] t=47, grad_norm: 58.673130, grad_max: 5.001980
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=2, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=9
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U9 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39900943a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39900943a0>
[DeepCache DPS Debug] t=48, grad_norm: 30.683088, grad_max: 2.434421
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=2, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=2, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=2, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399009b520>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399009b520>
[DeepCache DPS Debug] t=49, grad_norm: 8.554626, grad_max: 0.573672
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=2, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행100%|██████████| 50/50 [00:33<00:00,  1.35it/s]100%|██████████| 50/50 [00:33<00:00,  1.50it/s]

[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U8 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f399007e710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f399007e710>
save npy to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_2_layer_depth_9/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0/images.npy
Saving images to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_2_layer_depth_9/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0/images.png
