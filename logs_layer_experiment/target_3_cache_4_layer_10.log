/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:441: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
attention mode is flash
logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_4_layer_depth_10/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0
Logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_4_layer_depth_10/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0
Arguments: Arguments(data_type='image', dataset='cifar10', task='label_guidance', image_size=32, include_charges=False, generators_path='./pretrained_models/EDMsecond/generative_model_ema.npy', args_generators_path='./pretrained_models/EDMsecond/args.pickle', energy_path='./pretrained_models/tf_predict_mu/model_ema_2000.npy', args_energy_path='./pretrained_models/tf_predict_mu/args_2000.pickle', classifiers_path='./pretrained_models/evaluate_mu/best_checkpoint.npy', args_classifiers_path='./pretrained_models/evaluate_mu/args.pickle', clip_scale=100, audio_length=10, volume_factor=80.0, motion_prompt='walk', radius=3.0, model_name_or_path='openai_cifar10.pt', model_type='unet', use_deepcache=True, cache_interval=4, cache_block_id=10, skip_mode='uniform', clean_step=0, vae='mse', train_steps=1000, inference_steps=50, eta=1.0, clip_x0=True, clip_sample_range=1.0, seed=42, device=device(type='cuda'), logging_dir='/home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_4_layer_depth_10/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0', logger=None, per_sample_batch_size=128, num_samples=1024, batch_id=0, guidance_name='dps', guider='classifier', target='3', recur_steps=1, iter_steps=4, guidance_strength=1.0, guidance_scale=1.0, start_gradient=50, use_early_exit=False, early_exit_layer=None, use_time_based_early_exit=False, time_early_exit_mapping=None, rho=1.0, mu=0.25, sigma=0.001, eps_bsz=1, rho_schedule='increase', mu_schedule='increase', sigma_schedule='decrease', guide_network='resnet_cifar10.pt', classifier_image_size=224, eval_batch_size=512, logging_resolution=512, log_suffix='', log_traj=False, max_show_images=256, check_done=False, wandb=False, wandb_project='trail', wandb_name=None, wandb_entity='llm-selection', saved_file=None, sort_metric=None, topk=5, output_path='vis_molecule', output_dir=None, max_n_samples=10000000000, bon_rate=1, bon_guidance=None)
[DeepCache] DeepCacheDPSGuidance 초기화: use_deepcache=True, cache_interval=4
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:56,  1.16s/it]  4%|▍         | 2/50 [00:01<00:34,  1.38it/s]  6%|▌         | 3/50 [00:01<00:27,  1.72it/s]  8%|▊         | 4/50 [00:02<00:23,  1.95it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache] DeepCache UNet 초기화: cache_interval=4, cache_block_id=10, clean_step=0
[DeepCache Debug] 첫 번째 실행: start_timestep=50
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b8b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b8b20>
[DeepCache DPS Debug] t=0, grad_norm: 91.953552, grad_max: 2.087524
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b89d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b89d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b8a60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b8a60>
[DeepCache DPS Debug] t=1, grad_norm: 53.075405, grad_max: 1.282916
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9240>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9240>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b93f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b93f0>
[DeepCache DPS Debug] t=2, grad_norm: 41.823730, grad_max: 1.251620
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b91b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b91b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9210>
[DeepCache DPS Debug] t=3, grad_norm: 34.650429, grad_max: 0.914309
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b8b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b8b20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b88e0> 10%|█         | 5/50 [00:03<00:27,  1.66it/s] 12%|█▏        | 6/50 [00:03<00:23,  1.86it/s] 14%|█▍        | 7/50 [00:03<00:21,  2.02it/s] 16%|█▌        | 8/50 [00:04<00:19,  2.14it/s] 18%|█▊        | 9/50 [00:05<00:22,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b88e0>
[DeepCache DPS Debug] t=4, grad_norm: 56.366287, grad_max: 1.850750
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b8b50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b8b50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b97b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b97b0>
[DeepCache DPS Debug] t=5, grad_norm: 28.760147, grad_max: 0.676491
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b8a00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9510>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9510>
[DeepCache DPS Debug] t=6, grad_norm: 22.727970, grad_max: 0.531922
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9c00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9c00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9c60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9c60>
[DeepCache DPS Debug] t=7, grad_norm: 19.119066, grad_max: 0.394581
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b88e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b88e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9a20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9a20>
[DeepCache DPS Debug] t=8, grad_norm: 6.031519, grad_max: 0.712420
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9930>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9930>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:20,  1.95it/s] 22%|██▏       | 11/50 [00:05<00:18,  2.08it/s] 24%|██▍       | 12/50 [00:06<00:17,  2.17it/s] 26%|██▌       | 13/50 [00:07<00:20,  1.81it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9ab0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9ab0>
[DeepCache DPS Debug] t=9, grad_norm: 20.610031, grad_max: 0.422973
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9600>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9600>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9540>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9540>
[DeepCache DPS Debug] t=10, grad_norm: 15.776963, grad_max: 0.350634
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9c30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9c30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04ba0b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04ba0b0>
[DeepCache DPS Debug] t=11, grad_norm: 13.733452, grad_max: 0.299342
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b8fd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b8fd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9ab0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9ab0>
[DeepCache DPS Debug] t=12, grad_norm: 1.662383, grad_max: 0.124180
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b98d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b98d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9360> 28%|██▊       | 14/50 [00:07<00:18,  1.96it/s] 30%|███       | 15/50 [00:07<00:16,  2.09it/s] 32%|███▏      | 16/50 [00:08<00:18,  1.87it/s] 34%|███▍      | 17/50 [00:09<00:19,  1.65it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9360>
[DeepCache DPS Debug] t=13, grad_norm: 39.713444, grad_max: 0.738620
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b8c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b8c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9060>
[DeepCache DPS Debug] t=14, grad_norm: 24.914021, grad_max: 0.640425
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04ba380>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04ba380>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04ba080>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04ba080>
[DeepCache DPS Debug] t=15, grad_norm: 20.192278, grad_max: 0.439319
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519bd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519bd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519b70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519b70>
[DeepCache DPS Debug] t=16, grad_norm: 2.696482, grad_max: 0.121593
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519210>
[DeepCache DPS Debug] t=17, grad_norm: 67.956322, grad_max: 1.168257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519e10> 36%|███▌      | 18/50 [00:09<00:17,  1.83it/s] 38%|███▊      | 19/50 [00:10<00:15,  1.98it/s] 40%|████      | 20/50 [00:10<00:14,  2.10it/s] 42%|████▏     | 21/50 [00:11<00:16,  1.78it/s] 44%|████▍     | 22/50 [00:11<00:14,  1.93it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a1a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a1a0>
[DeepCache DPS Debug] t=18, grad_norm: 46.130615, grad_max: 0.810093
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519390>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519390>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519330>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519330>
[DeepCache DPS Debug] t=19, grad_norm: 39.263515, grad_max: 0.738432
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519b70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519b70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a050>
[DeepCache DPS Debug] t=20, grad_norm: 0.495072, grad_max: 0.023355
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a7d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a7d0>
[DeepCache DPS Debug] t=21, grad_norm: 56.436043, grad_max: 0.972223
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 46%|████▌     | 23/50 [00:12<00:13,  2.06it/s] 48%|████▊     | 24/50 [00:12<00:12,  2.16it/s] 50%|█████     | 25/50 [00:13<00:13,  1.81it/s] 52%|█████▏    | 26/50 [00:13<00:12,  1.95it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519f00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519f00>
[DeepCache DPS Debug] t=22, grad_norm: 46.578510, grad_max: 0.908192
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a980>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a980>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051ab90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051ab90>
[DeepCache DPS Debug] t=23, grad_norm: 41.620003, grad_max: 0.825716
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a350>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a350>
[DeepCache DPS Debug] t=24, grad_norm: 2.276521, grad_max: 0.158555
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05199c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05199c0>
[DeepCache DPS Debug] t=25, grad_norm: 65.782738, grad_max: 1.261528
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519690>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519690>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519a80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519a80>
[DeepCache DPS Debug] t=26, grad_norm: 48.709946, grad_max: 0.936830
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051ab00> 54%|█████▍    | 27/50 [00:14<00:11,  2.07it/s] 56%|█████▌    | 28/50 [00:14<00:10,  2.17it/s] 58%|█████▊    | 29/50 [00:15<00:11,  1.81it/s] 60%|██████    | 30/50 [00:15<00:10,  1.96it/s] 62%|██████▏   | 31/50 [00:16<00:09,  2.08it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051ab00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051af80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051af80>
[DeepCache DPS Debug] t=27, grad_norm: 40.446213, grad_max: 0.752494
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a350>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a350>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519d80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519d80>
[DeepCache DPS Debug] t=28, grad_norm: 15.557231, grad_max: 0.922059
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a0e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a0e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519c60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519c60>
[DeepCache DPS Debug] t=29, grad_norm: 80.102562, grad_max: 2.273769
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a9b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a9b0>
[DeepCache DPS Debug] t=30, grad_norm: 55.822468, grad_max: 1.309946
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051afb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051afb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10 64%|██████▍   | 32/50 [00:16<00:08,  2.17it/s] 66%|██████▌   | 33/50 [00:17<00:09,  1.81it/s] 68%|██████▊   | 34/50 [00:17<00:08,  1.96it/s] 70%|███████   | 35/50 [00:18<00:07,  2.07it/s]
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b430>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b430>
[DeepCache DPS Debug] t=31, grad_norm: 44.131294, grad_max: 0.979115
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519d80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519d80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a740>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a740>
[DeepCache DPS Debug] t=32, grad_norm: 20.316864, grad_max: 1.215499
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a800>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a800>
[DeepCache DPS Debug] t=33, grad_norm: 108.763306, grad_max: 2.334719
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051ae90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051ae90>
[DeepCache DPS Debug] t=34, grad_norm: 72.909645, grad_max: 1.668398
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] t=35, grad_norm: 50.460144, grad_max: 1.420950
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 72%|███████▏  | 36/50 [00:18<00:06,  2.16it/s] 74%|███████▍  | 37/50 [00:19<00:07,  1.80it/s] 76%|███████▌  | 38/50 [00:19<00:06,  1.94it/s] 78%|███████▊  | 39/50 [00:20<00:05,  2.06it/s] 80%|████████  | 40/50 [00:20<00:04,  2.15it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a740>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a740>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519e10>
[DeepCache DPS Debug] t=36, grad_norm: 30.693827, grad_max: 1.806528
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a0b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a0b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a7a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a7a0>
[DeepCache DPS Debug] t=37, grad_norm: 178.063782, grad_max: 6.278052
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a230>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b280>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b280>
[DeepCache DPS Debug] t=38, grad_norm: 110.345772, grad_max: 3.625031
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bcd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bcd0>
[DeepCache DPS Debug] t=39, grad_norm: 81.373650, grad_max: 2.848131
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519e10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True 82%|████████▏ | 41/50 [00:21<00:05,  1.79it/s] 84%|████████▍ | 42/50 [00:21<00:04,  1.93it/s] 86%|████████▌ | 43/50 [00:22<00:03,  2.04it/s] 88%|████████▊ | 44/50 [00:22<00:02,  2.13it/s]
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd540ee16c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd540ee16c0>
[DeepCache DPS Debug] t=40, grad_norm: 50.829170, grad_max: 2.821355
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd540ee03a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd540ee03a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a470>
[DeepCache DPS Debug] t=41, grad_norm: 192.336502, grad_max: 6.069455
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bcd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bcd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=42, grad_norm: 119.020744, grad_max: 3.847291
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519d20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519d20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bc40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bc40>
[DeepCache DPS Debug] t=43, grad_norm: 85.834274, grad_max: 2.358771
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a980>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a980>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b130>
[DeepCache DPS Debug] t=44, grad_norm: 103.942947, grad_max: 10.276038
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 90%|█████████ | 45/50 [00:23<00:02,  1.76it/s] 92%|█████████▏| 46/50 [00:23<00:02,  1.91it/s] 94%|█████████▍| 47/50 [00:24<00:01,  2.02it/s] 96%|█████████▌| 48/50 [00:24<00:00,  2.11it/s] 98%|█████████▊| 49/50 [00:25<00:00,  1.75it/s]
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051beb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519b40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519b40>
[DeepCache DPS Debug] t=45, grad_norm: 115.658081, grad_max: 3.900858
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519b40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519b40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051aa40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051aa40>
[DeepCache DPS Debug] t=46, grad_norm: 81.977074, grad_max: 4.021063
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a230>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a230>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519240>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519240>
[DeepCache DPS Debug] t=47, grad_norm: 27.349171, grad_max: 2.214615
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] t=48, grad_norm: 10.861076, grad_max: 0.835902
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a980>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a980>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개100%|██████████| 50/50 [00:26<00:00,  1.56it/s]100%|██████████| 50/50 [00:26<00:00,  1.90it/s]

[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] t=49, grad_norm: 13.709871, grad_max: 1.330804
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519240>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519240>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:39,  1.25it/s]  4%|▍         | 2/50 [00:01<00:27,  1.72it/s]  6%|▌         | 3/50 [00:01<00:24,  1.95it/s]  8%|▊         | 4/50 [00:02<00:22,  2.07it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] t=0, grad_norm: 88.771378, grad_max: 2.639832
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051aa40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051aa40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] t=1, grad_norm: 53.745968, grad_max: 1.116503
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=2, grad_norm: 42.144234, grad_max: 1.078508
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] t=3, grad_norm: 34.841263, grad_max: 0.841826
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310> 10%|█         | 5/50 [00:02<00:27,  1.66it/s] 12%|█▏        | 6/50 [00:03<00:23,  1.84it/s] 14%|█▍        | 7/50 [00:03<00:21,  1.96it/s] 16%|█▌        | 8/50 [00:04<00:20,  2.06it/s] 18%|█▊        | 9/50 [00:05<00:24,  1.70it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=4, grad_norm: 57.607262, grad_max: 2.955204
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] t=5, grad_norm: 28.751738, grad_max: 0.745753
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] t=6, grad_norm: 23.006639, grad_max: 0.547089
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] t=7, grad_norm: 19.006859, grad_max: 0.420772
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] t=8, grad_norm: 4.050169, grad_max: 0.298411
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:21,  1.84it/s] 22%|██▏       | 11/50 [00:05<00:19,  1.95it/s] 24%|██▍       | 12/50 [00:06<00:18,  2.04it/s] 26%|██▌       | 13/50 [00:07<00:21,  1.70it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=9, grad_norm: 20.710718, grad_max: 0.409466
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] t=10, grad_norm: 15.876474, grad_max: 0.422454
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=11, grad_norm: 13.773470, grad_max: 0.316289
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] t=12, grad_norm: 2.328338, grad_max: 0.109584
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0> 28%|██▊       | 14/50 [00:07<00:19,  1.83it/s] 30%|███       | 15/50 [00:08<00:18,  1.94it/s] 32%|███▏      | 16/50 [00:08<00:16,  2.02it/s] 34%|███▍      | 17/50 [00:09<00:19,  1.68it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] t=13, grad_norm: 39.584591, grad_max: 0.824905
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] t=14, grad_norm: 23.847361, grad_max: 0.484545
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] t=15, grad_norm: 19.947346, grad_max: 0.473991
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=16, grad_norm: 2.838333, grad_max: 0.138443
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] t=17, grad_norm: 71.891449, grad_max: 1.032611
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310> 36%|███▌      | 18/50 [00:09<00:17,  1.82it/s] 38%|███▊      | 19/50 [00:10<00:16,  1.93it/s] 40%|████      | 20/50 [00:10<00:14,  2.02it/s] 42%|████▏     | 21/50 [00:11<00:17,  1.67it/s] 44%|████▍     | 22/50 [00:11<00:15,  1.81it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=18, grad_norm: 47.468555, grad_max: 0.895180
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] t=19, grad_norm: 39.767548, grad_max: 0.724845
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] t=20, grad_norm: 1.903037, grad_max: 0.067072
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] t=21, grad_norm: 56.556805, grad_max: 0.909800
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 46%|████▌     | 23/50 [00:12<00:14,  1.92it/s] 48%|████▊     | 24/50 [00:12<00:12,  2.00it/s] 50%|█████     | 25/50 [00:13<00:15,  1.67it/s] 52%|█████▏    | 26/50 [00:14<00:13,  1.80it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] t=22, grad_norm: 45.869293, grad_max: 0.839836
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=23, grad_norm: 40.616314, grad_max: 0.898204
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] t=24, grad_norm: 1.246383, grad_max: 0.090495
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=25, grad_norm: 66.281570, grad_max: 1.347715
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] t=26, grad_norm: 48.459106, grad_max: 0.849427
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0> 54%|█████▍    | 27/50 [00:14<00:12,  1.91it/s] 56%|█████▌    | 28/50 [00:15<00:11,  1.99it/s] 58%|█████▊    | 29/50 [00:15<00:12,  1.66it/s] 60%|██████    | 30/50 [00:16<00:11,  1.80it/s] 62%|██████▏   | 31/50 [00:16<00:09,  1.91it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] t=27, grad_norm: 41.539986, grad_max: 1.070746
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] t=28, grad_norm: 3.897574, grad_max: 0.241590
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] t=29, grad_norm: 79.765030, grad_max: 2.220829
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=30, grad_norm: 55.051762, grad_max: 1.378347
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
 64%|██████▍   | 32/50 [00:17<00:09,  1.99it/s] 66%|██████▌   | 33/50 [00:18<00:10,  1.66it/s] 68%|██████▊   | 34/50 [00:18<00:08,  1.79it/s] 70%|███████   | 35/50 [00:18<00:07,  1.91it/s][DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] t=31, grad_norm: 45.221054, grad_max: 0.766941
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=32, grad_norm: 34.539059, grad_max: 3.045008
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] t=33, grad_norm: 114.152748, grad_max: 2.542620
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] t=34, grad_norm: 72.995857, grad_max: 1.533469
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] t=35, grad_norm: 48.853985, grad_max: 1.247536
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 72%|███████▏  | 36/50 [00:19<00:07,  1.99it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.66it/s] 76%|███████▌  | 38/50 [00:20<00:06,  1.80it/s] 78%|███████▊  | 39/50 [00:21<00:05,  1.91it/s] 80%|████████  | 40/50 [00:21<00:05,  1.99it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a950>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a950>
[DeepCache DPS Debug] t=36, grad_norm: 19.974638, grad_max: 1.629131
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=37, grad_norm: 172.934418, grad_max: 3.808193
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b820>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b820>
[DeepCache DPS Debug] t=38, grad_norm: 104.171997, grad_max: 2.698861
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=39, grad_norm: 78.697380, grad_max: 2.677383
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True 82%|████████▏ | 41/50 [00:22<00:05,  1.66it/s] 84%|████████▍ | 42/50 [00:22<00:04,  1.80it/s] 86%|████████▌ | 43/50 [00:23<00:03,  1.91it/s] 88%|████████▊ | 44/50 [00:23<00:03,  1.99it/s]
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b070>
[DeepCache DPS Debug] t=40, grad_norm: 52.497765, grad_max: 2.814440
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519fc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3e9f37d60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3e9f37d60>
[DeepCache DPS Debug] t=41, grad_norm: 187.628998, grad_max: 5.521636
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3e9f34070>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3e9f34070>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=42, grad_norm: 111.611115, grad_max: 3.296259
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=43, grad_norm: 81.682182, grad_max: 3.183044
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05198a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05198a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05198a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05198a0>
[DeepCache DPS Debug] t=44, grad_norm: 78.006790, grad_max: 8.014600
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
 90%|█████████ | 45/50 [00:24<00:03,  1.66it/s] 92%|█████████▏| 46/50 [00:25<00:02,  1.80it/s] 94%|█████████▍| 47/50 [00:25<00:01,  1.90it/s] 96%|█████████▌| 48/50 [00:25<00:01,  1.98it/s] 98%|█████████▊| 49/50 [00:26<00:00,  1.64it/s][DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051af80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051af80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3ed658cd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3ed658cd0>
[DeepCache DPS Debug] t=45, grad_norm: 91.387405, grad_max: 4.055992
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3ed658cd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3ed658cd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3ed658cd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3ed658cd0>
[DeepCache DPS Debug] t=46, grad_norm: 59.113758, grad_max: 2.949983
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bd60>
[DeepCache DPS Debug] t=47, grad_norm: 27.254269, grad_max: 1.761489
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=48, grad_norm: 28.539000, grad_max: 4.945029
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개100%|██████████| 50/50 [00:27<00:00,  1.47it/s]100%|██████████| 50/50 [00:27<00:00,  1.81it/s]

[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=49, grad_norm: 6.234649, grad_max: 0.637401
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05198a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05198a0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:29,  1.62it/s]  6%|▌         | 3/50 [00:01<00:25,  1.84it/s]  8%|▊         | 4/50 [00:02<00:23,  1.96it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05198a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05198a0>
[DeepCache DPS Debug] t=0, grad_norm: 91.347694, grad_max: 2.414032
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05196f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05196f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d045b4f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d045b4f0>
[DeepCache DPS Debug] t=1, grad_norm: 53.453720, grad_max: 1.334973
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d045a530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d045a530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=2, grad_norm: 42.076385, grad_max: 0.818650
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=3, grad_norm: 34.752270, grad_max: 1.006773
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0> 10%|█         | 5/50 [00:03<00:28,  1.58it/s] 12%|█▏        | 6/50 [00:03<00:25,  1.75it/s] 14%|█▍        | 7/50 [00:03<00:23,  1.87it/s] 16%|█▌        | 8/50 [00:04<00:21,  1.96it/s] 18%|█▊        | 9/50 [00:05<00:25,  1.62it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] t=4, grad_norm: 57.129807, grad_max: 3.359741
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=5, grad_norm: 29.006554, grad_max: 0.608330
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=6, grad_norm: 23.448521, grad_max: 0.545179
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=7, grad_norm: 19.188807, grad_max: 0.465755
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] t=8, grad_norm: 12.580070, grad_max: 1.375397
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:22,  1.76it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.87it/s] 24%|██▍       | 12/50 [00:06<00:19,  1.96it/s] 26%|██▌       | 13/50 [00:07<00:22,  1.63it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=9, grad_norm: 20.530340, grad_max: 0.505451
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=10, grad_norm: 15.478494, grad_max: 0.332436
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] t=11, grad_norm: 13.617771, grad_max: 0.305759
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=12, grad_norm: 2.416749, grad_max: 0.179794
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310> 28%|██▊       | 14/50 [00:07<00:20,  1.77it/s] 30%|███       | 15/50 [00:08<00:18,  1.88it/s] 32%|███▏      | 16/50 [00:08<00:17,  1.96it/s] 34%|███▍      | 17/50 [00:09<00:20,  1.63it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=13, grad_norm: 39.689049, grad_max: 0.850590
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=14, grad_norm: 24.580021, grad_max: 0.641354
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] t=15, grad_norm: 20.116333, grad_max: 0.384484
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=16, grad_norm: 2.600043, grad_max: 0.106731
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=17, grad_norm: 68.818108, grad_max: 1.327134
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0> 36%|███▌      | 18/50 [00:10<00:18,  1.77it/s] 38%|███▊      | 19/50 [00:10<00:16,  1.88it/s] 40%|████      | 20/50 [00:11<00:15,  1.96it/s] 42%|████▏     | 21/50 [00:11<00:17,  1.63it/s] 44%|████▍     | 22/50 [00:12<00:15,  1.77it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] t=18, grad_norm: 46.996452, grad_max: 0.956156
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=19, grad_norm: 39.339443, grad_max: 0.706043
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=20, grad_norm: 0.291247, grad_max: 0.011445
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=21, grad_norm: 56.584332, grad_max: 1.131767
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 46%|████▌     | 23/50 [00:12<00:14,  1.88it/s] 48%|████▊     | 24/50 [00:13<00:13,  1.96it/s] 50%|█████     | 25/50 [00:14<00:15,  1.63it/s] 52%|█████▏    | 26/50 [00:14<00:13,  1.77it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] t=22, grad_norm: 45.120972, grad_max: 0.863061
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=23, grad_norm: 41.005783, grad_max: 0.879527
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=24, grad_norm: 13.165523, grad_max: 0.782476
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] t=25, grad_norm: 65.150642, grad_max: 1.376363
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=26, grad_norm: 48.599056, grad_max: 0.790899
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310> 54%|█████▍    | 27/50 [00:15<00:12,  1.88it/s] 56%|█████▌    | 28/50 [00:15<00:11,  1.96it/s] 58%|█████▊    | 29/50 [00:16<00:12,  1.63it/s] 60%|██████    | 30/50 [00:16<00:11,  1.77it/s] 62%|██████▏   | 31/50 [00:17<00:10,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=27, grad_norm: 41.147678, grad_max: 0.831109
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=28, grad_norm: 36.578480, grad_max: 2.507646
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] t=29, grad_norm: 81.914017, grad_max: 1.856563
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=30, grad_norm: 56.041546, grad_max: 1.025952
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10 64%|██████▍   | 32/50 [00:17<00:09,  1.96it/s] 66%|██████▌   | 33/50 [00:18<00:10,  1.63it/s] 68%|██████▊   | 34/50 [00:19<00:09,  1.77it/s] 70%|███████   | 35/50 [00:19<00:07,  1.88it/s]
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=31, grad_norm: 43.390701, grad_max: 0.742234
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] t=32, grad_norm: 18.472795, grad_max: 1.358281
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=33, grad_norm: 114.824524, grad_max: 2.766253
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=34, grad_norm: 76.946053, grad_max: 2.754526
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=35, grad_norm: 49.125263, grad_max: 1.276765
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 72%|███████▏  | 36/50 [00:19<00:07,  1.96it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.63it/s] 76%|███████▌  | 38/50 [00:21<00:06,  1.77it/s] 78%|███████▊  | 39/50 [00:21<00:05,  1.87it/s] 80%|████████  | 40/50 [00:22<00:05,  1.96it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] t=36, grad_norm: 20.472742, grad_max: 2.311335
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=37, grad_norm: 180.286011, grad_max: 3.681801
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=38, grad_norm: 113.761597, grad_max: 2.482989
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] t=39, grad_norm: 80.072701, grad_max: 2.220771
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True 82%|████████▏ | 41/50 [00:23<00:05,  1.63it/s] 84%|████████▍ | 42/50 [00:23<00:04,  1.76it/s] 86%|████████▌ | 43/50 [00:23<00:03,  1.87it/s] 88%|████████▊ | 44/50 [00:24<00:03,  1.96it/s]
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=40, grad_norm: 48.809814, grad_max: 5.206271
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=41, grad_norm: 188.513214, grad_max: 4.495080
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=42, grad_norm: 119.983612, grad_max: 3.867588
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] t=43, grad_norm: 77.822502, grad_max: 2.656217
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] t=44, grad_norm: 96.758636, grad_max: 7.047243
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
 90%|█████████ | 45/50 [00:25<00:03,  1.63it/s] 92%|█████████▏| 46/50 [00:25<00:02,  1.77it/s] 94%|█████████▍| 47/50 [00:26<00:01,  1.87it/s] 96%|█████████▌| 48/50 [00:26<00:01,  1.96it/s] 98%|█████████▊| 49/50 [00:27<00:00,  1.63it/s][DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=45, grad_norm: 127.294983, grad_max: 5.347786
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05194e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05194e0>
[DeepCache DPS Debug] t=46, grad_norm: 79.063576, grad_max: 8.493711
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=47, grad_norm: 20.226521, grad_max: 1.154176
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051b310>
[DeepCache DPS Debug] t=48, grad_norm: 12.686540, grad_max: 1.058218
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개100%|██████████| 50/50 [00:28<00:00,  1.46it/s]100%|██████████| 50/50 [00:28<00:00,  1.76it/s]

[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=49, grad_norm: 0.504791, grad_max: 0.078561
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:29,  1.62it/s]  6%|▌         | 3/50 [00:01<00:25,  1.84it/s]  8%|▊         | 4/50 [00:02<00:23,  1.96it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519150>
[DeepCache DPS Debug] t=0, grad_norm: 92.867531, grad_max: 3.724640
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051bca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051bca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=1, grad_norm: 52.953465, grad_max: 1.554019
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=2, grad_norm: 42.765598, grad_max: 0.924219
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=3, grad_norm: 35.259686, grad_max: 0.830816
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750> 10%|█         | 5/50 [00:03<00:28,  1.58it/s] 12%|█▏        | 6/50 [00:03<00:25,  1.75it/s] 14%|█▍        | 7/50 [00:03<00:22,  1.87it/s] 16%|█▌        | 8/50 [00:04<00:21,  1.96it/s] 18%|█▊        | 9/50 [00:05<00:25,  1.62it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=4, grad_norm: 63.094646, grad_max: 3.091980
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=5, grad_norm: 28.170801, grad_max: 0.572329
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=6, grad_norm: 22.865473, grad_max: 0.620786
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=7, grad_norm: 18.960672, grad_max: 0.399391
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] t=8, grad_norm: 5.327302, grad_max: 0.417000
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:22,  1.76it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.88it/s] 24%|██▍       | 12/50 [00:06<00:19,  1.96it/s] 26%|██▌       | 13/50 [00:07<00:22,  1.63it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=9, grad_norm: 20.417892, grad_max: 0.393358
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=10, grad_norm: 15.384580, grad_max: 0.371590
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=11, grad_norm: 13.557683, grad_max: 0.346619
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=12, grad_norm: 1.256225, grad_max: 0.058753
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0> 28%|██▊       | 14/50 [00:07<00:20,  1.77it/s] 30%|███       | 15/50 [00:08<00:18,  1.88it/s] 32%|███▏      | 16/50 [00:08<00:17,  1.96it/s] 34%|███▍      | 17/50 [00:09<00:20,  1.63it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=13, grad_norm: 40.213150, grad_max: 0.729990
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=14, grad_norm: 24.322760, grad_max: 0.490998
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=15, grad_norm: 19.917036, grad_max: 0.417932
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] t=16, grad_norm: 2.180246, grad_max: 0.145470
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=17, grad_norm: 68.874603, grad_max: 1.159171
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0> 36%|███▌      | 18/50 [00:10<00:18,  1.77it/s] 38%|███▊      | 19/50 [00:10<00:16,  1.88it/s] 40%|████      | 20/50 [00:11<00:15,  1.96it/s] 42%|████▏     | 21/50 [00:11<00:17,  1.63it/s] 44%|████▍     | 22/50 [00:12<00:15,  1.77it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=18, grad_norm: 49.081528, grad_max: 0.976500
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=19, grad_norm: 40.254295, grad_max: 0.806055
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=20, grad_norm: 1.221702, grad_max: 0.071735
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=21, grad_norm: 55.094082, grad_max: 0.932925
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 46%|████▌     | 23/50 [00:12<00:14,  1.88it/s] 48%|████▊     | 24/50 [00:13<00:13,  1.96it/s] 50%|█████     | 25/50 [00:14<00:15,  1.63it/s] 52%|█████▏    | 26/50 [00:14<00:13,  1.77it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=22, grad_norm: 46.816048, grad_max: 0.970677
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=23, grad_norm: 38.468929, grad_max: 0.682678
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] t=24, grad_norm: 6.598603, grad_max: 0.406395
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=25, grad_norm: 65.365486, grad_max: 1.756661
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=26, grad_norm: 48.339699, grad_max: 0.869334
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870> 54%|█████▍    | 27/50 [00:15<00:12,  1.87it/s] 56%|█████▌    | 28/50 [00:15<00:11,  1.95it/s] 58%|█████▊    | 29/50 [00:16<00:12,  1.63it/s] 60%|██████    | 30/50 [00:16<00:11,  1.76it/s] 62%|██████▏   | 31/50 [00:17<00:10,  1.87it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=27, grad_norm: 40.637600, grad_max: 0.570027
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=28, grad_norm: 19.383484, grad_max: 1.063549
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=29, grad_norm: 80.630035, grad_max: 1.842023
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=30, grad_norm: 56.925606, grad_max: 1.184927
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10 64%|██████▍   | 32/50 [00:17<00:09,  1.96it/s] 66%|██████▌   | 33/50 [00:18<00:10,  1.63it/s] 68%|██████▊   | 34/50 [00:19<00:09,  1.77it/s] 70%|███████   | 35/50 [00:19<00:08,  1.87it/s]
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=31, grad_norm: 44.579857, grad_max: 0.855010
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] t=32, grad_norm: 18.368692, grad_max: 1.888842
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=33, grad_norm: 114.137253, grad_max: 2.077777
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=34, grad_norm: 74.208344, grad_max: 1.630943
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=35, grad_norm: 51.337181, grad_max: 1.380196
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 72%|███████▏  | 36/50 [00:19<00:07,  1.96it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.63it/s] 76%|███████▌  | 38/50 [00:21<00:06,  1.77it/s] 78%|███████▊  | 39/50 [00:21<00:05,  1.87it/s] 80%|████████  | 40/50 [00:22<00:05,  1.96it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=36, grad_norm: 26.460516, grad_max: 2.763560
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=37, grad_norm: 176.143036, grad_max: 4.547946
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=38, grad_norm: 112.103676, grad_max: 2.421927
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=39, grad_norm: 80.233177, grad_max: 1.805687
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True 82%|████████▏ | 41/50 [00:23<00:05,  1.63it/s] 84%|████████▍ | 42/50 [00:23<00:04,  1.77it/s] 86%|████████▌ | 43/50 [00:23<00:03,  1.88it/s] 88%|████████▊ | 44/50 [00:24<00:03,  1.96it/s]
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] t=40, grad_norm: 46.179146, grad_max: 3.580591
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=41, grad_norm: 196.199432, grad_max: 4.600764
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=42, grad_norm: 113.731499, grad_max: 4.158118
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=43, grad_norm: 72.760590, grad_max: 2.754691
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=44, grad_norm: 88.166687, grad_max: 4.742393
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
 90%|█████████ | 45/50 [00:25<00:03,  1.63it/s] 92%|█████████▏| 46/50 [00:25<00:02,  1.77it/s] 94%|█████████▍| 47/50 [00:26<00:01,  1.88it/s] 96%|█████████▌| 48/50 [00:26<00:01,  1.96it/s] 98%|█████████▊| 49/50 [00:27<00:00,  1.63it/s][DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=45, grad_norm: 124.482376, grad_max: 7.143996
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=46, grad_norm: 48.568253, grad_max: 2.442222
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=47, grad_norm: 23.010088, grad_max: 1.868782
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] t=48, grad_norm: 5.707523, grad_max: 0.593444
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개100%|██████████| 50/50 [00:28<00:00,  1.46it/s]100%|██████████| 50/50 [00:28<00:00,  1.76it/s]

[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=49, grad_norm: 9.933234, grad_max: 1.003595
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:29,  1.62it/s]  6%|▌         | 3/50 [00:01<00:25,  1.84it/s]  8%|▊         | 4/50 [00:02<00:23,  1.96it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d05195a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d05195a0>
[DeepCache DPS Debug] t=0, grad_norm: 93.343124, grad_max: 2.708008
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=1, grad_norm: 52.826756, grad_max: 1.671287
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519750>
[DeepCache DPS Debug] t=2, grad_norm: 42.097786, grad_max: 1.072265
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=3, grad_norm: 34.859123, grad_max: 0.842188
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d051a3e0> 10%|█         | 5/50 [00:03<00:28,  1.58it/s] 12%|█▏        | 6/50 [00:03<00:25,  1.75it/s] 14%|█▍        | 7/50 [00:03<00:22,  1.87it/s] 16%|█▌        | 8/50 [00:04<00:21,  1.96it/s] 18%|█▊        | 9/50 [00:05<00:25,  1.62it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d051a3e0>
[DeepCache DPS Debug] t=4, grad_norm: 56.099266, grad_max: 1.747459
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=5, grad_norm: 28.063906, grad_max: 0.728329
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d0519810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d0519810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] t=6, grad_norm: 22.683504, grad_max: 0.454033
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=7, grad_norm: 19.087404, grad_max: 0.379208
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] t=8, grad_norm: 6.926043, grad_max: 0.777803
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:22,  1.76it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.88it/s] 24%|██▍       | 12/50 [00:06<00:19,  1.96it/s] 26%|██▌       | 13/50 [00:07<00:22,  1.63it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=9, grad_norm: 20.422438, grad_max: 0.503122
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=10, grad_norm: 15.695659, grad_max: 0.337879
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] t=11, grad_norm: 13.457609, grad_max: 0.264472
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=12, grad_norm: 2.314206, grad_max: 0.188997
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0> 28%|██▊       | 14/50 [00:07<00:20,  1.77it/s] 30%|███       | 15/50 [00:08<00:18,  1.88it/s] 32%|███▏      | 16/50 [00:08<00:17,  1.96it/s] 34%|███▍      | 17/50 [00:09<00:20,  1.63it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] t=13, grad_norm: 40.811558, grad_max: 0.839128
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=14, grad_norm: 24.854309, grad_max: 0.451609
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=15, grad_norm: 20.398026, grad_max: 0.516646
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] t=16, grad_norm: 3.808038, grad_max: 0.166833
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=17, grad_norm: 68.286682, grad_max: 1.405930
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730> 36%|███▌      | 18/50 [00:10<00:18,  1.77it/s] 38%|███▊      | 19/50 [00:10<00:16,  1.88it/s] 40%|████      | 20/50 [00:11<00:15,  1.96it/s] 42%|████▏     | 21/50 [00:11<00:17,  1.63it/s] 44%|████▍     | 22/50 [00:12<00:15,  1.77it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=18, grad_norm: 46.869900, grad_max: 0.711659
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] t=19, grad_norm: 38.599522, grad_max: 0.735406
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=20, grad_norm: 0.720204, grad_max: 0.027543
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] t=21, grad_norm: 57.266735, grad_max: 1.516161
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 46%|████▌     | 23/50 [00:12<00:14,  1.88it/s] 48%|████▊     | 24/50 [00:13<00:13,  1.96it/s] 50%|█████     | 25/50 [00:14<00:15,  1.63it/s] 52%|█████▏    | 26/50 [00:14<00:13,  1.77it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=22, grad_norm: 47.374577, grad_max: 0.965064
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=23, grad_norm: 39.558239, grad_max: 0.867110
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] t=24, grad_norm: 4.251143, grad_max: 0.248329
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=25, grad_norm: 65.227928, grad_max: 1.050936
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=26, grad_norm: 48.418732, grad_max: 0.837526
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250> 54%|█████▍    | 27/50 [00:15<00:12,  1.88it/s] 56%|█████▌    | 28/50 [00:15<00:11,  1.96it/s] 58%|█████▊    | 29/50 [00:16<00:12,  1.63it/s] 60%|██████    | 30/50 [00:16<00:11,  1.77it/s] 62%|██████▏   | 31/50 [00:17<00:10,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] t=27, grad_norm: 41.233257, grad_max: 0.743465
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=28, grad_norm: 50.528011, grad_max: 6.745683
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] t=29, grad_norm: 79.888046, grad_max: 1.749378
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=30, grad_norm: 55.877686, grad_max: 1.628754
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10 64%|██████▍   | 32/50 [00:17<00:09,  1.96it/s] 66%|██████▌   | 33/50 [00:18<00:10,  1.63it/s] 68%|██████▊   | 34/50 [00:19<00:09,  1.77it/s] 70%|███████   | 35/50 [00:19<00:07,  1.88it/s]
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=31, grad_norm: 43.901413, grad_max: 0.862191
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] t=32, grad_norm: 28.488546, grad_max: 1.333868
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=33, grad_norm: 110.110870, grad_max: 2.286957
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=34, grad_norm: 71.448822, grad_max: 2.190032
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] t=35, grad_norm: 45.522186, grad_max: 1.390764
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 72%|███████▏  | 36/50 [00:19<00:07,  1.96it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.63it/s] 76%|███████▌  | 38/50 [00:21<00:06,  1.77it/s] 78%|███████▊  | 39/50 [00:21<00:05,  1.88it/s] 80%|████████  | 40/50 [00:22<00:05,  1.96it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=36, grad_norm: 31.282633, grad_max: 2.376694
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] t=37, grad_norm: 173.820023, grad_max: 5.600554
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=38, grad_norm: 108.208420, grad_max: 3.332760
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=39, grad_norm: 84.360687, grad_max: 2.441221
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True 82%|████████▏ | 41/50 [00:23<00:05,  1.63it/s] 84%|████████▍ | 42/50 [00:23<00:04,  1.77it/s] 86%|████████▌ | 43/50 [00:23<00:03,  1.88it/s] 88%|████████▊ | 44/50 [00:24<00:03,  1.96it/s]
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] t=40, grad_norm: 50.994667, grad_max: 3.188532
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=41, grad_norm: 206.057816, grad_max: 5.088329
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=42, grad_norm: 112.922348, grad_max: 3.368731
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] t=43, grad_norm: 75.445915, grad_max: 4.510758
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=44, grad_norm: 97.204132, grad_max: 5.503337
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
 90%|█████████ | 45/50 [00:25<00:03,  1.63it/s] 92%|█████████▏| 46/50 [00:25<00:02,  1.77it/s] 94%|█████████▍| 47/50 [00:26<00:01,  1.87it/s] 96%|█████████▌| 48/50 [00:26<00:01,  1.96it/s] 98%|█████████▊| 49/50 [00:27<00:00,  1.63it/s][DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] t=45, grad_norm: 105.031845, grad_max: 4.513009
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=46, grad_norm: 63.707066, grad_max: 3.659911
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=47, grad_norm: 42.681301, grad_max: 3.576744
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] t=48, grad_norm: 13.176824, grad_max: 1.669529
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개100%|██████████| 50/50 [00:28<00:00,  1.46it/s]100%|██████████| 50/50 [00:28<00:00,  1.76it/s]

[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=49, grad_norm: 9.247015, grad_max: 1.025514
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:29,  1.62it/s]  6%|▌         | 3/50 [00:01<00:25,  1.84it/s]  8%|▊         | 4/50 [00:02<00:23,  1.96it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=0, grad_norm: 96.140945, grad_max: 2.672363
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] t=1, grad_norm: 53.074001, grad_max: 1.622638
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=2, grad_norm: 42.189266, grad_max: 0.890145
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] t=3, grad_norm: 35.305271, grad_max: 0.780274
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb7f0> 10%|█         | 5/50 [00:03<00:28,  1.58it/s] 12%|█▏        | 6/50 [00:03<00:25,  1.75it/s] 14%|█▍        | 7/50 [00:03<00:22,  1.87it/s] 16%|█▌        | 8/50 [00:04<00:21,  1.96it/s] 18%|█▊        | 9/50 [00:05<00:25,  1.62it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb7f0>
[DeepCache DPS Debug] t=4, grad_norm: 57.950974, grad_max: 2.650909
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=5, grad_norm: 28.586294, grad_max: 0.725996
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb3a0>
[DeepCache DPS Debug] t=6, grad_norm: 23.205212, grad_max: 0.548109
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=7, grad_norm: 19.234848, grad_max: 0.432930
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=8, grad_norm: 4.940699, grad_max: 0.409904
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:22,  1.76it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.87it/s] 24%|██▍       | 12/50 [00:06<00:19,  1.96it/s] 26%|██▌       | 13/50 [00:07<00:22,  1.63it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f250>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f250>
[DeepCache DPS Debug] t=9, grad_norm: 20.819345, grad_max: 0.507089
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] t=10, grad_norm: 15.551718, grad_max: 0.334292
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019f7f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019f7f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=11, grad_norm: 13.707935, grad_max: 0.305317
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=12, grad_norm: 2.272943, grad_max: 0.098191
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870> 28%|██▊       | 14/50 [00:07<00:20,  1.77it/s] 30%|███       | 15/50 [00:08<00:18,  1.88it/s] 32%|███▏      | 16/50 [00:08<00:17,  1.96it/s] 34%|███▍      | 17/50 [00:09<00:20,  1.63it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=13, grad_norm: 40.107635, grad_max: 0.792679
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=14, grad_norm: 24.669458, grad_max: 0.528867
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=15, grad_norm: 20.402943, grad_max: 0.368100
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=16, grad_norm: 1.898421, grad_max: 0.068411
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=17, grad_norm: 69.809464, grad_max: 1.831417
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50> 36%|███▌      | 18/50 [00:10<00:18,  1.77it/s] 38%|███▊      | 19/50 [00:10<00:16,  1.88it/s] 40%|████      | 20/50 [00:11<00:15,  1.96it/s] 42%|████▏     | 21/50 [00:11<00:17,  1.63it/s] 44%|████▍     | 22/50 [00:12<00:15,  1.77it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=18, grad_norm: 47.915176, grad_max: 0.995030
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=19, grad_norm: 39.558037, grad_max: 0.746108
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=20, grad_norm: 2.585116, grad_max: 0.235636
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=21, grad_norm: 57.077648, grad_max: 0.992618
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 46%|████▌     | 23/50 [00:12<00:14,  1.88it/s] 48%|████▊     | 24/50 [00:13<00:13,  1.96it/s] 50%|█████     | 25/50 [00:14<00:15,  1.63it/s] 52%|█████▏    | 26/50 [00:14<00:13,  1.77it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=22, grad_norm: 48.105946, grad_max: 0.855145
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=23, grad_norm: 39.144768, grad_max: 1.022527
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=24, grad_norm: 2.897905, grad_max: 0.198503
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=25, grad_norm: 64.515358, grad_max: 1.377089
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=26, grad_norm: 47.275391, grad_max: 0.762584
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0> 54%|█████▍    | 27/50 [00:15<00:12,  1.88it/s] 56%|█████▌    | 28/50 [00:15<00:11,  1.96it/s] 58%|█████▊    | 29/50 [00:16<00:12,  1.63it/s] 60%|██████    | 30/50 [00:16<00:11,  1.77it/s] 62%|██████▏   | 31/50 [00:17<00:10,  1.87it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=27, grad_norm: 40.571129, grad_max: 0.640825
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=28, grad_norm: 16.581537, grad_max: 0.684704
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=29, grad_norm: 80.589699, grad_max: 3.801341
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=30, grad_norm: 55.041058, grad_max: 1.281286
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10 64%|██████▍   | 32/50 [00:17<00:09,  1.96it/s] 66%|██████▌   | 33/50 [00:18<00:10,  1.63it/s] 68%|██████▊   | 34/50 [00:19<00:09,  1.77it/s] 70%|███████   | 35/50 [00:19<00:08,  1.87it/s]
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=31, grad_norm: 43.763599, grad_max: 1.021299
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=32, grad_norm: 15.384366, grad_max: 1.008219
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=33, grad_norm: 116.416000, grad_max: 3.983430
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=34, grad_norm: 74.054565, grad_max: 2.641782
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=35, grad_norm: 48.743286, grad_max: 1.712970
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 72%|███████▏  | 36/50 [00:19<00:07,  1.96it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.63it/s] 76%|███████▌  | 38/50 [00:21<00:06,  1.77it/s] 78%|███████▊  | 39/50 [00:21<00:05,  1.88it/s] 80%|████████  | 40/50 [00:22<00:05,  1.96it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=36, grad_norm: 31.908106, grad_max: 2.187648
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=37, grad_norm: 178.946686, grad_max: 4.566525
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=38, grad_norm: 115.131233, grad_max: 2.383563
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=39, grad_norm: 90.951920, grad_max: 2.589592
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True 82%|████████▏ | 41/50 [00:23<00:05,  1.63it/s] 84%|████████▍ | 42/50 [00:23<00:04,  1.77it/s] 86%|████████▌ | 43/50 [00:23<00:03,  1.88it/s] 88%|████████▊ | 44/50 [00:24<00:03,  1.96it/s]
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=40, grad_norm: 56.489342, grad_max: 5.370940
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=41, grad_norm: 195.673035, grad_max: 6.018886
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=42, grad_norm: 107.067673, grad_max: 3.164319
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=43, grad_norm: 68.888779, grad_max: 3.320380
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=44, grad_norm: 96.636528, grad_max: 7.092852
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
 90%|█████████ | 45/50 [00:25<00:03,  1.63it/s] 92%|█████████▏| 46/50 [00:25<00:02,  1.77it/s] 94%|█████████▍| 47/50 [00:26<00:01,  1.88it/s] 96%|█████████▌| 48/50 [00:26<00:01,  1.96it/s] 98%|█████████▊| 49/50 [00:27<00:00,  1.63it/s][DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=45, grad_norm: 110.216919, grad_max: 4.892078
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=46, grad_norm: 43.550156, grad_max: 2.769519
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=47, grad_norm: 19.921041, grad_max: 1.286165
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=48, grad_norm: 3.895123, grad_max: 0.378416
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개100%|██████████| 50/50 [00:28<00:00,  1.46it/s]100%|██████████| 50/50 [00:28<00:00,  1.76it/s]

[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=49, grad_norm: 0.018772, grad_max: 0.002172
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:29,  1.62it/s]  6%|▌         | 3/50 [00:01<00:25,  1.84it/s]  8%|▊         | 4/50 [00:02<00:23,  1.96it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=0, grad_norm: 90.056923, grad_max: 2.066956
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=1, grad_norm: 52.928169, grad_max: 1.323961
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=2, grad_norm: 41.759163, grad_max: 0.970892
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=3, grad_norm: 34.831894, grad_max: 0.902839
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50> 10%|█         | 5/50 [00:03<00:28,  1.58it/s] 12%|█▏        | 6/50 [00:03<00:25,  1.75it/s] 14%|█▍        | 7/50 [00:03<00:22,  1.87it/s] 16%|█▌        | 8/50 [00:04<00:21,  1.96it/s] 18%|█▊        | 9/50 [00:05<00:25,  1.62it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=4, grad_norm: 56.077053, grad_max: 2.731812
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=5, grad_norm: 28.739656, grad_max: 0.784751
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=6, grad_norm: 23.025755, grad_max: 0.512783
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=7, grad_norm: 19.253355, grad_max: 0.390660
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=8, grad_norm: 8.421413, grad_max: 0.930252
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:22,  1.76it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.88it/s] 24%|██▍       | 12/50 [00:06<00:19,  1.96it/s] 26%|██▌       | 13/50 [00:07<00:22,  1.63it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=9, grad_norm: 20.517925, grad_max: 0.436010
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=10, grad_norm: 15.336557, grad_max: 0.364169
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=11, grad_norm: 13.410748, grad_max: 0.390005
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=12, grad_norm: 3.206806, grad_max: 0.195001
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0> 28%|██▊       | 14/50 [00:07<00:20,  1.77it/s] 30%|███       | 15/50 [00:08<00:18,  1.88it/s] 32%|███▏      | 16/50 [00:08<00:17,  1.96it/s] 34%|███▍      | 17/50 [00:09<00:20,  1.63it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=13, grad_norm: 40.238224, grad_max: 0.847658
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=14, grad_norm: 24.914848, grad_max: 0.494183
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=15, grad_norm: 20.270144, grad_max: 0.511746
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=16, grad_norm: 4.157385, grad_max: 0.261284
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b4160>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b4160>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01ceef0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01ceef0>
[DeepCache DPS Debug] t=17, grad_norm: 69.428246, grad_max: 1.020661
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870> 36%|███▌      | 18/50 [00:10<00:18,  1.77it/s] 38%|███▊      | 19/50 [00:10<00:16,  1.88it/s] 40%|████      | 20/50 [00:11<00:15,  1.96it/s] 42%|████▏     | 21/50 [00:11<00:17,  1.63it/s] 44%|████▍     | 22/50 [00:12<00:15,  1.77it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=18, grad_norm: 46.733459, grad_max: 0.824995
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=19, grad_norm: 39.220776, grad_max: 0.714475
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=20, grad_norm: 2.643851, grad_max: 0.094840
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=21, grad_norm: 57.427807, grad_max: 1.038015
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 46%|████▌     | 23/50 [00:12<00:14,  1.88it/s] 48%|████▊     | 24/50 [00:13<00:13,  1.96it/s] 50%|█████     | 25/50 [00:14<00:15,  1.63it/s] 52%|█████▏    | 26/50 [00:14<00:13,  1.77it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=22, grad_norm: 47.699383, grad_max: 1.054272
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=23, grad_norm: 40.311508, grad_max: 0.787654
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=24, grad_norm: 8.107040, grad_max: 0.316064
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=25, grad_norm: 65.410660, grad_max: 1.080001
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] t=26, grad_norm: 48.171436, grad_max: 0.903018
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870> 54%|█████▍    | 27/50 [00:15<00:12,  1.88it/s] 56%|█████▌    | 28/50 [00:15<00:11,  1.96it/s] 58%|█████▊    | 29/50 [00:16<00:12,  1.63it/s] 60%|██████    | 30/50 [00:16<00:11,  1.77it/s] 62%|██████▏   | 31/50 [00:17<00:10,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=27, grad_norm: 40.999931, grad_max: 0.985256
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=28, grad_norm: 11.264272, grad_max: 0.702203
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=29, grad_norm: 79.138359, grad_max: 2.370576
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=30, grad_norm: 56.761391, grad_max: 1.118634
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10 64%|██████▍   | 32/50 [00:17<00:09,  1.96it/s] 66%|██████▌   | 33/50 [00:18<00:10,  1.63it/s] 68%|██████▊   | 34/50 [00:19<00:09,  1.77it/s] 70%|███████   | 35/50 [00:19<00:07,  1.88it/s]
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=31, grad_norm: 43.711376, grad_max: 0.839676
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=32, grad_norm: 34.273396, grad_max: 2.447170
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=33, grad_norm: 114.196487, grad_max: 2.263740
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=34, grad_norm: 72.146416, grad_max: 2.483626
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] t=35, grad_norm: 49.659710, grad_max: 1.139561
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 72%|███████▏  | 36/50 [00:19<00:07,  1.96it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.63it/s] 76%|███████▌  | 38/50 [00:21<00:06,  1.77it/s] 78%|███████▊  | 39/50 [00:21<00:05,  1.88it/s] 80%|████████  | 40/50 [00:22<00:05,  1.96it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=36, grad_norm: 20.748222, grad_max: 1.414177
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=37, grad_norm: 180.361816, grad_max: 4.257135
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=38, grad_norm: 115.181808, grad_max: 3.779378
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=39, grad_norm: 84.835197, grad_max: 2.956355
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True 82%|████████▏ | 41/50 [00:23<00:05,  1.63it/s] 84%|████████▍ | 42/50 [00:23<00:04,  1.77it/s] 86%|████████▌ | 43/50 [00:23<00:03,  1.88it/s] 88%|████████▊ | 44/50 [00:24<00:03,  1.96it/s]
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=40, grad_norm: 51.242958, grad_max: 5.034049
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=41, grad_norm: 205.098877, grad_max: 5.476556
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] t=42, grad_norm: 116.693359, grad_max: 3.684219
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01ceef0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01ceef0>
[DeepCache DPS Debug] t=43, grad_norm: 71.472099, grad_max: 2.837458
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=44, grad_norm: 100.421715, grad_max: 4.633746
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 90%|█████████ | 45/50 [00:25<00:03,  1.63it/s] 92%|█████████▏| 46/50 [00:25<00:02,  1.77it/s] 94%|█████████▍| 47/50 [00:26<00:01,  1.88it/s] 96%|█████████▌| 48/50 [00:26<00:01,  1.96it/s] 98%|█████████▊| 49/50 [00:27<00:00,  1.63it/s]
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] t=45, grad_norm: 119.121101, grad_max: 6.785365
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=46, grad_norm: 54.181458, grad_max: 2.375315
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] t=47, grad_norm: 19.925879, grad_max: 1.723359
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=48, grad_norm: 22.079769, grad_max: 2.440484
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개100%|██████████| 50/50 [00:28<00:00,  1.46it/s]100%|██████████| 50/50 [00:28<00:00,  1.76it/s]

[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=49, grad_norm: 4.510277, grad_max: 0.559863
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:29,  1.62it/s]  6%|▌         | 3/50 [00:01<00:25,  1.84it/s]  8%|▊         | 4/50 [00:02<00:23,  1.96it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=0, grad_norm: 92.322716, grad_max: 2.177933
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=1, grad_norm: 53.179897, grad_max: 1.412064
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] t=2, grad_norm: 41.960720, grad_max: 0.900600
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=3, grad_norm: 34.763618, grad_max: 0.798955
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210> 10%|█         | 5/50 [00:03<00:28,  1.58it/s] 12%|█▏        | 6/50 [00:03<00:25,  1.75it/s] 14%|█▍        | 7/50 [00:03<00:22,  1.87it/s] 16%|█▌        | 8/50 [00:04<00:21,  1.96it/s] 18%|█▊        | 9/50 [00:05<00:25,  1.62it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=4, grad_norm: 54.564308, grad_max: 2.095856
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=5, grad_norm: 28.869833, grad_max: 0.653113
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] t=6, grad_norm: 22.917269, grad_max: 0.489953
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] t=7, grad_norm: 18.998997, grad_max: 0.525990
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=8, grad_norm: 4.354429, grad_max: 0.229815
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:22,  1.77it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.88it/s] 24%|██▍       | 12/50 [00:06<00:19,  1.96it/s] 26%|██▌       | 13/50 [00:07<00:22,  1.63it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=9, grad_norm: 20.797119, grad_max: 0.656544
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=10, grad_norm: 15.921171, grad_max: 0.346771
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=11, grad_norm: 13.827404, grad_max: 0.350834
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf3a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf3a0>
[DeepCache DPS Debug] t=12, grad_norm: 2.848267, grad_max: 0.132305
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10> 28%|██▊       | 14/50 [00:07<00:20,  1.77it/s] 30%|███       | 15/50 [00:08<00:18,  1.88it/s] 32%|███▏      | 16/50 [00:08<00:17,  1.96it/s] 34%|███▍      | 17/50 [00:09<00:20,  1.63it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=13, grad_norm: 39.698006, grad_max: 0.745140
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=14, grad_norm: 24.640213, grad_max: 0.604289
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=15, grad_norm: 19.837708, grad_max: 0.341212
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=16, grad_norm: 1.885185, grad_max: 0.087369
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=17, grad_norm: 69.523697, grad_max: 1.247116
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730> 36%|███▌      | 18/50 [00:10<00:18,  1.77it/s] 38%|███▊      | 19/50 [00:10<00:16,  1.88it/s] 40%|████      | 20/50 [00:11<00:15,  1.96it/s] 42%|████▏     | 21/50 [00:11<00:17,  1.63it/s] 44%|████▍     | 22/50 [00:12<00:15,  1.77it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] t=18, grad_norm: 46.334759, grad_max: 0.850303
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=19, grad_norm: 38.594135, grad_max: 0.818347
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=20, grad_norm: 0.310981, grad_max: 0.013646
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=21, grad_norm: 56.783901, grad_max: 0.944198
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 46%|████▌     | 23/50 [00:12<00:14,  1.88it/s] 48%|████▊     | 24/50 [00:13<00:13,  1.96it/s] 50%|█████     | 25/50 [00:14<00:15,  1.63it/s] 52%|█████▏    | 26/50 [00:14<00:13,  1.77it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=22, grad_norm: 46.743858, grad_max: 1.184382
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=23, grad_norm: 40.432972, grad_max: 0.738228
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf340>
[DeepCache DPS Debug] t=24, grad_norm: 1.425200, grad_max: 0.104933
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=25, grad_norm: 65.326096, grad_max: 0.960915
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=26, grad_norm: 48.626640, grad_max: 1.039817
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210> 54%|█████▍    | 27/50 [00:15<00:12,  1.88it/s] 56%|█████▌    | 28/50 [00:15<00:11,  1.96it/s] 58%|█████▊    | 29/50 [00:16<00:12,  1.63it/s] 60%|██████    | 30/50 [00:16<00:11,  1.77it/s] 62%|██████▏   | 31/50 [00:17<00:10,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=27, grad_norm: 40.611080, grad_max: 0.820073
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=28, grad_norm: 6.445327, grad_max: 0.453014
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=29, grad_norm: 81.065475, grad_max: 1.716921
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf3a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf3a0>
[DeepCache DPS Debug] t=30, grad_norm: 55.725571, grad_max: 1.462947
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
 64%|██████▍   | 32/50 [00:17<00:09,  1.96it/s] 66%|██████▌   | 33/50 [00:18<00:10,  1.63it/s] 68%|██████▊   | 34/50 [00:19<00:09,  1.77it/s] 70%|███████   | 35/50 [00:19<00:07,  1.88it/s][DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] t=31, grad_norm: 44.717571, grad_max: 0.848308
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=32, grad_norm: 13.120574, grad_max: 0.773036
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=33, grad_norm: 113.764748, grad_max: 2.760451
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=34, grad_norm: 72.690292, grad_max: 1.615957
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=35, grad_norm: 48.142994, grad_max: 1.721787
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산 72%|███████▏  | 36/50 [00:19<00:07,  1.96it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.63it/s] 76%|███████▌  | 38/50 [00:21<00:06,  1.77it/s] 78%|███████▊  | 39/50 [00:21<00:05,  1.88it/s] 80%|████████  | 40/50 [00:22<00:05,  1.96it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01ceef0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01ceef0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01ceef0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01ceef0>
[DeepCache DPS Debug] t=36, grad_norm: 41.894695, grad_max: 4.247386
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=37, grad_norm: 172.259155, grad_max: 4.376470
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=38, grad_norm: 119.458443, grad_max: 4.051022
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
[DeepCache DPS Debug] t=39, grad_norm: 86.501137, grad_max: 2.444094
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True 82%|████████▏ | 41/50 [00:23<00:05,  1.64it/s] 84%|████████▍ | 42/50 [00:23<00:04,  1.77it/s] 86%|████████▌ | 43/50 [00:23<00:03,  1.88it/s] 88%|████████▊ | 44/50 [00:24<00:03,  1.96it/s]
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=40, grad_norm: 63.030518, grad_max: 9.322610
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=41, grad_norm: 189.930328, grad_max: 4.549443
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf340>
[DeepCache DPS Debug] t=42, grad_norm: 113.095917, grad_max: 3.474338
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04b9870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04b9870>
[DeepCache DPS Debug] t=43, grad_norm: 84.104927, grad_max: 3.320222
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=44, grad_norm: 92.179970, grad_max: 7.311135
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
 90%|█████████ | 45/50 [00:25<00:03,  1.63it/s] 92%|█████████▏| 46/50 [00:25<00:02,  1.77it/s] 94%|█████████▍| 47/50 [00:26<00:01,  1.88it/s] 96%|█████████▌| 48/50 [00:26<00:01,  1.96it/s] 98%|█████████▊| 49/50 [00:27<00:00,  1.63it/s][DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d04bb730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d04bb730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] t=45, grad_norm: 121.077187, grad_max: 4.435785
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b73a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b73a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=46, grad_norm: 50.860653, grad_max: 2.104259
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b6f50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b6f50>
[DeepCache DPS Debug] t=47, grad_norm: 25.109320, grad_max: 1.866398
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=10
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U10 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01cf130>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01cf130>
[DeepCache DPS Debug] t=48, grad_norm: 22.227224, grad_max: 1.643928
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d01b7fa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d01b7fa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개100%|██████████| 50/50 [00:28<00:00,  1.46it/s]100%|██████████| 50/50 [00:28<00:00,  1.76it/s]

[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019d210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019d210>
[DeepCache DPS Debug] t=49, grad_norm: 23.104984, grad_max: 2.262330
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U7 입력 캐시 완료(pre-hook): torch.Size([128, 512, 8, 8])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7fd3d019cc10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7fd3d019cc10>
save npy to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_4_layer_depth_10/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0/images.npy
Saving images to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_4_layer_depth_10/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0/images.png
