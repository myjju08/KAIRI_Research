/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:441: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
attention mode is flash
logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_3_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0
Logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_3_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0
Arguments: Arguments(data_type='image', dataset='cifar10', task='label_guidance', image_size=32, include_charges=False, generators_path='./pretrained_models/EDMsecond/generative_model_ema.npy', args_generators_path='./pretrained_models/EDMsecond/args.pickle', energy_path='./pretrained_models/tf_predict_mu/model_ema_2000.npy', args_energy_path='./pretrained_models/tf_predict_mu/args_2000.pickle', classifiers_path='./pretrained_models/evaluate_mu/best_checkpoint.npy', args_classifiers_path='./pretrained_models/evaluate_mu/args.pickle', clip_scale=100, audio_length=10, volume_factor=80.0, motion_prompt='walk', radius=3.0, model_name_or_path='openai_cifar10.pt', model_type='unet', use_deepcache=True, cache_interval=3, cache_block_id=5, skip_mode='uniform', clean_step=0, vae='mse', train_steps=1000, inference_steps=50, eta=1.0, clip_x0=True, clip_sample_range=1.0, seed=42, device=device(type='cuda'), logging_dir='/home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_3_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0', logger=None, per_sample_batch_size=128, num_samples=1024, batch_id=0, guidance_name='dps', guider='classifier', target='3', recur_steps=1, iter_steps=4, guidance_strength=1.0, guidance_scale=1.0, start_gradient=50, use_early_exit=False, early_exit_layer=None, use_time_based_early_exit=False, time_early_exit_mapping=None, rho=1.0, mu=0.25, sigma=0.001, eps_bsz=1, rho_schedule='increase', mu_schedule='increase', sigma_schedule='decrease', guide_network='resnet_cifar10.pt', classifier_image_size=224, eval_batch_size=512, logging_resolution=512, log_suffix='', log_traj=False, max_show_images=256, check_done=False, wandb=False, wandb_project='trail', wandb_name=None, wandb_entity='llm-selection', saved_file=None, sort_metric=None, topk=5, output_path='vis_molecule', output_dir=None, max_n_samples=10000000000, bon_rate=1, bon_guidance=None)
[DeepCache] DeepCacheDPSGuidance 초기화: use_deepcache=True, cache_interval=3
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:55,  1.13s/it]  4%|▍         | 2/50 [00:01<00:31,  1.51it/s]  6%|▌         | 3/50 [00:01<00:24,  1.95it/s]  8%|▊         | 4/50 [00:02<00:28,  1.64it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache] DeepCache UNet 초기화: cache_interval=3, cache_block_id=5, clean_step=0
[DeepCache Debug] 첫 번째 실행: start_timestep=50
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450514af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450514af0>
[DeepCache DPS Debug] t=0, grad_norm: 91.953590, grad_max: 2.087509
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505149a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505149a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450514a30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450514a30>
[DeepCache DPS Debug] t=1, grad_norm: 53.640690, grad_max: 1.212076
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450514880>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450514880>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450514a60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450514a60>
[DeepCache DPS Debug] t=2, grad_norm: 42.186874, grad_max: 1.246229
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450514a30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450514a30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450514c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450514c70>
[DeepCache DPS Debug] t=3, grad_norm: 72.460594, grad_max: 1.678780
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450515330>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450515330>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450515780> 10%|█         | 5/50 [00:02<00:22,  1.96it/s] 12%|█▏        | 6/50 [00:03<00:19,  2.23it/s] 14%|█▍        | 7/50 [00:03<00:23,  1.81it/s] 16%|█▌        | 8/50 [00:04<00:20,  2.08it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450515780>
[DeepCache DPS Debug] t=4, grad_norm: 33.402912, grad_max: 0.749360
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450514af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450514af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505158a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505158a0>
[DeepCache DPS Debug] t=5, grad_norm: 26.867857, grad_max: 0.634527
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450515780>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450515780>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450515660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450515660>
[DeepCache DPS Debug] t=6, grad_norm: 23.320223, grad_max: 1.275505
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450514b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450514b20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450515a50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450515a50>
[DeepCache DPS Debug] t=7, grad_norm: 22.359867, grad_max: 0.475639
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450514c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450514c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450515a80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450515a80>
[DeepCache DPS Debug] t=8, grad_norm: 17.816570, grad_max: 0.372626
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450515a50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450515a50> 18%|█▊        | 9/50 [00:04<00:17,  2.30it/s] 20%|██        | 10/50 [00:05<00:21,  1.86it/s] 22%|██▏       | 11/50 [00:05<00:18,  2.11it/s] 24%|██▍       | 12/50 [00:06<00:16,  2.32it/s] 26%|██▌       | 13/50 [00:07<00:23,  1.60it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179d20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179d20>
[DeepCache DPS Debug] t=9, grad_norm: 1.878495, grad_max: 0.190482
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450515a80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450515a80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505155d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505155d0>
[DeepCache DPS Debug] t=10, grad_norm: 21.125158, grad_max: 0.528996
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450514af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450514af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505151e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505151e0>
[DeepCache DPS Debug] t=11, grad_norm: 16.368763, grad_max: 0.368308
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505155d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505155d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1799c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1799c0>
[DeepCache DPS Debug] t=12, grad_norm: 1.438224, grad_max: 0.077601
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179f90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179f90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179bd0> 28%|██▊       | 14/50 [00:07<00:19,  1.87it/s] 30%|███       | 15/50 [00:07<00:16,  2.11it/s] 32%|███▏      | 16/50 [00:08<00:19,  1.78it/s] 34%|███▍      | 17/50 [00:08<00:16,  2.03it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179bd0>
[DeepCache DPS Debug] t=13, grad_norm: 39.927105, grad_max: 0.746259
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179ae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179ae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179c60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179c60>
[DeepCache DPS Debug] t=14, grad_norm: 25.081854, grad_max: 0.479056
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179bd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179bd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=15, grad_norm: 2.555883, grad_max: 0.118680
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a5c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a5c0>
[DeepCache DPS Debug] t=16, grad_norm: 61.653408, grad_max: 1.186838
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179a80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179a80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a6e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a6e0>
[DeepCache DPS Debug] t=17, grad_norm: 40.334492, grad_max: 0.903185
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a5c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a5c0> 36%|███▌      | 18/50 [00:09<00:14,  2.25it/s] 38%|███▊      | 19/50 [00:10<00:16,  1.85it/s] 40%|████      | 20/50 [00:10<00:14,  2.09it/s] 42%|████▏     | 21/50 [00:10<00:12,  2.30it/s] 44%|████▍     | 22/50 [00:11<00:14,  1.87it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a470>
[DeepCache DPS Debug] t=18, grad_norm: 0.387316, grad_max: 0.011024
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1796f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1796f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179300>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179300>
[DeepCache DPS Debug] t=19, grad_norm: 67.949951, grad_max: 1.352280
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1791b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1791b0>
[DeepCache DPS Debug] t=20, grad_norm: 56.309513, grad_max: 0.868347
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179300>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179300>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179990>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179990>
[DeepCache DPS Debug] t=21, grad_norm: 4.598028, grad_max: 0.342505
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a290>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a290>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1793c0> 46%|████▌     | 23/50 [00:11<00:12,  2.11it/s] 48%|████▊     | 24/50 [00:12<00:11,  2.32it/s] 50%|█████     | 25/50 [00:12<00:13,  1.88it/s] 52%|█████▏    | 26/50 [00:13<00:11,  2.11it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1793c0>
[DeepCache DPS Debug] t=22, grad_norm: 57.176323, grad_max: 0.917284
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179de0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179de0>
[DeepCache DPS Debug] t=23, grad_norm: 43.875443, grad_max: 1.196499
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1793c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1793c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179e10>
[DeepCache DPS Debug] t=24, grad_norm: 5.925331, grad_max: 0.445884
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179ae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179ae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a2f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a2f0>
[DeepCache DPS Debug] t=25, grad_norm: 65.906036, grad_max: 1.359172
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179990>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179990>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] t=26, grad_norm: 48.851280, grad_max: 1.010488
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a2f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a2f0> 54%|█████▍    | 27/50 [00:13<00:09,  2.32it/s] 56%|█████▌    | 28/50 [00:14<00:11,  1.87it/s] 58%|█████▊    | 29/50 [00:14<00:09,  2.10it/s] 60%|██████    | 30/50 [00:14<00:08,  2.31it/s] 62%|██████▏   | 31/50 [00:15<00:10,  1.86it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a680>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a680>
[DeepCache DPS Debug] t=27, grad_norm: 9.769629, grad_max: 0.514610
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a740>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a740>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a050>
[DeepCache DPS Debug] t=28, grad_norm: 75.590187, grad_max: 1.566030
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179e10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a800>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a800>
[DeepCache DPS Debug] t=29, grad_norm: 53.902664, grad_max: 0.960828
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ab90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ab90>
[DeepCache DPS Debug] t=30, grad_norm: 18.543356, grad_max: 1.282622
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a470>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a830> 64%|██████▍   | 32/50 [00:16<00:08,  2.09it/s] 66%|██████▌   | 33/50 [00:16<00:07,  2.29it/s] 68%|██████▊   | 34/50 [00:17<00:08,  1.85it/s] 70%|███████   | 35/50 [00:17<00:07,  2.08it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a830>
[DeepCache DPS Debug] t=31, grad_norm: 93.728386, grad_max: 2.187996
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a680>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a680>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ac50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ac50>
[DeepCache DPS Debug] t=32, grad_norm: 61.113998, grad_max: 1.507286
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a830>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a830>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f25c60383a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f25c60383a0>
[DeepCache DPS Debug] t=33, grad_norm: 12.460936, grad_max: 1.267537
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f25c60396c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f25c60396c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ac80>
[DeepCache DPS Debug] t=34, grad_norm: 133.185806, grad_max: 3.607053
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17afe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17afe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] t=35, grad_norm: 83.908379, grad_max: 1.981281
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ac80> 72%|███████▏  | 36/50 [00:17<00:06,  2.28it/s] 74%|███████▍  | 37/50 [00:18<00:07,  1.84it/s] 76%|███████▌  | 38/50 [00:19<00:05,  2.07it/s] 78%|███████▊  | 39/50 [00:19<00:04,  2.26it/s] 80%|████████  | 40/50 [00:20<00:05,  1.82it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=36, grad_norm: 26.528862, grad_max: 2.105857
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a320>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bd00>
[DeepCache DPS Debug] t=37, grad_norm: 180.414307, grad_max: 4.892853
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] t=38, grad_norm: 105.984688, grad_max: 2.870623
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] t=39, grad_norm: 39.364151, grad_max: 2.458398
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b190>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710> 82%|████████▏ | 41/50 [00:20<00:04,  2.05it/s] 84%|████████▍ | 42/50 [00:20<00:03,  2.25it/s] 86%|████████▌ | 43/50 [00:21<00:03,  1.81it/s] 88%|████████▊ | 44/50 [00:22<00:02,  2.03it/s] 90%|█████████ | 45/50 [00:22<00:02,  2.24it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] t=40, grad_norm: 205.887314, grad_max: 6.027440
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179a20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179a20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] t=41, grad_norm: 122.299904, grad_max: 3.542704
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c178160>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c178160>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] t=42, grad_norm: 60.147713, grad_max: 3.180966
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] t=43, grad_norm: 169.970947, grad_max: 4.693764
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] t=44, grad_norm: 92.287712, grad_max: 3.368088
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:23<00:02,  1.80it/s] 94%|█████████▍| 47/50 [00:23<00:01,  2.02it/s] 96%|█████████▌| 48/50 [00:23<00:00,  2.22it/s] 98%|█████████▊| 49/50 [00:24<00:00,  1.79it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=45, grad_norm: 81.056664, grad_max: 5.559269
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] t=46, grad_norm: 102.924942, grad_max: 6.806770
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] t=47, grad_norm: 47.967991, grad_max: 2.448580
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] t=48, grad_norm: 12.233036, grad_max: 1.056625
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] t=49, grad_norm: 0.189460, grad_max: 0.018600
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:25<00:00,  1.57it/s]100%|██████████| 50/50 [00:25<00:00,  1.96it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:40,  1.22it/s]  4%|▍         | 2/50 [00:01<00:26,  1.83it/s]  6%|▌         | 3/50 [00:01<00:21,  2.17it/s]  8%|▊         | 4/50 [00:02<00:27,  1.66it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] t=0, grad_norm: 88.771362, grad_max: 2.639839
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] t=1, grad_norm: 54.252834, grad_max: 1.140449
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=2, grad_norm: 42.544453, grad_max: 1.061311
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] t=3, grad_norm: 69.158051, grad_max: 1.627747
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710> 10%|█         | 5/50 [00:02<00:23,  1.95it/s] 12%|█▏        | 6/50 [00:03<00:20,  2.16it/s] 14%|█▍        | 7/50 [00:03<00:24,  1.72it/s] 16%|█▌        | 8/50 [00:04<00:21,  1.95it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] t=4, grad_norm: 32.547836, grad_max: 0.992231
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] t=5, grad_norm: 26.287245, grad_max: 0.557688
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] t=6, grad_norm: 33.528160, grad_max: 2.740860
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] t=7, grad_norm: 22.748072, grad_max: 0.661105
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] t=8, grad_norm: 18.230549, grad_max: 0.378958
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0> 18%|█▊        | 9/50 [00:04<00:19,  2.16it/s] 20%|██        | 10/50 [00:05<00:23,  1.73it/s] 22%|██▏       | 11/50 [00:05<00:19,  1.96it/s] 24%|██▍       | 12/50 [00:06<00:17,  2.15it/s] 26%|██▌       | 13/50 [00:07<00:21,  1.73it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=9, grad_norm: 2.535051, grad_max: 0.195747
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] t=10, grad_norm: 21.105568, grad_max: 0.454841
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] t=11, grad_norm: 16.123981, grad_max: 0.362863
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] t=12, grad_norm: 1.384407, grad_max: 0.107893
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730> 28%|██▊       | 14/50 [00:07<00:18,  1.95it/s] 30%|███       | 15/50 [00:07<00:16,  2.13it/s] 32%|███▏      | 16/50 [00:08<00:19,  1.73it/s] 34%|███▍      | 17/50 [00:08<00:16,  1.94it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] t=13, grad_norm: 40.053604, grad_max: 0.852696
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] t=14, grad_norm: 24.115524, grad_max: 0.528790
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] t=15, grad_norm: 2.126276, grad_max: 0.141705
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=16, grad_norm: 63.940414, grad_max: 1.203790
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] t=17, grad_norm: 41.640217, grad_max: 0.877909
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710> 36%|███▌      | 18/50 [00:09<00:15,  2.13it/s] 38%|███▊      | 19/50 [00:10<00:17,  1.73it/s] 40%|████      | 20/50 [00:10<00:15,  1.95it/s] 42%|████▏     | 21/50 [00:10<00:13,  2.14it/s] 44%|████▍     | 22/50 [00:11<00:16,  1.73it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] t=18, grad_norm: 1.164680, grad_max: 0.061664
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] t=19, grad_norm: 69.860435, grad_max: 1.604811
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] t=20, grad_norm: 55.395153, grad_max: 1.043293
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] t=21, grad_norm: 1.258969, grad_max: 0.073921
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1792d0> 46%|████▌     | 23/50 [00:12<00:13,  1.95it/s] 48%|████▊     | 24/50 [00:12<00:12,  2.13it/s] 50%|█████     | 25/50 [00:13<00:14,  1.73it/s] 52%|█████▏    | 26/50 [00:13<00:12,  1.94it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1792d0>
[DeepCache DPS Debug] t=22, grad_norm: 58.365379, grad_max: 0.867186
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=23, grad_norm: 42.955799, grad_max: 0.711266
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17bb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17bb50>
[DeepCache DPS Debug] t=24, grad_norm: 0.434000, grad_max: 0.022723
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a710>
[DeepCache DPS Debug] t=25, grad_norm: 66.288834, grad_max: 1.461815
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17ba00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17ba00>
[DeepCache DPS Debug] t=26, grad_norm: 48.615223, grad_max: 0.938082
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730> 54%|█████▍    | 27/50 [00:13<00:10,  2.13it/s] 56%|█████▌    | 28/50 [00:14<00:12,  1.73it/s] 58%|█████▊    | 29/50 [00:15<00:10,  1.94it/s] 60%|██████    | 30/50 [00:15<00:09,  2.13it/s] 62%|██████▏   | 31/50 [00:16<00:10,  1.73it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] t=27, grad_norm: 1.150372, grad_max: 0.064753
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b040>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f246f0a8040>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f246f0a8040>
[DeepCache DPS Debug] t=28, grad_norm: 74.706436, grad_max: 1.406382
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24727d0cd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24727d0cd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] t=29, grad_norm: 53.873768, grad_max: 0.914374
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=30, grad_norm: 25.581139, grad_max: 2.019932
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1796c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1796c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1796c0> 64%|██████▍   | 32/50 [00:16<00:09,  1.95it/s] 66%|██████▌   | 33/50 [00:17<00:07,  2.14it/s] 68%|██████▊   | 34/50 [00:17<00:09,  1.73it/s] 70%|███████   | 35/50 [00:18<00:07,  1.95it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1796c0>
[DeepCache DPS Debug] t=31, grad_norm: 91.255310, grad_max: 3.994863
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179e10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179e10>
[DeepCache DPS Debug] t=32, grad_norm: 62.590202, grad_max: 1.314312
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17aaa0>
[DeepCache DPS Debug] t=33, grad_norm: 21.539665, grad_max: 1.581068
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=34, grad_norm: 138.255707, grad_max: 3.967265
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b730>
[DeepCache DPS Debug] t=35, grad_norm: 82.692894, grad_max: 2.036214
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0> 72%|███████▏  | 36/50 [00:18<00:06,  2.14it/s] 74%|███████▍  | 37/50 [00:19<00:07,  1.73it/s] 76%|███████▌  | 38/50 [00:19<00:06,  1.94it/s] 78%|███████▊  | 39/50 [00:20<00:05,  2.12it/s] 80%|████████  | 40/50 [00:21<00:05,  1.71it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=36, grad_norm: 22.359364, grad_max: 1.861920
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1796c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1796c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1796c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1796c0>
[DeepCache DPS Debug] t=37, grad_norm: 179.256302, grad_max: 4.749333
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179e10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24504b0550>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24504b0550>
[DeepCache DPS Debug] t=38, grad_norm: 102.278183, grad_max: 3.025575
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24504b3c40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24504b3c40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24727d0cd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24727d0cd0>
[DeepCache DPS Debug] t=39, grad_norm: 31.856749, grad_max: 2.299297
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24504b1ed0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24504b1ed0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24504b1ed0> 82%|████████▏ | 41/50 [00:21<00:04,  1.92it/s] 84%|████████▍ | 42/50 [00:21<00:03,  2.10it/s] 86%|████████▌ | 43/50 [00:22<00:04,  1.70it/s] 88%|████████▊ | 44/50 [00:23<00:03,  1.91it/s] 90%|█████████ | 45/50 [00:23<00:02,  2.10it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24504b1ed0>
[DeepCache DPS Debug] t=40, grad_norm: 192.015793, grad_max: 4.945753
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24727d0ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24727d0ca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24727d0ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24727d0ca0>
[DeepCache DPS Debug] t=41, grad_norm: 116.294235, grad_max: 3.182595
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=42, grad_norm: 57.603340, grad_max: 4.271404
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24504b0550>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24504b0550>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24504b0550>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24504b0550>
[DeepCache DPS Debug] t=43, grad_norm: 174.119812, grad_max: 5.360097
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24727d0ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24727d0ca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24727d0ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24727d0ca0>
[DeepCache DPS Debug] t=44, grad_norm: 90.568848, grad_max: 2.782947
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:24<00:02,  1.70it/s] 94%|█████████▍| 47/50 [00:24<00:01,  1.91it/s] 96%|█████████▌| 48/50 [00:25<00:00,  2.10it/s] 98%|█████████▊| 49/50 [00:25<00:00,  1.70it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=45, grad_norm: 73.596085, grad_max: 10.197517
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24504b1ed0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24504b1ed0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24504b1ed0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24504b1ed0>
[DeepCache DPS Debug] t=46, grad_norm: 90.027237, grad_max: 4.707602
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24727d0ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24727d0ca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24727d0ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24727d0ca0>
[DeepCache DPS Debug] t=47, grad_norm: 52.355289, grad_max: 3.312345
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=48, grad_norm: 15.144147, grad_max: 0.891605
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24504b0550>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24504b0550>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24504b0550>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24504b0550>
[DeepCache DPS Debug] t=49, grad_norm: 7.093600, grad_max: 0.548743
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:26<00:00,  1.50it/s]100%|██████████| 50/50 [00:26<00:00,  1.87it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24727d0ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24727d0ca0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:27,  1.76it/s]  6%|▌         | 3/50 [00:01<00:22,  2.10it/s]  8%|▊         | 4/50 [00:02<00:28,  1.60it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24727d0ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24727d0ca0>
[DeepCache DPS Debug] t=0, grad_norm: 91.347687, grad_max: 2.414246
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=1, grad_norm: 53.986542, grad_max: 1.295522
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179120>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179120>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179120>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179120>
[DeepCache DPS Debug] t=2, grad_norm: 42.378368, grad_max: 0.889150
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=3, grad_norm: 77.282021, grad_max: 2.186615
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0> 10%|█         | 5/50 [00:02<00:23,  1.88it/s] 12%|█▏        | 6/50 [00:03<00:20,  2.10it/s] 14%|█▍        | 7/50 [00:04<00:25,  1.67it/s] 16%|█▌        | 8/50 [00:04<00:22,  1.90it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] t=4, grad_norm: 32.736752, grad_max: 0.784080
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1795a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1795a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1795a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1795a0>
[DeepCache DPS Debug] t=5, grad_norm: 26.070581, grad_max: 0.576060
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] t=6, grad_norm: 27.093458, grad_max: 1.454803
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1794e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1794e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1794e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1794e0>
[DeepCache DPS Debug] t=7, grad_norm: 22.651243, grad_max: 0.562126
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=8, grad_norm: 17.866507, grad_max: 0.421947
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179120>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179120> 18%|█▊        | 9/50 [00:04<00:19,  2.10it/s] 20%|██        | 10/50 [00:05<00:23,  1.69it/s] 22%|██▏       | 11/50 [00:05<00:20,  1.91it/s] 24%|██▍       | 12/50 [00:06<00:18,  2.09it/s] 26%|██▌       | 13/50 [00:07<00:21,  1.69it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179120>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179120>
[DeepCache DPS Debug] t=9, grad_norm: 2.888358, grad_max: 0.259237
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=10, grad_norm: 21.084198, grad_max: 0.615059
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] t=11, grad_norm: 16.300468, grad_max: 0.399162
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1795a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1795a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1795a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1795a0>
[DeepCache DPS Debug] t=12, grad_norm: 1.140062, grad_max: 0.091037
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720> 28%|██▊       | 14/50 [00:07<00:18,  1.90it/s] 30%|███       | 15/50 [00:07<00:16,  2.09it/s] 32%|███▏      | 16/50 [00:08<00:20,  1.69it/s] 34%|███▍      | 17/50 [00:09<00:17,  1.91it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] t=13, grad_norm: 39.916180, grad_max: 0.818743
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1794e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1794e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1794e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1794e0>
[DeepCache DPS Debug] t=14, grad_norm: 24.728016, grad_max: 0.686795
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=15, grad_norm: 1.404734, grad_max: 0.067919
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179120>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179120>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179120>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179120>
[DeepCache DPS Debug] t=16, grad_norm: 62.656780, grad_max: 1.150743
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=17, grad_norm: 40.900272, grad_max: 1.055245
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0> 36%|███▌      | 18/50 [00:09<00:15,  2.09it/s] 38%|███▊      | 19/50 [00:10<00:18,  1.70it/s] 40%|████      | 20/50 [00:10<00:15,  1.91it/s] 42%|████▏     | 21/50 [00:11<00:13,  2.10it/s] 44%|████▍     | 22/50 [00:11<00:16,  1.70it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] t=18, grad_norm: 0.258837, grad_max: 0.009121
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1795a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1795a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1795a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1795a0>
[DeepCache DPS Debug] t=19, grad_norm: 69.098289, grad_max: 1.215876
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] t=20, grad_norm: 56.437595, grad_max: 1.253918
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1794e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1794e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1794e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1794e0>
[DeepCache DPS Debug] t=21, grad_norm: 0.181396, grad_max: 0.008164
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17b3d0> 46%|████▌     | 23/50 [00:12<00:14,  1.91it/s] 48%|████▊     | 24/50 [00:12<00:12,  2.10it/s] 50%|█████     | 25/50 [00:13<00:14,  1.69it/s] 52%|█████▏    | 26/50 [00:13<00:12,  1.91it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17b3d0>
[DeepCache DPS Debug] t=22, grad_norm: 59.450199, grad_max: 1.038374
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179120>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179120>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179120>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179120>
[DeepCache DPS Debug] t=23, grad_norm: 44.441616, grad_max: 0.748814
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=24, grad_norm: 5.392012, grad_max: 0.354867
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] t=25, grad_norm: 65.605209, grad_max: 1.611697
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1795a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1795a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=26, grad_norm: 48.573608, grad_max: 0.880939
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530> 54%|█████▍    | 27/50 [00:14<00:11,  2.09it/s] 56%|█████▌    | 28/50 [00:15<00:13,  1.69it/s] 58%|█████▊    | 29/50 [00:15<00:11,  1.90it/s] 60%|██████    | 30/50 [00:15<00:09,  2.09it/s] 62%|██████▏   | 31/50 [00:16<00:11,  1.69it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=27, grad_norm: 13.718997, grad_max: 0.970032
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=28, grad_norm: 74.192802, grad_max: 1.769190
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=29, grad_norm: 54.427658, grad_max: 1.051703
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=30, grad_norm: 8.957121, grad_max: 1.055138
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720> 64%|██████▍   | 32/50 [00:17<00:09,  1.90it/s] 66%|██████▌   | 33/50 [00:17<00:08,  2.09it/s] 68%|██████▊   | 34/50 [00:18<00:09,  1.69it/s] 70%|███████   | 35/50 [00:18<00:07,  1.90it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] t=31, grad_norm: 92.882309, grad_max: 2.914885
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=32, grad_norm: 60.471436, grad_max: 1.338028
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] t=33, grad_norm: 14.919404, grad_max: 1.516270
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=34, grad_norm: 136.956726, grad_max: 3.096479
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] t=35, grad_norm: 82.840034, grad_max: 2.857110
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0> 72%|███████▏  | 36/50 [00:19<00:06,  2.09it/s] 74%|███████▍  | 37/50 [00:19<00:07,  1.69it/s] 76%|███████▌  | 38/50 [00:20<00:06,  1.90it/s] 78%|███████▊  | 39/50 [00:20<00:05,  2.09it/s] 80%|████████  | 40/50 [00:21<00:05,  1.69it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=36, grad_norm: 27.570749, grad_max: 3.821533
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=37, grad_norm: 171.634338, grad_max: 4.195884
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=38, grad_norm: 118.548775, grad_max: 3.015718
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] t=39, grad_norm: 56.641182, grad_max: 5.046452
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0> 82%|████████▏ | 41/50 [00:21<00:04,  1.90it/s] 84%|████████▍ | 42/50 [00:22<00:03,  2.09it/s] 86%|████████▌ | 43/50 [00:23<00:04,  1.69it/s] 88%|████████▊ | 44/50 [00:23<00:03,  1.90it/s] 90%|█████████ | 45/50 [00:23<00:02,  2.09it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=40, grad_norm: 199.523468, grad_max: 5.611392
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] t=41, grad_norm: 119.712303, grad_max: 3.148374
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=42, grad_norm: 52.834759, grad_max: 3.739590
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] t=43, grad_norm: 189.712509, grad_max: 5.131860
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=44, grad_norm: 100.174309, grad_max: 3.332711
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:24<00:02,  1.69it/s] 94%|█████████▍| 47/50 [00:25<00:01,  1.91it/s] 96%|█████████▌| 48/50 [00:25<00:00,  2.09it/s] 98%|█████████▊| 49/50 [00:26<00:00,  1.69it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=45, grad_norm: 74.364738, grad_max: 4.154515
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=46, grad_norm: 86.438599, grad_max: 4.431234
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] t=47, grad_norm: 38.851444, grad_max: 2.083034
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=48, grad_norm: 31.583126, grad_max: 2.366143
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] t=49, grad_norm: 4.229191, grad_max: 0.489502
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:27<00:00,  1.49it/s]100%|██████████| 50/50 [00:27<00:00,  1.84it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.17it/s]  4%|▍         | 2/50 [00:01<00:27,  1.76it/s]  6%|▌         | 3/50 [00:01<00:22,  2.09it/s]  8%|▊         | 4/50 [00:02<00:28,  1.60it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=0, grad_norm: 92.867630, grad_max: 3.724670
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] t=1, grad_norm: 53.367188, grad_max: 1.689117
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=2, grad_norm: 43.027542, grad_max: 1.007257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=3, grad_norm: 75.595367, grad_max: 3.267639
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10> 10%|█         | 5/50 [00:02<00:23,  1.88it/s] 12%|█▏        | 6/50 [00:03<00:21,  2.09it/s] 14%|█▍        | 7/50 [00:04<00:25,  1.67it/s] 16%|█▌        | 8/50 [00:04<00:22,  1.90it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=4, grad_norm: 32.561123, grad_max: 0.943264
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] t=5, grad_norm: 26.175587, grad_max: 0.672386
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=6, grad_norm: 32.735443, grad_max: 1.927979
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] t=7, grad_norm: 23.141768, grad_max: 0.477115
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=8, grad_norm: 17.938200, grad_max: 0.414288
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0> 18%|█▊        | 9/50 [00:04<00:19,  2.09it/s] 20%|██        | 10/50 [00:05<00:23,  1.69it/s] 22%|██▏       | 11/50 [00:05<00:20,  1.90it/s] 24%|██▍       | 12/50 [00:06<00:18,  2.09it/s] 26%|██▌       | 13/50 [00:07<00:21,  1.69it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] t=9, grad_norm: 3.195936, grad_max: 0.137299
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=10, grad_norm: 20.848497, grad_max: 0.575334
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=11, grad_norm: 15.816956, grad_max: 0.327158
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=12, grad_norm: 0.837569, grad_max: 0.031044
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720> 28%|██▊       | 14/50 [00:07<00:18,  1.91it/s] 30%|███       | 15/50 [00:07<00:16,  2.09it/s] 32%|███▏      | 16/50 [00:08<00:20,  1.69it/s] 34%|███▍      | 17/50 [00:09<00:17,  1.91it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] t=13, grad_norm: 40.229340, grad_max: 0.770798
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=14, grad_norm: 24.518717, grad_max: 0.479220
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] t=15, grad_norm: 2.263389, grad_max: 0.107576
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=16, grad_norm: 63.011181, grad_max: 1.342242
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c1797e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c1797e0>
[DeepCache DPS Debug] t=17, grad_norm: 40.456215, grad_max: 0.824377
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0> 36%|███▌      | 18/50 [00:09<00:15,  2.09it/s] 38%|███▊      | 19/50 [00:10<00:18,  1.69it/s] 40%|████      | 20/50 [00:10<00:15,  1.91it/s] 42%|████▏     | 21/50 [00:11<00:13,  2.09it/s] 44%|████▍     | 22/50 [00:11<00:16,  1.69it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=18, grad_norm: 0.388477, grad_max: 0.013059
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c17a020>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c17a020>
[DeepCache DPS Debug] t=19, grad_norm: 67.463531, grad_max: 1.218829
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=20, grad_norm: 56.905029, grad_max: 1.085046
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179720>
[DeepCache DPS Debug] t=21, grad_norm: 0.153507, grad_max: 0.004234
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0> 46%|████▌     | 23/50 [00:12<00:14,  1.90it/s] 48%|████▊     | 24/50 [00:12<00:12,  2.08it/s] 50%|█████     | 25/50 [00:13<00:14,  1.68it/s] 52%|█████▏    | 26/50 [00:13<00:12,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=22, grad_norm: 58.009636, grad_max: 0.904539
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245c179570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245c179570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=23, grad_norm: 42.891838, grad_max: 1.040167
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] t=24, grad_norm: 0.127282, grad_max: 0.005293
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] t=25, grad_norm: 65.371552, grad_max: 1.835887
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] t=26, grad_norm: 48.205719, grad_max: 0.873487
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0> 54%|█████▍    | 27/50 [00:14<00:11,  2.07it/s] 56%|█████▌    | 28/50 [00:15<00:13,  1.68it/s] 58%|█████▊    | 29/50 [00:15<00:11,  1.89it/s] 60%|██████    | 30/50 [00:15<00:09,  2.07it/s] 62%|██████▏   | 31/50 [00:16<00:11,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=27, grad_norm: 8.144213, grad_max: 0.590746
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60>
[DeepCache DPS Debug] t=28, grad_norm: 73.329369, grad_max: 1.496699
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=29, grad_norm: 54.635353, grad_max: 1.066966
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=30, grad_norm: 14.481224, grad_max: 1.197896
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10> 64%|██████▍   | 32/50 [00:17<00:09,  1.89it/s] 66%|██████▌   | 33/50 [00:17<00:08,  2.07it/s] 68%|██████▊   | 34/50 [00:18<00:09,  1.67it/s] 70%|███████   | 35/50 [00:18<00:07,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=31, grad_norm: 92.454391, grad_max: 1.819555
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=32, grad_norm: 63.327934, grad_max: 1.320705
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] t=33, grad_norm: 18.721844, grad_max: 1.350977
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] t=34, grad_norm: 132.032562, grad_max: 2.876434
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=35, grad_norm: 79.255615, grad_max: 2.863840
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60> 72%|███████▏  | 36/50 [00:19<00:06,  2.06it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.67it/s] 76%|███████▌  | 38/50 [00:20<00:06,  1.88it/s] 78%|███████▊  | 39/50 [00:20<00:05,  2.07it/s] 80%|████████  | 40/50 [00:21<00:05,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60>
[DeepCache DPS Debug] t=36, grad_norm: 19.258953, grad_max: 1.325139
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=37, grad_norm: 178.538635, grad_max: 4.171971
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=38, grad_norm: 110.436295, grad_max: 5.246240
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=39, grad_norm: 18.588713, grad_max: 1.804482
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00> 82%|████████▏ | 41/50 [00:22<00:04,  1.88it/s] 84%|████████▍ | 42/50 [00:22<00:03,  2.07it/s] 86%|████████▌ | 43/50 [00:23<00:04,  1.67it/s] 88%|████████▊ | 44/50 [00:23<00:03,  1.88it/s] 90%|█████████ | 45/50 [00:24<00:02,  2.06it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=40, grad_norm: 198.437454, grad_max: 4.293489
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] t=41, grad_norm: 130.995728, grad_max: 3.644539
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] t=42, grad_norm: 56.904812, grad_max: 3.656828
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=43, grad_norm: 190.067276, grad_max: 5.680968
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60>
[DeepCache DPS Debug] t=44, grad_norm: 108.312332, grad_max: 6.100671
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:24<00:02,  1.67it/s] 94%|█████████▍| 47/50 [00:25<00:01,  1.88it/s] 96%|█████████▌| 48/50 [00:25<00:00,  2.06it/s] 98%|█████████▊| 49/50 [00:26<00:00,  1.67it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=45, grad_norm: 61.550644, grad_max: 6.694692
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=46, grad_norm: 110.698051, grad_max: 4.159700
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=47, grad_norm: 43.961227, grad_max: 2.333272
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=48, grad_norm: 22.868382, grad_max: 1.428699
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] t=49, grad_norm: 1.897494, grad_max: 0.176566
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:27<00:00,  1.48it/s]100%|██████████| 50/50 [00:27<00:00,  1.83it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:27,  1.74it/s]  6%|▌         | 3/50 [00:01<00:22,  2.07it/s]  8%|▊         | 4/50 [00:02<00:29,  1.58it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] t=0, grad_norm: 93.343079, grad_max: 2.707886
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=1, grad_norm: 53.274799, grad_max: 1.664090
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60>
[DeepCache DPS Debug] t=2, grad_norm: 42.498592, grad_max: 1.023414
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=3, grad_norm: 71.500908, grad_max: 1.663666
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850> 10%|█         | 5/50 [00:02<00:24,  1.85it/s] 12%|█▏        | 6/50 [00:03<00:21,  2.07it/s] 14%|█▍        | 7/50 [00:04<00:26,  1.65it/s] 16%|█▌        | 8/50 [00:04<00:22,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=4, grad_norm: 32.256718, grad_max: 0.857378
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=5, grad_norm: 25.919680, grad_max: 0.576381
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=6, grad_norm: 26.525400, grad_max: 1.061649
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] t=7, grad_norm: 23.013891, grad_max: 0.520102
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] t=8, grad_norm: 18.113091, grad_max: 0.439611
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0> 18%|█▊        | 9/50 [00:04<00:19,  2.07it/s] 20%|██        | 10/50 [00:05<00:24,  1.67it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.88it/s] 24%|██▍       | 12/50 [00:06<00:18,  2.07it/s] 26%|██▌       | 13/50 [00:07<00:22,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=9, grad_norm: 1.536120, grad_max: 0.078403
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60>
[DeepCache DPS Debug] t=10, grad_norm: 21.138298, grad_max: 0.585122
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505156f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505156f0>
[DeepCache DPS Debug] t=11, grad_norm: 15.948468, grad_max: 0.379797
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=12, grad_norm: 1.798725, grad_max: 0.106625
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450517f10> 28%|██▊       | 14/50 [00:07<00:19,  1.88it/s] 30%|███       | 15/50 [00:08<00:16,  2.07it/s] 32%|███▏      | 16/50 [00:08<00:20,  1.67it/s] 34%|███▍      | 17/50 [00:09<00:17,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450517f10>
[DeepCache DPS Debug] t=13, grad_norm: 41.326275, grad_max: 0.764870
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=14, grad_norm: 25.003189, grad_max: 0.476820
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450516530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450516530>
[DeepCache DPS Debug] t=15, grad_norm: 2.498438, grad_max: 0.098255
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020d2d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020d2d0>
[DeepCache DPS Debug] t=16, grad_norm: 62.504791, grad_max: 1.046471
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450020ac0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450020ac0>
[DeepCache DPS Debug] t=17, grad_norm: 39.347652, grad_max: 0.779501
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd60> 36%|███▌      | 18/50 [00:09<00:15,  2.07it/s] 38%|███▊      | 19/50 [00:10<00:18,  1.67it/s] 40%|████      | 20/50 [00:10<00:15,  1.89it/s] 42%|████▏     | 21/50 [00:11<00:14,  2.07it/s] 44%|████▍     | 22/50 [00:12<00:16,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=18, grad_norm: 0.435677, grad_max: 0.015362
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] t=19, grad_norm: 70.880707, grad_max: 1.184361
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=20, grad_norm: 55.718708, grad_max: 1.109782
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=21, grad_norm: 0.265775, grad_max: 0.012582
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610> 46%|████▌     | 23/50 [00:12<00:14,  1.89it/s] 48%|████▊     | 24/50 [00:12<00:12,  2.07it/s] 50%|█████     | 25/50 [00:13<00:14,  1.67it/s] 52%|█████▏    | 26/50 [00:14<00:12,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=22, grad_norm: 57.009758, grad_max: 1.060268
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=23, grad_norm: 43.984814, grad_max: 0.862201
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=24, grad_norm: 6.641621, grad_max: 0.736681
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] t=25, grad_norm: 65.475639, grad_max: 1.147067
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=26, grad_norm: 48.506393, grad_max: 0.874584
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850> 54%|█████▍    | 27/50 [00:14<00:11,  2.07it/s] 56%|█████▌    | 28/50 [00:15<00:13,  1.67it/s] 58%|█████▊    | 29/50 [00:15<00:11,  1.88it/s] 60%|██████    | 30/50 [00:16<00:09,  2.07it/s] 62%|██████▏   | 31/50 [00:16<00:11,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=27, grad_norm: 6.502814, grad_max: 0.595102
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=28, grad_norm: 74.725555, grad_max: 1.595146
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=29, grad_norm: 53.509933, grad_max: 1.006288
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=30, grad_norm: 54.751564, grad_max: 6.372834
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050> 64%|██████▍   | 32/50 [00:17<00:09,  1.89it/s] 66%|██████▌   | 33/50 [00:17<00:08,  2.07it/s] 68%|██████▊   | 34/50 [00:18<00:09,  1.67it/s] 70%|███████   | 35/50 [00:18<00:07,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] t=31, grad_norm: 89.529785, grad_max: 2.122115
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=32, grad_norm: 59.894451, grad_max: 1.188038
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=33, grad_norm: 21.423498, grad_max: 2.439545
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=34, grad_norm: 134.286423, grad_max: 3.972834
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=35, grad_norm: 86.575653, grad_max: 2.393736
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850> 72%|███████▏  | 36/50 [00:19<00:06,  2.07it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.68it/s] 76%|███████▌  | 38/50 [00:20<00:06,  1.89it/s] 78%|███████▊  | 39/50 [00:20<00:05,  2.07it/s] 80%|████████  | 40/50 [00:21<00:05,  1.68it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=36, grad_norm: 24.767813, grad_max: 3.273409
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] t=37, grad_norm: 179.859589, grad_max: 4.947100
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=38, grad_norm: 112.200729, grad_max: 3.736484
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=39, grad_norm: 40.032158, grad_max: 3.102962
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610> 82%|████████▏ | 41/50 [00:22<00:04,  1.89it/s] 84%|████████▍ | 42/50 [00:22<00:03,  2.07it/s] 86%|████████▌ | 43/50 [00:23<00:04,  1.68it/s] 88%|████████▊ | 44/50 [00:23<00:03,  1.89it/s] 90%|█████████ | 45/50 [00:24<00:02,  2.07it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=40, grad_norm: 193.806274, grad_max: 5.465538
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=41, grad_norm: 119.744148, grad_max: 2.847319
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=42, grad_norm: 60.638321, grad_max: 6.250404
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] t=43, grad_norm: 174.732529, grad_max: 5.515713
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=44, grad_norm: 86.690742, grad_max: 3.544476
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:25<00:02,  1.67it/s] 94%|█████████▍| 47/50 [00:25<00:01,  1.89it/s] 96%|█████████▌| 48/50 [00:25<00:00,  2.07it/s] 98%|█████████▊| 49/50 [00:26<00:00,  1.67it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=45, grad_norm: 62.893925, grad_max: 3.814664
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=46, grad_norm: 88.724747, grad_max: 4.816150
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=47, grad_norm: 31.680010, grad_max: 1.482545
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=48, grad_norm: 21.591173, grad_max: 1.531114
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] t=49, grad_norm: 6.455007, grad_max: 0.915694
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:27<00:00,  1.48it/s]100%|██████████| 50/50 [00:27<00:00,  1.82it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:27,  1.74it/s]  6%|▌         | 3/50 [00:01<00:22,  2.07it/s]  8%|▊         | 4/50 [00:02<00:29,  1.58it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=0, grad_norm: 96.140930, grad_max: 2.672424
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=1, grad_norm: 53.466667, grad_max: 1.628814
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=2, grad_norm: 42.622925, grad_max: 0.834518
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=3, grad_norm: 72.956558, grad_max: 3.049805
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850> 10%|█         | 5/50 [00:02<00:24,  1.85it/s] 12%|█▏        | 6/50 [00:03<00:21,  2.07it/s] 14%|█▍        | 7/50 [00:04<00:26,  1.65it/s] 16%|█▌        | 8/50 [00:04<00:22,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=4, grad_norm: 33.199154, grad_max: 0.788663
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] t=5, grad_norm: 26.729988, grad_max: 0.590594
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=6, grad_norm: 24.392216, grad_max: 2.011215
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=7, grad_norm: 22.795809, grad_max: 0.565364
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=8, grad_norm: 17.889223, grad_max: 0.392528
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0> 18%|█▊        | 9/50 [00:04<00:19,  2.07it/s] 20%|██        | 10/50 [00:05<00:23,  1.67it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.88it/s] 24%|██▍       | 12/50 [00:06<00:18,  2.07it/s] 26%|██▌       | 13/50 [00:07<00:22,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=9, grad_norm: 1.726732, grad_max: 0.073161
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=10, grad_norm: 20.579958, grad_max: 0.469580
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] t=11, grad_norm: 15.965168, grad_max: 0.391257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] t=12, grad_norm: 1.595239, grad_max: 0.102529
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850> 28%|██▊       | 14/50 [00:07<00:19,  1.89it/s] 30%|███       | 15/50 [00:08<00:16,  2.07it/s] 32%|███▏      | 16/50 [00:08<00:20,  1.67it/s] 34%|███▍      | 17/50 [00:09<00:17,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=13, grad_norm: 40.601929, grad_max: 0.803551
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=14, grad_norm: 24.772875, grad_max: 0.545706
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24505177f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24505177f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=15, grad_norm: 1.472344, grad_max: 0.059253
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=16, grad_norm: 61.053463, grad_max: 1.139542
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=17, grad_norm: 40.300751, grad_max: 0.775046
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610> 36%|███▌      | 18/50 [00:09<00:15,  2.07it/s] 38%|███▊      | 19/50 [00:10<00:18,  1.67it/s] 40%|████      | 20/50 [00:10<00:15,  1.88it/s] 42%|████▏     | 21/50 [00:11<00:14,  2.07it/s] 44%|████▍     | 22/50 [00:12<00:16,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=18, grad_norm: 0.518168, grad_max: 0.013455
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=19, grad_norm: 71.983032, grad_max: 1.857558
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=20, grad_norm: 56.013268, grad_max: 0.948234
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=21, grad_norm: 1.409152, grad_max: 0.144514
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850> 46%|████▌     | 23/50 [00:12<00:14,  1.89it/s] 48%|████▊     | 24/50 [00:12<00:12,  2.07it/s] 50%|█████     | 25/50 [00:13<00:14,  1.67it/s] 52%|█████▏    | 26/50 [00:14<00:12,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=22, grad_norm: 57.159313, grad_max: 1.078986
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=23, grad_norm: 41.908665, grad_max: 0.689805
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=24, grad_norm: 8.692651, grad_max: 0.787181
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=25, grad_norm: 64.497940, grad_max: 1.241409
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=26, grad_norm: 47.359192, grad_max: 0.795372
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610> 54%|█████▍    | 27/50 [00:14<00:11,  2.07it/s] 56%|█████▌    | 28/50 [00:15<00:13,  1.67it/s] 58%|█████▊    | 29/50 [00:15<00:11,  1.88it/s] 60%|██████    | 30/50 [00:16<00:09,  2.07it/s] 62%|██████▏   | 31/50 [00:16<00:11,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=27, grad_norm: 14.732094, grad_max: 0.946977
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=28, grad_norm: 74.381882, grad_max: 1.438356
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=29, grad_norm: 54.662994, grad_max: 1.021446
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=30, grad_norm: 20.281771, grad_max: 2.555405
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850> 64%|██████▍   | 32/50 [00:17<00:09,  1.88it/s] 66%|██████▌   | 33/50 [00:17<00:08,  2.07it/s] 68%|██████▊   | 34/50 [00:18<00:09,  1.67it/s] 70%|███████   | 35/50 [00:18<00:07,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=31, grad_norm: 96.673538, grad_max: 2.757648
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=32, grad_norm: 62.389778, grad_max: 1.517116
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=33, grad_norm: 16.756781, grad_max: 1.811159
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=34, grad_norm: 138.214127, grad_max: 3.574891
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=35, grad_norm: 84.638435, grad_max: 1.852165
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610> 72%|███████▏  | 36/50 [00:19<00:06,  2.07it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.67it/s] 76%|███████▌  | 38/50 [00:20<00:06,  1.88it/s] 78%|███████▊  | 39/50 [00:20<00:05,  2.07it/s] 80%|████████  | 40/50 [00:21<00:05,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=36, grad_norm: 11.925056, grad_max: 1.273751
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=37, grad_norm: 184.278824, grad_max: 5.869184
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=38, grad_norm: 115.590988, grad_max: 3.093064
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=39, grad_norm: 45.441818, grad_max: 5.377445
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410> 82%|████████▏ | 41/50 [00:22<00:04,  1.88it/s] 84%|████████▍ | 42/50 [00:22<00:03,  2.07it/s] 86%|████████▌ | 43/50 [00:23<00:04,  1.67it/s] 88%|████████▊ | 44/50 [00:23<00:03,  1.89it/s] 90%|█████████ | 45/50 [00:24<00:02,  2.07it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=40, grad_norm: 203.479675, grad_max: 4.797730
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=41, grad_norm: 125.899063, grad_max: 4.599980
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=42, grad_norm: 65.900528, grad_max: 7.356342
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=43, grad_norm: 182.312775, grad_max: 4.764840
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=44, grad_norm: 90.869003, grad_max: 4.499108
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:25<00:02,  1.67it/s] 94%|█████████▍| 47/50 [00:25<00:01,  1.88it/s] 96%|█████████▌| 48/50 [00:25<00:00,  2.07it/s] 98%|█████████▊| 49/50 [00:26<00:00,  1.67it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=45, grad_norm: 85.053535, grad_max: 9.046668
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=46, grad_norm: 62.115700, grad_max: 3.414853
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=47, grad_norm: 51.891739, grad_max: 2.794873
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=48, grad_norm: 17.413349, grad_max: 1.717830
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=49, grad_norm: 6.880350, grad_max: 0.542287
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:27<00:00,  1.48it/s]100%|██████████| 50/50 [00:27<00:00,  1.82it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:27,  1.74it/s]  6%|▌         | 3/50 [00:01<00:22,  2.07it/s]  8%|▊         | 4/50 [00:02<00:29,  1.58it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=0, grad_norm: 90.057022, grad_max: 2.067017
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=1, grad_norm: 53.592739, grad_max: 1.332615
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=2, grad_norm: 41.946739, grad_max: 0.953062
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=3, grad_norm: 71.184967, grad_max: 2.395115
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00> 10%|█         | 5/50 [00:02<00:24,  1.85it/s] 12%|█▏        | 6/50 [00:03<00:21,  2.07it/s] 14%|█▍        | 7/50 [00:04<00:26,  1.65it/s] 16%|█▌        | 8/50 [00:04<00:22,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=4, grad_norm: 32.384125, grad_max: 0.678911
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=5, grad_norm: 26.286753, grad_max: 0.589957
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=6, grad_norm: 23.842552, grad_max: 1.829105
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=7, grad_norm: 23.151278, grad_max: 0.551906
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=8, grad_norm: 18.238474, grad_max: 0.430797
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610> 18%|█▊        | 9/50 [00:04<00:19,  2.07it/s] 20%|██        | 10/50 [00:05<00:24,  1.67it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.88it/s] 24%|██▍       | 12/50 [00:06<00:18,  2.07it/s] 26%|██▌       | 13/50 [00:07<00:22,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=9, grad_norm: 3.000076, grad_max: 0.329491
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=10, grad_norm: 20.929832, grad_max: 0.456679
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=11, grad_norm: 15.937605, grad_max: 0.358752
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=12, grad_norm: 1.388614, grad_max: 0.096601
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00> 28%|██▊       | 14/50 [00:07<00:19,  1.89it/s] 30%|███       | 15/50 [00:08<00:16,  2.07it/s] 32%|███▏      | 16/50 [00:08<00:20,  1.67it/s] 34%|███▍      | 17/50 [00:09<00:17,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=13, grad_norm: 40.486050, grad_max: 0.913143
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=14, grad_norm: 25.141228, grad_max: 0.499408
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=15, grad_norm: 2.368721, grad_max: 0.117500
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=16, grad_norm: 61.417091, grad_max: 1.275084
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=17, grad_norm: 40.069168, grad_max: 1.073583
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610> 36%|███▌      | 18/50 [00:09<00:15,  2.07it/s] 38%|███▊      | 19/50 [00:10<00:18,  1.68it/s] 40%|████      | 20/50 [00:10<00:15,  1.89it/s] 42%|████▏     | 21/50 [00:11<00:14,  2.07it/s] 44%|████▍     | 22/50 [00:12<00:16,  1.67it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=18, grad_norm: 0.355181, grad_max: 0.007849
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=19, grad_norm: 67.169701, grad_max: 1.268259
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=20, grad_norm: 56.953907, grad_max: 1.133257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=21, grad_norm: 0.607077, grad_max: 0.020232
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0> 46%|████▌     | 23/50 [00:12<00:14,  1.89it/s] 48%|████▊     | 24/50 [00:12<00:12,  2.07it/s] 50%|█████     | 25/50 [00:13<00:14,  1.67it/s] 52%|█████▏    | 26/50 [00:14<00:12,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=22, grad_norm: 56.615826, grad_max: 1.037752
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=23, grad_norm: 42.554226, grad_max: 1.055286
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=24, grad_norm: 2.731270, grad_max: 0.313474
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=25, grad_norm: 65.229309, grad_max: 1.281145
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=26, grad_norm: 48.393692, grad_max: 0.884788
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0> 54%|█████▍    | 27/50 [00:14<00:11,  2.07it/s] 56%|█████▌    | 28/50 [00:15<00:13,  1.67it/s] 58%|█████▊    | 29/50 [00:15<00:11,  1.89it/s] 60%|██████    | 30/50 [00:16<00:09,  2.07it/s] 62%|██████▏   | 31/50 [00:16<00:11,  1.68it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=27, grad_norm: 3.114720, grad_max: 0.297245
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=28, grad_norm: 76.272453, grad_max: 1.348279
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=29, grad_norm: 55.694336, grad_max: 1.178039
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=30, grad_norm: 5.292174, grad_max: 0.377027
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0> 64%|██████▍   | 32/50 [00:17<00:09,  1.89it/s] 66%|██████▌   | 33/50 [00:17<00:08,  2.07it/s] 68%|██████▊   | 34/50 [00:18<00:09,  1.68it/s] 70%|███████   | 35/50 [00:18<00:07,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=31, grad_norm: 94.618004, grad_max: 1.709625
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=32, grad_norm: 63.642109, grad_max: 1.404994
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=33, grad_norm: 50.032074, grad_max: 9.874609
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=34, grad_norm: 135.006592, grad_max: 2.715259
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=35, grad_norm: 84.203873, grad_max: 2.060741
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850> 72%|███████▏  | 36/50 [00:19<00:06,  2.07it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.68it/s] 76%|███████▌  | 38/50 [00:20<00:06,  1.89it/s] 78%|███████▊  | 39/50 [00:20<00:05,  2.07it/s] 80%|████████  | 40/50 [00:21<00:05,  1.68it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=36, grad_norm: 16.301985, grad_max: 1.219572
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=37, grad_norm: 176.426086, grad_max: 5.274018
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] t=38, grad_norm: 117.531937, grad_max: 4.668806
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=39, grad_norm: 29.831820, grad_max: 3.623334
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410> 82%|████████▏ | 41/50 [00:22<00:04,  1.89it/s] 84%|████████▍ | 42/50 [00:22<00:03,  2.07it/s] 86%|████████▌ | 43/50 [00:23<00:04,  1.68it/s] 88%|████████▊ | 44/50 [00:23<00:03,  1.89it/s] 90%|█████████ | 45/50 [00:24<00:02,  2.07it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=40, grad_norm: 186.166733, grad_max: 4.864746
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=41, grad_norm: 124.831589, grad_max: 3.788390
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=42, grad_norm: 49.292461, grad_max: 4.648285
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=43, grad_norm: 183.145889, grad_max: 6.505102
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=44, grad_norm: 100.457466, grad_max: 3.639594
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:25<00:02,  1.67it/s] 94%|█████████▍| 47/50 [00:25<00:01,  1.89it/s] 96%|█████████▌| 48/50 [00:25<00:00,  2.07it/s] 98%|█████████▊| 49/50 [00:26<00:00,  1.67it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=45, grad_norm: 64.328140, grad_max: 3.196981
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=46, grad_norm: 94.472176, grad_max: 7.075995
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=47, grad_norm: 69.970306, grad_max: 4.846509
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=48, grad_norm: 26.478935, grad_max: 2.404971
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=49, grad_norm: 6.120386, grad_max: 0.535983
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:27<00:00,  1.48it/s]100%|██████████| 50/50 [00:27<00:00,  1.82it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:27,  1.74it/s]  6%|▌         | 3/50 [00:01<00:22,  2.07it/s]  8%|▊         | 4/50 [00:02<00:29,  1.58it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=0, grad_norm: 92.322716, grad_max: 2.177856
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=1, grad_norm: 53.957207, grad_max: 1.395626
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=2, grad_norm: 42.264915, grad_max: 0.935934
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=47): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=3, grad_norm: 73.587334, grad_max: 3.230957
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=47): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0> 10%|█         | 5/50 [00:02<00:24,  1.86it/s] 12%|█▏        | 6/50 [00:03<00:21,  2.07it/s] 14%|█▍        | 7/50 [00:04<00:26,  1.65it/s] 16%|█▌        | 8/50 [00:04<00:22,  1.88it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=4, grad_norm: 32.687744, grad_max: 0.749307
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=5, grad_norm: 26.578417, grad_max: 0.666949
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=44): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=6, grad_norm: 27.505243, grad_max: 1.741974
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=44): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=7, grad_norm: 23.146685, grad_max: 0.509828
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=8, grad_norm: 18.281544, grad_max: 0.451355
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410> 18%|█▊        | 9/50 [00:04<00:19,  2.07it/s] 20%|██        | 10/50 [00:05<00:23,  1.67it/s] 22%|██▏       | 11/50 [00:06<00:20,  1.89it/s] 24%|██▍       | 12/50 [00:06<00:18,  2.07it/s] 26%|██▌       | 13/50 [00:07<00:22,  1.68it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=41): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=9, grad_norm: 2.945290, grad_max: 0.193050
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=41): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=10, grad_norm: 21.041529, grad_max: 0.408557
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=11, grad_norm: 16.234379, grad_max: 0.349660
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=12, grad_norm: 2.584986, grad_max: 0.227477
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410> 28%|██▊       | 14/50 [00:07<00:19,  1.89it/s] 30%|███       | 15/50 [00:08<00:16,  2.07it/s] 32%|███▏      | 16/50 [00:08<00:20,  1.68it/s] 34%|███▍      | 17/50 [00:09<00:17,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=13, grad_norm: 40.306942, grad_max: 0.782356
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=14, grad_norm: 24.929712, grad_max: 0.605100
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=15, grad_norm: 1.814456, grad_max: 0.071373
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=16, grad_norm: 61.505390, grad_max: 1.090203
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=17, grad_norm: 39.991825, grad_max: 0.954635
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850> 36%|███▌      | 18/50 [00:09<00:15,  2.07it/s] 38%|███▊      | 19/50 [00:10<00:18,  1.68it/s] 40%|████      | 20/50 [00:10<00:15,  1.89it/s] 42%|████▏     | 21/50 [00:11<00:13,  2.07it/s] 44%|████▍     | 22/50 [00:12<00:16,  1.68it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=32): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=18, grad_norm: 0.229143, grad_max: 0.010764
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=32): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=19, grad_norm: 68.413338, grad_max: 1.538758
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=30): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] t=20, grad_norm: 55.188145, grad_max: 0.923155
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=30): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=29): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=21, grad_norm: 6.724020, grad_max: 0.530709
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=29): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0> 46%|████▌     | 23/50 [00:12<00:14,  1.89it/s] 48%|████▊     | 24/50 [00:12<00:12,  2.07it/s] 50%|█████     | 25/50 [00:13<00:14,  1.68it/s] 52%|█████▏    | 26/50 [00:14<00:12,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=22, grad_norm: 57.172935, grad_max: 0.961620
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=23, grad_norm: 41.596878, grad_max: 0.918956
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=24, grad_norm: 1.354380, grad_max: 0.092877
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=25, grad_norm: 65.514320, grad_max: 1.222185
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=26, grad_norm: 48.434471, grad_max: 0.894443
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0> 54%|█████▍    | 27/50 [00:14<00:11,  2.07it/s] 56%|█████▌    | 28/50 [00:15<00:13,  1.68it/s] 58%|█████▊    | 29/50 [00:15<00:11,  1.89it/s] 60%|██████    | 30/50 [00:16<00:09,  2.07it/s] 62%|██████▏   | 31/50 [00:16<00:11,  1.68it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=23): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=27, grad_norm: 0.220597, grad_max: 0.012404
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=23): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=28, grad_norm: 74.308350, grad_max: 2.244627
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=29, grad_norm: 53.793987, grad_max: 1.359824
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=30, grad_norm: 23.594881, grad_max: 1.617892
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0> 64%|██████▍   | 32/50 [00:17<00:09,  1.89it/s] 66%|██████▌   | 33/50 [00:17<00:08,  2.07it/s] 68%|██████▊   | 34/50 [00:18<00:09,  1.68it/s] 70%|███████   | 35/50 [00:18<00:07,  1.89it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=31, grad_norm: 90.856667, grad_max: 2.394485
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=32, grad_norm: 61.891647, grad_max: 2.338357
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=17): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450032410>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450032410>
[DeepCache DPS Debug] t=33, grad_norm: 17.839312, grad_max: 1.876963
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=17): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=34, grad_norm: 135.941895, grad_max: 3.385085
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=35, grad_norm: 85.576714, grad_max: 3.126240
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850> 72%|███████▏  | 36/50 [00:19<00:06,  2.07it/s] 74%|███████▍  | 37/50 [00:20<00:07,  1.68it/s] 76%|███████▌  | 38/50 [00:20<00:06,  1.89it/s] 78%|███████▊  | 39/50 [00:20<00:05,  2.07it/s] 80%|████████  | 40/50 [00:21<00:05,  1.68it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=36, grad_norm: 31.653587, grad_max: 4.059135
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450022050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450022050>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=37, grad_norm: 172.280411, grad_max: 3.850253
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450023610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450023610>
[DeepCache DPS Debug] t=38, grad_norm: 118.959045, grad_max: 2.579799
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=11): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=39, grad_norm: 25.309238, grad_max: 1.666707
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=11): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=10): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f2450033d00> 82%|████████▏ | 41/50 [00:22<00:04,  1.89it/s] 84%|████████▍ | 42/50 [00:22<00:03,  2.07it/s] 86%|████████▌ | 43/50 [00:23<00:04,  1.68it/s] 88%|████████▊ | 44/50 [00:23<00:03,  1.89it/s] 90%|█████████ | 45/50 [00:24<00:02,  2.07it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f2450033d00>
[DeepCache DPS Debug] t=40, grad_norm: 186.898041, grad_max: 4.768811
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=10): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=41, grad_norm: 105.755295, grad_max: 3.298577
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=8): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=42, grad_norm: 51.726875, grad_max: 4.006016
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=8): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=43, grad_norm: 193.924652, grad_max: 6.805777
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=44, grad_norm: 92.881248, grad_max: 3.555307
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=3, clean_step=0 92%|█████████▏| 46/50 [00:24<00:02,  1.68it/s] 94%|█████████▍| 47/50 [00:25<00:01,  1.89it/s] 96%|█████████▌| 48/50 [00:25<00:00,  2.07it/s] 98%|█████████▊| 49/50 [00:26<00:00,  1.68it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=45, grad_norm: 64.292511, grad_max: 4.842372
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
[DeepCache DPS Debug] t=46, grad_norm: 117.186935, grad_max: 5.854307
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500326e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500326e0>
[DeepCache DPS Debug] t=47, grad_norm: 37.401009, grad_max: 1.684191
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=3, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020fd00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020fd00>
[DeepCache DPS Debug] t=48, grad_norm: 19.825661, grad_max: 1.553240
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=3, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=3, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=3, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f24500334c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f24500334c0>
[DeepCache DPS Debug] t=49, grad_norm: 4.823068, grad_max: 0.390656
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None100%|██████████| 50/50 [00:27<00:00,  1.48it/s]100%|██████████| 50/50 [00:27<00:00,  1.82it/s]

[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=3, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f245020c850>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f245020c850>
save npy to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_3_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0/images.npy
Saving images to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_3_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0/images.png
