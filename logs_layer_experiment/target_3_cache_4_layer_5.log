/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:441: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
attention mode is flash
logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_4_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0
Logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_4_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0
Arguments: Arguments(data_type='image', dataset='cifar10', task='label_guidance', image_size=32, include_charges=False, generators_path='./pretrained_models/EDMsecond/generative_model_ema.npy', args_generators_path='./pretrained_models/EDMsecond/args.pickle', energy_path='./pretrained_models/tf_predict_mu/model_ema_2000.npy', args_energy_path='./pretrained_models/tf_predict_mu/args_2000.pickle', classifiers_path='./pretrained_models/evaluate_mu/best_checkpoint.npy', args_classifiers_path='./pretrained_models/evaluate_mu/args.pickle', clip_scale=100, audio_length=10, volume_factor=80.0, motion_prompt='walk', radius=3.0, model_name_or_path='openai_cifar10.pt', model_type='unet', use_deepcache=True, cache_interval=4, cache_block_id=5, skip_mode='uniform', clean_step=0, vae='mse', train_steps=1000, inference_steps=50, eta=1.0, clip_x0=True, clip_sample_range=1.0, seed=42, device=device(type='cuda'), logging_dir='/home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_4_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0', logger=None, per_sample_batch_size=128, num_samples=1024, batch_id=0, guidance_name='dps', guider='classifier', target='3', recur_steps=1, iter_steps=4, guidance_strength=1.0, guidance_scale=1.0, start_gradient=50, use_early_exit=False, early_exit_layer=None, use_time_based_early_exit=False, time_early_exit_mapping=None, rho=1.0, mu=0.25, sigma=0.001, eps_bsz=1, rho_schedule='increase', mu_schedule='increase', sigma_schedule='decrease', guide_network='resnet_cifar10.pt', classifier_image_size=224, eval_batch_size=512, logging_resolution=512, log_suffix='', log_traj=False, max_show_images=256, check_done=False, wandb=False, wandb_project='trail', wandb_name=None, wandb_entity='llm-selection', saved_file=None, sort_metric=None, topk=5, output_path='vis_molecule', output_dir=None, max_n_samples=10000000000, bon_rate=1, bon_guidance=None)
[DeepCache] DeepCacheDPSGuidance 초기화: use_deepcache=True, cache_interval=4
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:56,  1.14s/it]  4%|▍         | 2/50 [00:01<00:32,  1.49it/s]  6%|▌         | 3/50 [00:01<00:24,  1.94it/s]  8%|▊         | 4/50 [00:02<00:20,  2.26it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache] DeepCache UNet 초기화: cache_interval=4, cache_block_id=5, clean_step=0
[DeepCache Debug] 첫 번째 실행: start_timestep=50
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570bb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570bb0>
[DeepCache DPS Debug] t=0, grad_norm: 91.953415, grad_max: 2.087463
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570a60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570a60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570af0>
[DeepCache DPS Debug] t=1, grad_norm: 53.641651, grad_max: 1.212076
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570b20>
[DeepCache DPS Debug] t=2, grad_norm: 42.187721, grad_max: 1.246229
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570d30>
[DeepCache DPS Debug] t=3, grad_norm: 34.754745, grad_max: 0.992391
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570b20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05710f0> 10%|█         | 5/50 [00:02<00:25,  1.79it/s] 12%|█▏        | 6/50 [00:03<00:21,  2.08it/s] 14%|█▍        | 7/50 [00:03<00:18,  2.32it/s] 16%|█▌        | 8/50 [00:03<00:16,  2.50it/s] 18%|█▊        | 9/50 [00:04<00:21,  1.95it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05710f0>
[DeepCache DPS Debug] t=4, grad_norm: 56.360600, grad_max: 1.866421
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571840>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571840>
[DeepCache DPS Debug] t=5, grad_norm: 29.015900, grad_max: 0.670055
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570a00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571960>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571960>
[DeepCache DPS Debug] t=6, grad_norm: 22.897369, grad_max: 0.511402
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571840>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571840>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571720>
[DeepCache DPS Debug] t=7, grad_norm: 19.221188, grad_max: 0.388421
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571960>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571960>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570e20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570e20>
[DeepCache DPS Debug] t=8, grad_norm: 5.977970, grad_max: 0.678257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:04<00:18,  2.19it/s] 22%|██▏       | 11/50 [00:05<00:16,  2.39it/s] 24%|██▍       | 12/50 [00:05<00:14,  2.55it/s] 26%|██▌       | 13/50 [00:06<00:18,  1.98it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571b40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571b40>
[DeepCache DPS Debug] t=9, grad_norm: 20.842163, grad_max: 0.434477
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571b70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571b70>
[DeepCache DPS Debug] t=10, grad_norm: 15.941548, grad_max: 0.344166
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571b40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571b40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571990>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571990>
[DeepCache DPS Debug] t=11, grad_norm: 13.891798, grad_max: 0.344562
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571b70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571b70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9de0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9de0>
[DeepCache DPS Debug] t=12, grad_norm: 1.689039, grad_max: 0.121614
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571990>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571990>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570c10> 28%|██▊       | 14/50 [00:06<00:16,  2.21it/s] 30%|███       | 15/50 [00:07<00:14,  2.40it/s] 32%|███▏      | 16/50 [00:07<00:13,  2.56it/s] 34%|███▍      | 17/50 [00:08<00:19,  1.70it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570c10>
[DeepCache DPS Debug] t=13, grad_norm: 39.923420, grad_max: 0.797481
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572080>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572080>
[DeepCache DPS Debug] t=14, grad_norm: 25.183762, grad_max: 0.592432
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0570c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0570c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571630>
[DeepCache DPS Debug] t=15, grad_norm: 20.383011, grad_max: 0.444051
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572080>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572080>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9c00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9c00>
[DeepCache DPS Debug] t=16, grad_norm: 2.712865, grad_max: 0.117334
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9cc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9cc0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9bd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9bd0>
[DeepCache DPS Debug] t=17, grad_norm: 68.542641, grad_max: 1.175872
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9b10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9b10> 36%|███▌      | 18/50 [00:08<00:16,  1.96it/s] 38%|███▊      | 19/50 [00:09<00:14,  2.19it/s] 40%|████      | 20/50 [00:09<00:12,  2.38it/s] 42%|████▏     | 21/50 [00:10<00:15,  1.91it/s] 44%|████▍     | 22/50 [00:10<00:13,  2.15it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca200>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca200>
[DeepCache DPS Debug] t=18, grad_norm: 46.463657, grad_max: 0.817312
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9bd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9bd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca2c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca2c0>
[DeepCache DPS Debug] t=19, grad_norm: 39.381855, grad_max: 0.764259
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca200>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca200>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca470>
[DeepCache DPS Debug] t=20, grad_norm: 0.453901, grad_max: 0.020889
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9de0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9de0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca5c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca5c0>
[DeepCache DPS Debug] t=21, grad_norm: 56.581772, grad_max: 1.011870
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9a80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9a80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:10<00:11,  2.34it/s] 48%|████▊     | 24/50 [00:11<00:10,  2.51it/s] 50%|█████     | 25/50 [00:11<00:12,  1.96it/s] 52%|█████▏    | 26/50 [00:12<00:10,  2.19it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca800>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca800>
[DeepCache DPS Debug] t=22, grad_norm: 46.598995, grad_max: 0.888865
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca5c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca5c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] t=23, grad_norm: 41.838203, grad_max: 0.908808
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca800>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca800>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca2f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca2f0>
[DeepCache DPS Debug] t=24, grad_norm: 2.309902, grad_max: 0.137906
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c93c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c93c0>
[DeepCache DPS Debug] t=25, grad_norm: 65.996651, grad_max: 1.385111
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca2c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca2c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca8f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca8f0>
[DeepCache DPS Debug] t=26, grad_norm: 48.803734, grad_max: 0.906636
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c93c0> 54%|█████▍    | 27/50 [00:12<00:09,  2.39it/s] 56%|█████▌    | 28/50 [00:12<00:08,  2.54it/s] 58%|█████▊    | 29/50 [00:13<00:10,  1.97it/s] 60%|██████    | 30/50 [00:14<00:09,  2.20it/s] 62%|██████▏   | 31/50 [00:14<00:07,  2.39it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c93c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9420>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9420>
[DeepCache DPS Debug] t=27, grad_norm: 40.628525, grad_max: 0.746072
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca8f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca8f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca5f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca5f0>
[DeepCache DPS Debug] t=28, grad_norm: 8.918532, grad_max: 0.909108
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca380>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca380>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9ed0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9ed0>
[DeepCache DPS Debug] t=29, grad_norm: 80.073250, grad_max: 1.838608
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cad70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cad70>
[DeepCache DPS Debug] t=30, grad_norm: 55.724880, grad_max: 1.235205
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9ed0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9ed0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:14<00:07,  2.54it/s] 66%|██████▌   | 33/50 [00:15<00:08,  1.96it/s] 68%|██████▊   | 34/50 [00:15<00:07,  2.19it/s] 70%|███████   | 35/50 [00:16<00:06,  2.37it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca4d0>
[DeepCache DPS Debug] t=31, grad_norm: 43.969715, grad_max: 0.717587
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cad70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cad70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca7a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca7a0>
[DeepCache DPS Debug] t=32, grad_norm: 18.957695, grad_max: 1.727734
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9bd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9bd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca860>
[DeepCache DPS Debug] t=33, grad_norm: 109.669868, grad_max: 2.597098
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9420>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9420>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cb160>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cb160>
[DeepCache DPS Debug] t=34, grad_norm: 71.742470, grad_max: 1.751696
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca860>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca860>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9b10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9b10>
[DeepCache DPS Debug] t=35, grad_norm: 50.412197, grad_max: 2.310142
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cb160> 72%|███████▏  | 36/50 [00:16<00:05,  2.52it/s] 74%|███████▍  | 37/50 [00:17<00:06,  1.95it/s] 76%|███████▌  | 38/50 [00:17<00:05,  2.18it/s] 78%|███████▊  | 39/50 [00:18<00:04,  2.35it/s] 80%|████████  | 40/50 [00:18<00:03,  2.51it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cb160>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca8c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca8c0>
[DeepCache DPS Debug] t=36, grad_norm: 26.659075, grad_max: 2.433897
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca290>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca290>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cad10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cad10>
[DeepCache DPS Debug] t=37, grad_norm: 179.674072, grad_max: 5.428383
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca4d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca4d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cb610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cb610>
[DeepCache DPS Debug] t=38, grad_norm: 112.202782, grad_max: 3.304343
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cad10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cad10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9a80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9a80>
[DeepCache DPS Debug] t=39, grad_norm: 80.765099, grad_max: 2.842764
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cb610>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cb610>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:19<00:04,  1.94it/s] 84%|████████▍ | 42/50 [00:19<00:03,  2.16it/s] 86%|████████▌ | 43/50 [00:19<00:02,  2.33it/s] 88%|████████▊ | 44/50 [00:20<00:02,  2.48it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3b4c1116c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3b4c1116c0>
[DeepCache DPS Debug] t=40, grad_norm: 51.450737, grad_max: 2.683954
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f3b4c1103a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f3b4c1103a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca740>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca740>
[DeepCache DPS Debug] t=41, grad_norm: 204.832779, grad_max: 5.755099
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cab60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cab60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cb1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cb1c0>
[DeepCache DPS Debug] t=42, grad_norm: 129.886353, grad_max: 6.197323
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca740>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca740>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] t=43, grad_norm: 91.637642, grad_max: 4.063808
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cb1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cb1c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=44, grad_norm: 89.487442, grad_max: 5.650356
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9ab0> 90%|█████████ | 45/50 [00:20<00:02,  1.91it/s] 92%|█████████▏| 46/50 [00:21<00:01,  2.13it/s] 94%|█████████▍| 47/50 [00:21<00:01,  2.31it/s] 96%|█████████▌| 48/50 [00:22<00:00,  2.45it/s] 98%|█████████▊| 49/50 [00:22<00:00,  1.90it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9ab0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb50>
[DeepCache DPS Debug] t=45, grad_norm: 121.544479, grad_max: 4.232553
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9b10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9b10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cb2b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cb2b0>
[DeepCache DPS Debug] t=46, grad_norm: 56.724609, grad_max: 2.450249
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] t=47, grad_norm: 34.057186, grad_max: 2.510514
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cb2b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cb2b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] t=48, grad_norm: 4.445051, grad_max: 0.392911
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cb700>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cb700>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>100%|██████████| 50/50 [00:23<00:00,  1.64it/s]100%|██████████| 50/50 [00:23<00:00,  2.12it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] t=49, grad_norm: 1.132925, grad_max: 0.142149
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9a50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9a50>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:39,  1.23it/s]  4%|▍         | 2/50 [00:01<00:25,  1.85it/s]  6%|▌         | 3/50 [00:01<00:21,  2.20it/s]  8%|▊         | 4/50 [00:01<00:19,  2.41it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] t=0, grad_norm: 88.771339, grad_max: 2.639816
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cae60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cae60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] t=1, grad_norm: 54.254025, grad_max: 1.140449
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=2, grad_norm: 42.544361, grad_max: 1.060244
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] t=3, grad_norm: 34.968437, grad_max: 0.856247
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00> 10%|█         | 5/50 [00:02<00:25,  1.80it/s] 12%|█▏        | 6/50 [00:03<00:21,  2.05it/s] 14%|█▍        | 7/50 [00:03<00:19,  2.25it/s] 16%|█▌        | 8/50 [00:03<00:17,  2.40it/s] 18%|█▊        | 9/50 [00:04<00:22,  1.84it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] t=4, grad_norm: 57.557316, grad_max: 2.935240
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] t=5, grad_norm: 28.914160, grad_max: 0.710807
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] t=6, grad_norm: 23.192883, grad_max: 0.571975
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] t=7, grad_norm: 19.120756, grad_max: 0.430881
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] t=8, grad_norm: 4.069370, grad_max: 0.282029
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:04<00:19,  2.05it/s] 22%|██▏       | 11/50 [00:05<00:17,  2.23it/s] 24%|██▍       | 12/50 [00:05<00:15,  2.38it/s] 26%|██▌       | 13/50 [00:06<00:20,  1.84it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=9, grad_norm: 21.085201, grad_max: 0.398985
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] t=10, grad_norm: 15.982492, grad_max: 0.429001
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] t=11, grad_norm: 13.937809, grad_max: 0.337806
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] t=12, grad_norm: 2.282806, grad_max: 0.110776
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560> 28%|██▊       | 14/50 [00:06<00:17,  2.05it/s] 30%|███       | 15/50 [00:07<00:15,  2.23it/s] 32%|███▏      | 16/50 [00:07<00:14,  2.36it/s] 34%|███▍      | 17/50 [00:08<00:18,  1.83it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] t=13, grad_norm: 39.803013, grad_max: 0.824252
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] t=14, grad_norm: 24.136160, grad_max: 0.545881
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] t=15, grad_norm: 20.083372, grad_max: 0.470388
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=16, grad_norm: 2.964883, grad_max: 0.145127
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] t=17, grad_norm: 72.286560, grad_max: 1.151836
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00> 36%|███▌      | 18/50 [00:08<00:15,  2.03it/s] 38%|███▊      | 19/50 [00:09<00:14,  2.21it/s] 40%|████      | 20/50 [00:09<00:12,  2.35it/s] 42%|████▏     | 21/50 [00:10<00:15,  1.82it/s] 44%|████▍     | 22/50 [00:10<00:13,  2.03it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] t=18, grad_norm: 47.513859, grad_max: 0.933187
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] t=19, grad_norm: 40.042725, grad_max: 0.715189
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] t=20, grad_norm: 1.989441, grad_max: 0.068860
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] t=21, grad_norm: 56.809570, grad_max: 0.949682
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:11<00:12,  2.20it/s] 48%|████▊     | 24/50 [00:11<00:11,  2.34it/s] 50%|█████     | 25/50 [00:12<00:13,  1.82it/s] 52%|█████▏    | 26/50 [00:12<00:11,  2.02it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] t=22, grad_norm: 46.142056, grad_max: 0.983089
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=23, grad_norm: 40.500713, grad_max: 0.941776
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] t=24, grad_norm: 1.255555, grad_max: 0.092559
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] t=25, grad_norm: 66.586067, grad_max: 1.339063
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] t=26, grad_norm: 48.557518, grad_max: 0.856982
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560> 54%|█████▍    | 27/50 [00:12<00:10,  2.20it/s] 56%|█████▌    | 28/50 [00:13<00:09,  2.34it/s] 58%|█████▊    | 29/50 [00:14<00:11,  1.82it/s] 60%|██████    | 30/50 [00:14<00:09,  2.03it/s] 62%|██████▏   | 31/50 [00:14<00:08,  2.20it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] t=27, grad_norm: 41.503113, grad_max: 1.059649
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] t=28, grad_norm: 4.395289, grad_max: 0.345201
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] t=29, grad_norm: 79.311684, grad_max: 1.980796
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=30, grad_norm: 55.143818, grad_max: 1.376008
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:15<00:07,  2.35it/s] 66%|██████▌   | 33/50 [00:16<00:09,  1.82it/s] 68%|██████▊   | 34/50 [00:16<00:07,  2.03it/s] 70%|███████   | 35/50 [00:16<00:06,  2.20it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] t=31, grad_norm: 44.935471, grad_max: 0.785815
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] t=32, grad_norm: 33.838799, grad_max: 2.982368
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] t=33, grad_norm: 113.681969, grad_max: 2.373144
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] t=34, grad_norm: 74.051819, grad_max: 1.821169
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] t=35, grad_norm: 47.484787, grad_max: 1.508513
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0> 72%|███████▏  | 36/50 [00:17<00:05,  2.34it/s] 74%|███████▍  | 37/50 [00:18<00:07,  1.82it/s] 76%|███████▌  | 38/50 [00:18<00:05,  2.03it/s] 78%|███████▊  | 39/50 [00:18<00:04,  2.20it/s] 80%|████████  | 40/50 [00:19<00:04,  2.34it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] t=36, grad_norm: 24.632793, grad_max: 2.498125
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=37, grad_norm: 172.550446, grad_max: 4.323816
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] t=38, grad_norm: 103.188133, grad_max: 2.719846
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8a00>
[DeepCache DPS Debug] t=39, grad_norm: 79.203217, grad_max: 2.147130
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:19<00:04,  1.82it/s] 84%|████████▍ | 42/50 [00:20<00:03,  2.03it/s] 86%|████████▌ | 43/50 [00:20<00:03,  2.20it/s] 88%|████████▊ | 44/50 [00:21<00:02,  2.35it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] t=40, grad_norm: 45.384769, grad_max: 2.924476
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca560>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca560>
[DeepCache DPS Debug] t=41, grad_norm: 192.975082, grad_max: 4.632434
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca530>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca530>
[DeepCache DPS Debug] t=42, grad_norm: 112.717674, grad_max: 3.394917
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05caec0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05caec0>
[DeepCache DPS Debug] t=43, grad_norm: 88.054878, grad_max: 3.670308
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=44, grad_norm: 80.179001, grad_max: 5.337825
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05cbb20> 90%|█████████ | 45/50 [00:21<00:02,  1.82it/s] 92%|█████████▏| 46/50 [00:22<00:01,  2.02it/s] 94%|█████████▍| 47/50 [00:22<00:01,  2.19it/s] 96%|█████████▌| 48/50 [00:22<00:00,  2.33it/s] 98%|█████████▊| 49/50 [00:23<00:00,  1.81it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05cbb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39f516b970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39f516b970>
[DeepCache DPS Debug] t=45, grad_norm: 99.807655, grad_max: 5.234326
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39f88c4d90>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39f88c4d90>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=46, grad_norm: 51.017792, grad_max: 2.097314
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9780>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9780>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca500>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca500>
[DeepCache DPS Debug] t=47, grad_norm: 30.727308, grad_max: 2.499364
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c93c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c93c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c93c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c93c0>
[DeepCache DPS Debug] t=48, grad_norm: 15.972923, grad_max: 1.439574
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9930>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9930>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9930>100%|██████████| 50/50 [00:24<00:00,  1.56it/s]100%|██████████| 50/50 [00:24<00:00,  2.03it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9930>
[DeepCache DPS Debug] t=49, grad_norm: 6.674483, grad_max: 0.769984
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:27,  1.77it/s]  6%|▌         | 3/50 [00:01<00:22,  2.11it/s]  8%|▊         | 4/50 [00:01<00:19,  2.32it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] t=0, grad_norm: 91.347687, grad_max: 2.414215
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=1, grad_norm: 53.987648, grad_max: 1.295521
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c93c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c93c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0513580>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0513580>
[DeepCache DPS Debug] t=2, grad_norm: 42.378559, grad_max: 0.889150
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05126e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05126e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=3, grad_norm: 34.977657, grad_max: 0.906795
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220> 10%|█         | 5/50 [00:02<00:26,  1.72it/s] 12%|█▏        | 6/50 [00:03<00:22,  1.97it/s] 14%|█▍        | 7/50 [00:03<00:19,  2.17it/s] 16%|█▌        | 8/50 [00:03<00:18,  2.32it/s] 18%|█▊        | 9/50 [00:04<00:22,  1.78it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] t=4, grad_norm: 57.141949, grad_max: 3.337433
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] t=5, grad_norm: 29.243420, grad_max: 0.622257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] t=6, grad_norm: 23.599970, grad_max: 0.561943
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=7, grad_norm: 19.312832, grad_max: 0.452788
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=8, grad_norm: 12.599382, grad_max: 1.322067
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:20,  2.00it/s] 22%|██▏       | 11/50 [00:05<00:17,  2.17it/s] 24%|██▍       | 12/50 [00:05<00:16,  2.32it/s] 26%|██▌       | 13/50 [00:06<00:20,  1.79it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] t=9, grad_norm: 20.799957, grad_max: 0.483179
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=10, grad_norm: 15.699429, grad_max: 0.357010
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] t=11, grad_norm: 13.761527, grad_max: 0.311006
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] t=12, grad_norm: 2.405719, grad_max: 0.177820
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570> 28%|██▊       | 14/50 [00:07<00:17,  2.00it/s] 30%|███       | 15/50 [00:07<00:16,  2.17it/s] 32%|███▏      | 16/50 [00:07<00:14,  2.31it/s] 34%|███▍      | 17/50 [00:08<00:18,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] t=13, grad_norm: 39.848087, grad_max: 0.875182
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=14, grad_norm: 24.716396, grad_max: 0.635815
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=15, grad_norm: 20.263016, grad_max: 0.379464
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] t=16, grad_norm: 2.607618, grad_max: 0.095433
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=17, grad_norm: 69.225952, grad_max: 1.388450
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220> 36%|███▌      | 18/50 [00:09<00:16,  2.00it/s] 38%|███▊      | 19/50 [00:09<00:14,  2.17it/s] 40%|████      | 20/50 [00:09<00:12,  2.31it/s] 42%|████▏     | 21/50 [00:10<00:16,  1.79it/s] 44%|████▍     | 22/50 [00:10<00:14,  2.00it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] t=18, grad_norm: 47.013329, grad_max: 0.981529
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] t=19, grad_norm: 39.528568, grad_max: 0.728340
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] t=20, grad_norm: 0.291958, grad_max: 0.011592
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=21, grad_norm: 57.028111, grad_max: 1.173542
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:11<00:12,  2.17it/s] 48%|████▊     | 24/50 [00:11<00:11,  2.31it/s] 50%|█████     | 25/50 [00:12<00:13,  1.79it/s] 52%|█████▏    | 26/50 [00:12<00:12,  2.00it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=22, grad_norm: 45.299698, grad_max: 0.930390
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] t=23, grad_norm: 41.047501, grad_max: 0.908730
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=24, grad_norm: 12.673511, grad_max: 0.769955
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] t=25, grad_norm: 65.586151, grad_max: 1.402026
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] t=26, grad_norm: 48.869312, grad_max: 0.785108
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570> 54%|█████▍    | 27/50 [00:13<00:10,  2.17it/s] 56%|█████▌    | 28/50 [00:13<00:09,  2.31it/s] 58%|█████▊    | 29/50 [00:14<00:11,  1.79it/s] 60%|██████    | 30/50 [00:14<00:10,  1.99it/s] 62%|██████▏   | 31/50 [00:15<00:08,  2.16it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] t=27, grad_norm: 41.397690, grad_max: 0.862754
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=28, grad_norm: 29.924965, grad_max: 2.434590
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=29, grad_norm: 81.793495, grad_max: 1.701745
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] t=30, grad_norm: 56.153675, grad_max: 1.006326
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:15<00:07,  2.30it/s] 66%|██████▌   | 33/50 [00:16<00:09,  1.79it/s] 68%|██████▊   | 34/50 [00:16<00:08,  1.99it/s] 70%|███████   | 35/50 [00:17<00:06,  2.17it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=31, grad_norm: 43.553604, grad_max: 0.814494
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] t=32, grad_norm: 19.017851, grad_max: 1.767576
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] t=33, grad_norm: 116.234116, grad_max: 2.976753
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] t=34, grad_norm: 76.583488, grad_max: 2.414026
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=35, grad_norm: 50.136955, grad_max: 1.411965
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630> 72%|███████▏  | 36/50 [00:17<00:06,  2.31it/s] 74%|███████▍  | 37/50 [00:18<00:07,  1.79it/s] 76%|███████▌  | 38/50 [00:18<00:06,  1.99it/s] 78%|███████▊  | 39/50 [00:19<00:05,  2.16it/s] 80%|████████  | 40/50 [00:19<00:04,  2.30it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=36, grad_norm: 24.679193, grad_max: 1.422244
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] t=37, grad_norm: 183.671280, grad_max: 4.298275
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=38, grad_norm: 114.530060, grad_max: 2.712513
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] t=39, grad_norm: 75.957390, grad_max: 2.047326
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:20<00:05,  1.79it/s] 84%|████████▍ | 42/50 [00:20<00:04,  1.99it/s] 86%|████████▌ | 43/50 [00:21<00:03,  2.16it/s] 88%|████████▊ | 44/50 [00:21<00:02,  2.30it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] t=40, grad_norm: 39.094044, grad_max: 2.854685
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] t=41, grad_norm: 188.007935, grad_max: 5.093939
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=42, grad_norm: 120.207314, grad_max: 3.477020
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=43, grad_norm: 81.337090, grad_max: 2.999545
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] t=44, grad_norm: 78.635963, grad_max: 3.952231
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710> 90%|█████████ | 45/50 [00:22<00:02,  1.79it/s] 92%|█████████▏| 46/50 [00:22<00:02,  1.99it/s] 94%|█████████▍| 47/50 [00:23<00:01,  2.16it/s] 96%|█████████▌| 48/50 [00:23<00:00,  2.30it/s] 98%|█████████▊| 49/50 [00:24<00:00,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=45, grad_norm: 112.981911, grad_max: 4.221200
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c8220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c8220>
[DeepCache DPS Debug] t=46, grad_norm: 59.371883, grad_max: 3.466926
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c91e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c91e0>
[DeepCache DPS Debug] t=47, grad_norm: 31.163822, grad_max: 1.679789
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9570>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9570>
[DeepCache DPS Debug] t=48, grad_norm: 13.469769, grad_max: 1.423784
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>100%|██████████| 50/50 [00:25<00:00,  1.55it/s]100%|██████████| 50/50 [00:25<00:00,  1.99it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=49, grad_norm: 0.060700, grad_max: 0.006592
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:27,  1.77it/s]  6%|▌         | 3/50 [00:01<00:22,  2.10it/s]  8%|▊         | 4/50 [00:01<00:19,  2.31it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=0, grad_norm: 92.867615, grad_max: 3.724731
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c98a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c98a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] t=1, grad_norm: 53.367424, grad_max: 1.689117
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=2, grad_norm: 43.027817, grad_max: 1.007257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=3, grad_norm: 35.276524, grad_max: 0.824075
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660> 10%|█         | 5/50 [00:02<00:26,  1.71it/s] 12%|█▏        | 6/50 [00:03<00:22,  1.96it/s] 14%|█▍        | 7/50 [00:03<00:19,  2.15it/s] 16%|█▌        | 8/50 [00:03<00:18,  2.30it/s] 18%|█▊        | 9/50 [00:04<00:23,  1.77it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=4, grad_norm: 63.018394, grad_max: 3.113770
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=5, grad_norm: 28.394049, grad_max: 0.656633
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=6, grad_norm: 22.954617, grad_max: 0.641054
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=7, grad_norm: 19.080122, grad_max: 0.394252
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] t=8, grad_norm: 5.319542, grad_max: 0.419865
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:20,  1.98it/s] 22%|██▏       | 11/50 [00:05<00:18,  2.16it/s] 24%|██▍       | 12/50 [00:05<00:16,  2.30it/s] 26%|██▌       | 13/50 [00:06<00:20,  1.78it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=9, grad_norm: 20.646198, grad_max: 0.398218
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=10, grad_norm: 15.491466, grad_max: 0.406061
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=11, grad_norm: 13.683699, grad_max: 0.323241
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=12, grad_norm: 1.362434, grad_max: 0.077754
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40> 28%|██▊       | 14/50 [00:07<00:18,  1.99it/s] 30%|███       | 15/50 [00:07<00:16,  2.16it/s] 32%|███▏      | 16/50 [00:07<00:14,  2.30it/s] 34%|███▍      | 17/50 [00:08<00:18,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=13, grad_norm: 40.327377, grad_max: 0.742145
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=14, grad_norm: 24.510181, grad_max: 0.500730
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=15, grad_norm: 20.088692, grad_max: 0.392861
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] t=16, grad_norm: 2.138173, grad_max: 0.133116
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=17, grad_norm: 69.273201, grad_max: 1.271748
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630> 36%|███▌      | 18/50 [00:09<00:16,  1.99it/s] 38%|███▊      | 19/50 [00:09<00:14,  2.17it/s] 40%|████      | 20/50 [00:09<00:13,  2.30it/s] 42%|████▏     | 21/50 [00:10<00:16,  1.79it/s] 44%|████▍     | 22/50 [00:11<00:14,  1.99it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=18, grad_norm: 49.166420, grad_max: 1.010206
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=19, grad_norm: 40.359600, grad_max: 0.754415
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=20, grad_norm: 1.205541, grad_max: 0.070719
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=21, grad_norm: 55.659130, grad_max: 0.899180
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:11<00:12,  2.16it/s] 48%|████▊     | 24/50 [00:11<00:11,  2.30it/s] 50%|█████     | 25/50 [00:12<00:14,  1.79it/s] 52%|█████▏    | 26/50 [00:12<00:12,  1.99it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=22, grad_norm: 46.694725, grad_max: 0.997253
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=23, grad_norm: 38.554226, grad_max: 0.674322
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] t=24, grad_norm: 6.575743, grad_max: 0.393421
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=25, grad_norm: 65.656693, grad_max: 1.844605
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=26, grad_norm: 48.572575, grad_max: 0.843137
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670> 54%|█████▍    | 27/50 [00:13<00:10,  2.16it/s] 56%|█████▌    | 28/50 [00:13<00:09,  2.30it/s] 58%|█████▊    | 29/50 [00:14<00:11,  1.78it/s] 60%|██████    | 30/50 [00:14<00:10,  1.98it/s] 62%|██████▏   | 31/50 [00:15<00:08,  2.16it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=27, grad_norm: 40.858757, grad_max: 0.554566
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=28, grad_norm: 39.394276, grad_max: 3.749307
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=29, grad_norm: 80.999596, grad_max: 1.984062
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=30, grad_norm: 56.650108, grad_max: 1.194157
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:15<00:07,  2.30it/s] 66%|██████▌   | 33/50 [00:16<00:09,  1.79it/s] 68%|██████▊   | 34/50 [00:16<00:08,  1.99it/s] 70%|███████   | 35/50 [00:17<00:06,  2.16it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=31, grad_norm: 44.425781, grad_max: 0.911146
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] t=32, grad_norm: 27.327829, grad_max: 1.688058
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=33, grad_norm: 112.637283, grad_max: 2.227566
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=34, grad_norm: 73.501328, grad_max: 1.902630
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=35, grad_norm: 50.701321, grad_max: 1.586235
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660> 72%|███████▏  | 36/50 [00:17<00:06,  2.30it/s] 74%|███████▍  | 37/50 [00:18<00:07,  1.79it/s] 76%|███████▌  | 38/50 [00:18<00:06,  1.99it/s] 78%|███████▊  | 39/50 [00:19<00:05,  2.16it/s] 80%|████████  | 40/50 [00:19<00:04,  2.30it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=36, grad_norm: 25.417488, grad_max: 2.337082
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=37, grad_norm: 178.014359, grad_max: 5.495652
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=38, grad_norm: 112.808594, grad_max: 3.084366
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=39, grad_norm: 80.250374, grad_max: 3.333546
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:20<00:05,  1.79it/s] 84%|████████▍ | 42/50 [00:20<00:04,  1.99it/s] 86%|████████▌ | 43/50 [00:21<00:03,  2.16it/s] 88%|████████▊ | 44/50 [00:21<00:02,  2.30it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] t=40, grad_norm: 47.785900, grad_max: 3.593419
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=41, grad_norm: 191.225189, grad_max: 4.699225
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=42, grad_norm: 116.205681, grad_max: 2.999726
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=43, grad_norm: 82.194221, grad_max: 4.471752
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=44, grad_norm: 87.284912, grad_max: 3.842798
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40> 90%|█████████ | 45/50 [00:22<00:02,  1.79it/s] 92%|█████████▏| 46/50 [00:22<00:02,  1.99it/s] 94%|█████████▍| 47/50 [00:23<00:01,  2.16it/s] 96%|█████████▌| 48/50 [00:23<00:00,  2.30it/s] 98%|█████████▊| 49/50 [00:24<00:00,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=45, grad_norm: 114.977486, grad_max: 4.755153
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=46, grad_norm: 52.464863, grad_max: 3.067211
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=47, grad_norm: 25.037666, grad_max: 1.231116
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] t=48, grad_norm: 16.199902, grad_max: 1.666056
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>100%|██████████| 50/50 [00:25<00:00,  1.54it/s]100%|██████████| 50/50 [00:25<00:00,  1.98it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=49, grad_norm: 16.720999, grad_max: 1.805474
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:27,  1.76it/s]  6%|▌         | 3/50 [00:01<00:22,  2.10it/s]  8%|▊         | 4/50 [00:01<00:19,  2.30it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9630>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9630>
[DeepCache DPS Debug] t=0, grad_norm: 93.343163, grad_max: 2.707886
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=1, grad_norm: 53.274075, grad_max: 1.664090
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c9660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c9660>
[DeepCache DPS Debug] t=2, grad_norm: 42.500965, grad_max: 1.023414
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=3, grad_norm: 35.067707, grad_max: 0.818305
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05ca710> 10%|█         | 5/50 [00:02<00:26,  1.71it/s] 12%|█▏        | 6/50 [00:03<00:22,  1.96it/s] 14%|█▍        | 7/50 [00:03<00:19,  2.15it/s] 16%|█▌        | 8/50 [00:03<00:18,  2.31it/s] 18%|█▊        | 9/50 [00:04<00:23,  1.78it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05ca710>
[DeepCache DPS Debug] t=4, grad_norm: 56.048027, grad_max: 1.754539
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=5, grad_norm: 28.198309, grad_max: 0.728285
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e05c97e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e05c97e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] t=6, grad_norm: 22.783648, grad_max: 0.456765
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=7, grad_norm: 19.189562, grad_max: 0.395748
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] t=8, grad_norm: 6.953933, grad_max: 0.736893
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:20,  1.99it/s] 22%|██▏       | 11/50 [00:05<00:18,  2.16it/s] 24%|██▍       | 12/50 [00:05<00:16,  2.29it/s] 26%|██▌       | 13/50 [00:06<00:21,  1.75it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=9, grad_norm: 20.785053, grad_max: 0.530624
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] t=10, grad_norm: 15.921825, grad_max: 0.345294
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] t=11, grad_norm: 13.644737, grad_max: 0.275010
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=12, grad_norm: 2.300568, grad_max: 0.188059
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940> 28%|██▊       | 14/50 [00:07<00:18,  1.95it/s] 30%|███       | 15/50 [00:07<00:16,  2.12it/s] 32%|███▏      | 16/50 [00:07<00:15,  2.25it/s] 34%|███▍      | 17/50 [00:08<00:18,  1.74it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] t=13, grad_norm: 41.105915, grad_max: 0.792567
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=14, grad_norm: 24.967648, grad_max: 0.475124
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=15, grad_norm: 20.571568, grad_max: 0.512053
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] t=16, grad_norm: 3.730416, grad_max: 0.153563
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=17, grad_norm: 68.740524, grad_max: 1.377258
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40> 36%|███▌      | 18/50 [00:09<00:16,  1.94it/s] 38%|███▊      | 19/50 [00:09<00:14,  2.10it/s] 40%|████      | 20/50 [00:09<00:13,  2.23it/s] 42%|████▏     | 21/50 [00:10<00:16,  1.74it/s] 44%|████▍     | 22/50 [00:11<00:14,  1.93it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] t=18, grad_norm: 47.269203, grad_max: 0.737600
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] t=19, grad_norm: 38.835255, grad_max: 0.630886
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=20, grad_norm: 0.694497, grad_max: 0.026981
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] t=21, grad_norm: 57.546577, grad_max: 1.527288
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:11<00:12,  2.10it/s] 48%|████▊     | 24/50 [00:11<00:11,  2.24it/s] 50%|█████     | 25/50 [00:12<00:14,  1.74it/s] 52%|█████▏    | 26/50 [00:13<00:12,  1.94it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=22, grad_norm: 47.395988, grad_max: 0.916671
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=23, grad_norm: 39.710987, grad_max: 0.855417
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] t=24, grad_norm: 4.152068, grad_max: 0.237392
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=25, grad_norm: 65.621910, grad_max: 1.142633
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] t=26, grad_norm: 48.633438, grad_max: 0.866390
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270> 54%|█████▍    | 27/50 [00:13<00:10,  2.10it/s] 56%|█████▌    | 28/50 [00:13<00:09,  2.24it/s] 58%|█████▊    | 29/50 [00:14<00:12,  1.74it/s] 60%|██████    | 30/50 [00:15<00:10,  1.94it/s] 62%|██████▏   | 31/50 [00:15<00:09,  2.11it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] t=27, grad_norm: 41.245628, grad_max: 0.809077
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=28, grad_norm: 48.548367, grad_max: 6.488840
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] t=29, grad_norm: 79.864243, grad_max: 1.732613
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=30, grad_norm: 56.251705, grad_max: 1.571654
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:15<00:08,  2.24it/s] 66%|██████▌   | 33/50 [00:16<00:09,  1.74it/s] 68%|██████▊   | 34/50 [00:17<00:08,  1.94it/s] 70%|███████   | 35/50 [00:17<00:07,  2.11it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=31, grad_norm: 43.606022, grad_max: 0.829129
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] t=32, grad_norm: 22.464439, grad_max: 1.199858
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=33, grad_norm: 111.198952, grad_max: 2.582941
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] t=34, grad_norm: 73.048180, grad_max: 1.972402
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] t=35, grad_norm: 47.310345, grad_max: 1.526185
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670> 72%|███████▏  | 36/50 [00:17<00:06,  2.24it/s] 74%|███████▍  | 37/50 [00:18<00:07,  1.74it/s] 76%|███████▌  | 38/50 [00:19<00:06,  1.94it/s] 78%|███████▊  | 39/50 [00:19<00:05,  2.11it/s] 80%|████████  | 40/50 [00:19<00:04,  2.24it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=36, grad_norm: 30.082056, grad_max: 2.635059
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] t=37, grad_norm: 176.456940, grad_max: 6.359709
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=38, grad_norm: 110.486465, grad_max: 2.892284
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=39, grad_norm: 80.089027, grad_max: 2.335875
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:20<00:05,  1.74it/s] 84%|████████▍ | 42/50 [00:21<00:04,  1.94it/s] 86%|████████▌ | 43/50 [00:21<00:03,  2.11it/s] 88%|████████▊ | 44/50 [00:21<00:02,  2.24it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] t=40, grad_norm: 57.473301, grad_max: 5.763260
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=41, grad_norm: 192.470108, grad_max: 5.904698
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] t=42, grad_norm: 111.853142, grad_max: 4.412079
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] t=43, grad_norm: 77.588448, grad_max: 2.770056
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=44, grad_norm: 76.115204, grad_max: 4.421175
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940> 90%|█████████ | 45/50 [00:22<00:02,  1.74it/s] 92%|█████████▏| 46/50 [00:23<00:02,  1.94it/s] 94%|█████████▍| 47/50 [00:23<00:01,  2.11it/s] 96%|█████████▌| 48/50 [00:23<00:00,  2.26it/s] 98%|█████████▊| 49/50 [00:24<00:00,  1.76it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] t=45, grad_norm: 114.858650, grad_max: 4.583405
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=46, grad_norm: 63.348927, grad_max: 3.199609
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=47, grad_norm: 23.956894, grad_max: 2.764329
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] t=48, grad_norm: 20.714251, grad_max: 4.597061
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>100%|██████████| 50/50 [00:25<00:00,  1.52it/s]100%|██████████| 50/50 [00:25<00:00,  1.95it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=49, grad_norm: 14.706860, grad_max: 1.921153
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:42,  1.16it/s]  4%|▍         | 2/50 [00:01<00:27,  1.74it/s]  6%|▌         | 3/50 [00:01<00:22,  2.07it/s]  8%|▊         | 4/50 [00:01<00:20,  2.28it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] t=0, grad_norm: 96.141022, grad_max: 2.672302
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] t=1, grad_norm: 53.468620, grad_max: 1.628814
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=2, grad_norm: 42.619167, grad_max: 0.834518
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] t=3, grad_norm: 35.501934, grad_max: 0.810360
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571e40> 10%|█         | 5/50 [00:02<00:26,  1.69it/s] 12%|█▏        | 6/50 [00:03<00:22,  1.94it/s] 14%|█▍        | 7/50 [00:03<00:20,  2.13it/s] 16%|█▌        | 8/50 [00:03<00:18,  2.28it/s] 18%|█▊        | 9/50 [00:04<00:23,  1.76it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571e40>
[DeepCache DPS Debug] t=4, grad_norm: 58.020878, grad_max: 2.624603
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=5, grad_norm: 28.766020, grad_max: 0.729937
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0571060>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0571060>
[DeepCache DPS Debug] t=6, grad_norm: 23.391369, grad_max: 0.515202
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=7, grad_norm: 19.298782, grad_max: 0.420698
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0572a40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0572a40>
[DeepCache DPS Debug] t=8, grad_norm: 4.874847, grad_max: 0.383781
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:20,  1.97it/s] 22%|██▏       | 11/50 [00:05<00:18,  2.15it/s] 24%|██▍       | 12/50 [00:05<00:16,  2.29it/s] 26%|██▌       | 13/50 [00:06<00:20,  1.78it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0269270>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0269270>
[DeepCache DPS Debug] t=9, grad_norm: 20.999325, grad_max: 0.471628
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027e260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027e260>
[DeepCache DPS Debug] t=10, grad_norm: 15.680227, grad_max: 0.348995
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026b940>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026b940>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=11, grad_norm: 13.814301, grad_max: 0.324967
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=12, grad_norm: 2.331459, grad_max: 0.108132
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670> 28%|██▊       | 14/50 [00:07<00:18,  1.98it/s] 30%|███       | 15/50 [00:07<00:16,  2.16it/s] 32%|███▏      | 16/50 [00:07<00:14,  2.30it/s] 34%|███▍      | 17/50 [00:08<00:18,  1.78it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=13, grad_norm: 40.518501, grad_max: 0.771399
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=14, grad_norm: 24.784264, grad_max: 0.530517
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=15, grad_norm: 20.543480, grad_max: 0.360034
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=16, grad_norm: 1.912899, grad_max: 0.066707
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=17, grad_norm: 70.136650, grad_max: 1.841731
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40> 36%|███▌      | 18/50 [00:09<00:16,  1.99it/s] 38%|███▊      | 19/50 [00:09<00:14,  2.16it/s] 40%|████      | 20/50 [00:09<00:13,  2.30it/s] 42%|████▏     | 21/50 [00:10<00:16,  1.79it/s] 44%|████▍     | 22/50 [00:11<00:14,  1.99it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=18, grad_norm: 47.921680, grad_max: 1.033339
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=19, grad_norm: 39.623260, grad_max: 0.697493
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=20, grad_norm: 2.379673, grad_max: 0.202334
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=21, grad_norm: 57.393227, grad_max: 0.996514
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:11<00:12,  2.16it/s] 48%|████▊     | 24/50 [00:11<00:11,  2.30it/s] 50%|█████     | 25/50 [00:12<00:14,  1.79it/s] 52%|█████▏    | 26/50 [00:13<00:12,  1.99it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=22, grad_norm: 48.094395, grad_max: 0.839964
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=23, grad_norm: 39.032169, grad_max: 0.986448
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=24, grad_norm: 2.732481, grad_max: 0.194269
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=25, grad_norm: 64.740585, grad_max: 1.211454
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=26, grad_norm: 47.393665, grad_max: 0.777544
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340> 54%|█████▍    | 27/50 [00:13<00:10,  2.16it/s] 56%|█████▌    | 28/50 [00:13<00:09,  2.30it/s] 58%|█████▊    | 29/50 [00:14<00:11,  1.79it/s] 60%|██████    | 30/50 [00:14<00:10,  1.99it/s] 62%|██████▏   | 31/50 [00:15<00:08,  2.16it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=27, grad_norm: 40.518200, grad_max: 0.645168
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=28, grad_norm: 21.546885, grad_max: 0.925123
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=29, grad_norm: 81.016953, grad_max: 4.391811
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=30, grad_norm: 55.153770, grad_max: 1.166049
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:15<00:07,  2.30it/s] 66%|██████▌   | 33/50 [00:16<00:09,  1.79it/s] 68%|██████▊   | 34/50 [00:16<00:08,  1.99it/s] 70%|███████   | 35/50 [00:17<00:06,  2.16it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=31, grad_norm: 43.528755, grad_max: 1.124723
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=32, grad_norm: 17.010836, grad_max: 1.064190
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=33, grad_norm: 115.971397, grad_max: 4.106323
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=34, grad_norm: 74.155563, grad_max: 2.018216
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=35, grad_norm: 47.123383, grad_max: 1.707462
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40> 72%|███████▏  | 36/50 [00:17<00:06,  2.30it/s] 74%|███████▍  | 37/50 [00:18<00:07,  1.78it/s] 76%|███████▌  | 38/50 [00:18<00:06,  1.99it/s] 78%|███████▊  | 39/50 [00:19<00:05,  2.16it/s] 80%|████████  | 40/50 [00:19<00:04,  2.30it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=36, grad_norm: 29.186964, grad_max: 2.079531
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=37, grad_norm: 184.572983, grad_max: 4.182419
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=38, grad_norm: 113.492928, grad_max: 2.800270
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=39, grad_norm: 83.967583, grad_max: 3.060215
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:20<00:05,  1.79it/s] 84%|████████▍ | 42/50 [00:20<00:04,  1.99it/s] 86%|████████▌ | 43/50 [00:21<00:03,  2.16it/s] 88%|████████▊ | 44/50 [00:21<00:02,  2.30it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=40, grad_norm: 56.765507, grad_max: 6.007839
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=41, grad_norm: 189.287506, grad_max: 5.420143
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=42, grad_norm: 102.908310, grad_max: 2.481253
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=43, grad_norm: 69.743370, grad_max: 2.504381
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=44, grad_norm: 82.981277, grad_max: 4.737897
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340> 90%|█████████ | 45/50 [00:22<00:02,  1.78it/s] 92%|█████████▏| 46/50 [00:22<00:02,  1.99it/s] 94%|█████████▍| 47/50 [00:23<00:01,  2.16it/s] 96%|█████████▌| 48/50 [00:23<00:00,  2.30it/s] 98%|█████████▊| 49/50 [00:24<00:00,  1.78it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=45, grad_norm: 104.059448, grad_max: 6.279307
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=46, grad_norm: 53.027897, grad_max: 2.284244
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=47, grad_norm: 34.586777, grad_max: 5.086793
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=48, grad_norm: 3.101394, grad_max: 0.272206
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>100%|██████████| 50/50 [00:25<00:00,  1.54it/s]100%|██████████| 50/50 [00:25<00:00,  1.98it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=49, grad_norm: 0.017597, grad_max: 0.001093
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.17it/s]  4%|▍         | 2/50 [00:01<00:27,  1.76it/s]  6%|▌         | 3/50 [00:01<00:22,  2.09it/s]  8%|▊         | 4/50 [00:01<00:20,  2.30it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=0, grad_norm: 90.056992, grad_max: 2.067078
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=1, grad_norm: 53.587574, grad_max: 1.332615
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=2, grad_norm: 41.949005, grad_max: 0.953062
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=3, grad_norm: 35.107037, grad_max: 0.953471
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40> 10%|█         | 5/50 [00:02<00:26,  1.71it/s] 12%|█▏        | 6/50 [00:03<00:22,  1.95it/s] 14%|█▍        | 7/50 [00:03<00:20,  2.15it/s] 16%|█▌        | 8/50 [00:03<00:18,  2.30it/s] 18%|█▊        | 9/50 [00:04<00:23,  1.77it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=4, grad_norm: 56.198059, grad_max: 2.722137
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=5, grad_norm: 29.004025, grad_max: 0.822006
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=6, grad_norm: 23.174032, grad_max: 0.526090
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=7, grad_norm: 19.356974, grad_max: 0.427660
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=8, grad_norm: 8.417273, grad_max: 0.905922
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:20,  1.98it/s] 22%|██▏       | 11/50 [00:05<00:18,  2.16it/s] 24%|██▍       | 12/50 [00:05<00:16,  2.30it/s] 26%|██▌       | 13/50 [00:06<00:20,  1.78it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=9, grad_norm: 20.874262, grad_max: 0.443174
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=10, grad_norm: 15.441565, grad_max: 0.342582
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] t=11, grad_norm: 13.543235, grad_max: 0.417804
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=12, grad_norm: 3.173260, grad_max: 0.184728
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340> 28%|██▊       | 14/50 [00:07<00:18,  1.99it/s] 30%|███       | 15/50 [00:07<00:16,  2.16it/s] 32%|███▏      | 16/50 [00:07<00:14,  2.30it/s] 34%|███▍      | 17/50 [00:08<00:18,  1.78it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=13, grad_norm: 40.588184, grad_max: 0.888048
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] t=14, grad_norm: 25.155315, grad_max: 0.509052
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0573670>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0573670>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=15, grad_norm: 20.413460, grad_max: 0.484954
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=16, grad_norm: 4.728882, grad_max: 0.275101
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=17, grad_norm: 69.825188, grad_max: 1.065939
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00> 36%|███▌      | 18/50 [00:09<00:16,  1.99it/s] 38%|███▊      | 19/50 [00:09<00:14,  2.16it/s] 40%|████      | 20/50 [00:09<00:13,  2.30it/s] 42%|████▏     | 21/50 [00:10<00:16,  1.79it/s] 44%|████▍     | 22/50 [00:11<00:14,  1.99it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=18, grad_norm: 46.988056, grad_max: 0.882183
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=19, grad_norm: 39.472157, grad_max: 0.704763
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=20, grad_norm: 2.525812, grad_max: 0.077724
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=21, grad_norm: 57.667221, grad_max: 1.025857
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:11<00:12,  2.16it/s] 48%|████▊     | 24/50 [00:11<00:11,  2.30it/s] 50%|█████     | 25/50 [00:12<00:13,  1.79it/s] 52%|█████▏    | 26/50 [00:12<00:12,  1.99it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=22, grad_norm: 47.896755, grad_max: 0.963662
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=23, grad_norm: 40.384949, grad_max: 0.703550
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=24, grad_norm: 8.072234, grad_max: 0.320767
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=25, grad_norm: 65.787956, grad_max: 1.203351
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=26, grad_norm: 48.428371, grad_max: 0.824035
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00> 54%|█████▍    | 27/50 [00:13<00:10,  2.16it/s] 56%|█████▌    | 28/50 [00:13<00:09,  2.30it/s] 58%|█████▊    | 29/50 [00:14<00:11,  1.79it/s] 60%|██████    | 30/50 [00:14<00:10,  1.98it/s] 62%|██████▏   | 31/50 [00:15<00:08,  2.16it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=27, grad_norm: 41.106621, grad_max: 0.923601
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=28, grad_norm: 11.390944, grad_max: 0.607380
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=29, grad_norm: 78.975410, grad_max: 2.295079
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=30, grad_norm: 56.393066, grad_max: 1.145258
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:15<00:07,  2.30it/s] 66%|██████▌   | 33/50 [00:16<00:09,  1.78it/s] 68%|██████▊   | 34/50 [00:16<00:08,  1.99it/s] 70%|███████   | 35/50 [00:17<00:06,  2.16it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=31, grad_norm: 43.620594, grad_max: 0.905498
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=32, grad_norm: 29.299120, grad_max: 2.858548
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=33, grad_norm: 114.469124, grad_max: 2.517429
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=34, grad_norm: 72.807854, grad_max: 2.546445
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=35, grad_norm: 47.330925, grad_max: 1.126639
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00> 72%|███████▏  | 36/50 [00:17<00:06,  2.30it/s] 74%|███████▍  | 37/50 [00:18<00:07,  1.79it/s] 76%|███████▌  | 38/50 [00:18<00:06,  1.99it/s] 78%|███████▊  | 39/50 [00:19<00:05,  2.16it/s] 80%|████████  | 40/50 [00:19<00:04,  2.30it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=36, grad_norm: 18.901228, grad_max: 1.680537
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=37, grad_norm: 178.203461, grad_max: 4.732450
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=38, grad_norm: 113.664894, grad_max: 3.096225
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=39, grad_norm: 78.728851, grad_max: 2.762236
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:20<00:05,  1.79it/s] 84%|████████▍ | 42/50 [00:20<00:04,  1.99it/s] 86%|████████▌ | 43/50 [00:21<00:03,  2.16it/s] 88%|████████▊ | 44/50 [00:21<00:02,  2.30it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=40, grad_norm: 52.353512, grad_max: 3.684263
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=41, grad_norm: 206.322510, grad_max: 5.029366
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027e260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027e260>
[DeepCache DPS Debug] t=42, grad_norm: 115.659119, grad_max: 3.718319
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=43, grad_norm: 75.313919, grad_max: 2.928466
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b3d0>
[DeepCache DPS Debug] t=44, grad_norm: 91.116386, grad_max: 7.193459
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40> 90%|█████████ | 45/50 [00:22<00:02,  1.79it/s] 92%|█████████▏| 46/50 [00:22<00:02,  1.99it/s] 94%|█████████▍| 47/50 [00:23<00:01,  2.16it/s] 96%|█████████▌| 48/50 [00:23<00:00,  2.30it/s] 98%|█████████▊| 49/50 [00:24<00:00,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=45, grad_norm: 106.932854, grad_max: 4.549541
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] t=46, grad_norm: 55.863987, grad_max: 2.488608
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] t=47, grad_norm: 23.963713, grad_max: 2.746186
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=48, grad_norm: 21.807478, grad_max: 2.292650
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>100%|██████████| 50/50 [00:25<00:00,  1.54it/s]100%|██████████| 50/50 [00:25<00:00,  1.98it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=49, grad_norm: 0.484690, grad_max: 0.041905
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.17it/s]  4%|▍         | 2/50 [00:01<00:27,  1.76it/s]  6%|▌         | 3/50 [00:01<00:22,  2.09it/s]  8%|▊         | 4/50 [00:01<00:20,  2.30it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] t=0, grad_norm: 92.322731, grad_max: 2.177895
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027e260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027e260>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=1, grad_norm: 53.960560, grad_max: 1.395626
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=2, grad_norm: 42.250076, grad_max: 0.935934
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] t=3, grad_norm: 35.042988, grad_max: 0.859250
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=46): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0> 10%|█         | 5/50 [00:02<00:26,  1.71it/s] 12%|█▏        | 6/50 [00:03<00:22,  1.95it/s] 14%|█▍        | 7/50 [00:03<00:20,  2.15it/s] 16%|█▌        | 8/50 [00:03<00:18,  2.30it/s] 18%|█▊        | 9/50 [00:04<00:23,  1.77it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=4, grad_norm: 54.642155, grad_max: 2.136017
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=46): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=45): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027e260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027e260>
[DeepCache DPS Debug] t=5, grad_norm: 29.196579, grad_max: 0.621192
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=45): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027e260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027e260>
[DeepCache DPS Debug] t=6, grad_norm: 23.057590, grad_max: 0.567257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=7, grad_norm: 19.129333, grad_max: 0.562025
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=42): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] t=8, grad_norm: 4.375418, grad_max: 0.213528
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=42): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=4, clean_step=0 20%|██        | 10/50 [00:05<00:20,  1.98it/s] 22%|██▏       | 11/50 [00:05<00:18,  2.16it/s] 24%|██▍       | 12/50 [00:05<00:16,  2.30it/s] 26%|██▌       | 13/50 [00:06<00:20,  1.78it/s]
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=9, grad_norm: 21.131821, grad_max: 0.650198
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027e260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027e260>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=40): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b3d0>
[DeepCache DPS Debug] t=10, grad_norm: 16.151754, grad_max: 0.354365
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=40): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=11, grad_norm: 13.992687, grad_max: 0.359800
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=38): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b3d0>
[DeepCache DPS Debug] t=12, grad_norm: 2.874998, grad_max: 0.134092
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=38): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b430>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b430>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220> 28%|██▊       | 14/50 [00:07<00:18,  1.99it/s] 30%|███       | 15/50 [00:07<00:16,  2.16it/s] 32%|███▏      | 16/50 [00:07<00:14,  2.30it/s] 34%|███▍      | 17/50 [00:08<00:18,  1.78it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] t=13, grad_norm: 40.097519, grad_max: 0.756215
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=14, grad_norm: 24.844995, grad_max: 0.621500
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=35): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] t=15, grad_norm: 20.051479, grad_max: 0.344925
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=35): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=34): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=16, grad_norm: 1.816865, grad_max: 0.086704
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=34): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=17, grad_norm: 70.016991, grad_max: 1.365345
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0> 36%|███▌      | 18/50 [00:09<00:16,  1.99it/s] 38%|███▊      | 19/50 [00:09<00:14,  2.16it/s] 40%|████      | 20/50 [00:09<00:13,  2.30it/s] 42%|████▏     | 21/50 [00:10<00:16,  1.78it/s] 44%|████▍     | 22/50 [00:11<00:14,  1.99it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] t=18, grad_norm: 46.533031, grad_max: 0.877263
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=19, grad_norm: 38.705196, grad_max: 0.758705
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] t=20, grad_norm: 0.311872, grad_max: 0.012628
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] t=21, grad_norm: 57.170589, grad_max: 0.919986
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산 46%|████▌     | 23/50 [00:11<00:12,  2.16it/s] 48%|████▊     | 24/50 [00:11<00:11,  2.30it/s] 50%|█████     | 25/50 [00:12<00:14,  1.78it/s] 52%|█████▏    | 26/50 [00:12<00:12,  1.99it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=22, grad_norm: 46.726433, grad_max: 1.211651
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=23, grad_norm: 40.467461, grad_max: 0.792122
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027e260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027e260>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=26): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027e260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027e260>
[DeepCache DPS Debug] t=24, grad_norm: 1.250738, grad_max: 0.112003
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=26): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=25): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=25, grad_norm: 65.653175, grad_max: 1.010121
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=25): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=26, grad_norm: 48.651047, grad_max: 1.047499
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220> 54%|█████▍    | 27/50 [00:13<00:10,  2.16it/s] 56%|█████▌    | 28/50 [00:13<00:09,  2.30it/s] 58%|█████▊    | 29/50 [00:14<00:11,  1.78it/s] 60%|██████    | 30/50 [00:14<00:10,  1.99it/s] 62%|██████▏   | 31/50 [00:15<00:08,  2.16it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] t=27, grad_norm: 40.732300, grad_max: 0.923807
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=22): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=28, grad_norm: 3.015399, grad_max: 0.362342
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=22): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=29, grad_norm: 81.280830, grad_max: 1.746991
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=20): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=30, grad_norm: 55.409771, grad_max: 1.339342
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=20): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:15<00:07,  2.30it/s] 66%|██████▌   | 33/50 [00:16<00:09,  1.79it/s] 68%|██████▊   | 34/50 [00:16<00:08,  1.99it/s] 70%|███████   | 35/50 [00:17<00:06,  2.17it/s]
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=31, grad_norm: 44.469994, grad_max: 0.907507
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=18): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] t=32, grad_norm: 8.057220, grad_max: 0.856931
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=18): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=33, grad_norm: 113.676437, grad_max: 3.175297
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] t=34, grad_norm: 71.528694, grad_max: 1.493605
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=15): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] t=35, grad_norm: 48.561520, grad_max: 1.948239
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=15): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220> 72%|███████▏  | 36/50 [00:17<00:06,  2.31it/s] 74%|███████▍  | 37/50 [00:18<00:07,  1.79it/s] 76%|███████▌  | 38/50 [00:18<00:06,  2.00it/s] 78%|███████▊  | 39/50 [00:19<00:05,  2.17it/s] 80%|████████  | 40/50 [00:19<00:04,  2.31it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=14): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] t=36, grad_norm: 37.660099, grad_max: 2.412160
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=14): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b3d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b3d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] t=37, grad_norm: 173.070343, grad_max: 4.947854
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=38, grad_norm: 118.173500, grad_max: 3.325650
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027e260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027e260>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027e260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027e260>
[DeepCache DPS Debug] t=39, grad_norm: 86.755371, grad_max: 2.158104
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:20<00:05,  1.79it/s] 84%|████████▍ | 42/50 [00:20<00:04,  2.00it/s] 86%|████████▌ | 43/50 [00:21<00:03,  2.17it/s] 88%|████████▊ | 44/50 [00:21<00:02,  2.31it/s]
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=40, grad_norm: 50.818504, grad_max: 3.264096
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] t=41, grad_norm: 204.101227, grad_max: 4.717800
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] t=42, grad_norm: 106.386017, grad_max: 3.177090
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026aaa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026aaa0>
[DeepCache DPS Debug] t=43, grad_norm: 71.403381, grad_max: 4.422919
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=6): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b1c0>
[DeepCache DPS Debug] t=44, grad_norm: 85.120506, grad_max: 3.887866
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=6): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e026bee0> 90%|█████████ | 45/50 [00:22<00:02,  1.79it/s] 92%|█████████▏| 46/50 [00:22<00:02,  2.00it/s] 94%|█████████▍| 47/50 [00:23<00:01,  2.17it/s] 96%|█████████▌| 48/50 [00:23<00:00,  2.31it/s] 98%|█████████▊| 49/50 [00:24<00:00,  1.79it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e026bee0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=5): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028b430>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028b430>
[DeepCache DPS Debug] t=45, grad_norm: 86.895622, grad_max: 4.035060
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=5): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e0288220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e0288220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] t=46, grad_norm: 66.783028, grad_max: 4.230161
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
[DeepCache DPS Debug] t=47, grad_norm: 29.836914, grad_max: 1.832034
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=4, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=5
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U5 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=2): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027ff40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027ff40>
[DeepCache DPS Debug] t=48, grad_norm: 21.255163, grad_max: 1.676752
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=4, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=2): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027c340>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027c340>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=4, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=4, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e027dae0>100%|██████████| 50/50 [00:25<00:00,  1.55it/s]100%|██████████| 50/50 [00:25<00:00,  1.98it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e027dae0>
[DeepCache DPS Debug] t=49, grad_norm: 32.021656, grad_max: 4.297266
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=4, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U12 입력 캐시 완료(pre-hook): torch.Size([128, 384, 16, 16])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f39e028ae00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f39e028ae00>
save npy to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_4_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0/images.npy
Saving images to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=3_20250828_225229/cache_interval_4_layer_depth_5/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=3/bon=1/guidance_strength=1.0/images.png
