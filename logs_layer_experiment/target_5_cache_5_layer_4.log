/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:441: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/home/juhyeong/anaconda3/lib/python3.11/site-packages/transformers/utils/generic.py:309: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  _torch_pytree._register_pytree_node(
/home/juhyeong/anaconda3/lib/python3.11/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
attention mode is flash
logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=5_20250828_225246/cache_interval_5_layer_depth_4/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=5/bon=1/guidance_strength=1.0
Logging to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=5_20250828_225246/cache_interval_5_layer_depth_4/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=5/bon=1/guidance_strength=1.0
Arguments: Arguments(data_type='image', dataset='cifar10', task='label_guidance', image_size=32, include_charges=False, generators_path='./pretrained_models/EDMsecond/generative_model_ema.npy', args_generators_path='./pretrained_models/EDMsecond/args.pickle', energy_path='./pretrained_models/tf_predict_mu/model_ema_2000.npy', args_energy_path='./pretrained_models/tf_predict_mu/args_2000.pickle', classifiers_path='./pretrained_models/evaluate_mu/best_checkpoint.npy', args_classifiers_path='./pretrained_models/evaluate_mu/args.pickle', clip_scale=100, audio_length=10, volume_factor=80.0, motion_prompt='walk', radius=3.0, model_name_or_path='openai_cifar10.pt', model_type='unet', use_deepcache=True, cache_interval=5, cache_block_id=4, skip_mode='uniform', clean_step=0, vae='mse', train_steps=1000, inference_steps=50, eta=1.0, clip_x0=True, clip_sample_range=1.0, seed=42, device=device(type='cuda'), logging_dir='/home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=5_20250828_225246/cache_interval_5_layer_depth_4/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=5/bon=1/guidance_strength=1.0', logger=None, per_sample_batch_size=128, num_samples=1024, batch_id=0, guidance_name='dps', guider='classifier', target='5', recur_steps=1, iter_steps=4, guidance_strength=1.0, guidance_scale=1.0, start_gradient=50, use_early_exit=False, early_exit_layer=None, use_time_based_early_exit=False, time_early_exit_mapping=None, rho=1.0, mu=0.25, sigma=0.001, eps_bsz=1, rho_schedule='increase', mu_schedule='increase', sigma_schedule='decrease', guide_network='resnet_cifar10.pt', classifier_image_size=224, eval_batch_size=512, logging_resolution=512, log_suffix='', log_traj=False, max_show_images=256, check_done=False, wandb=False, wandb_project='trail', wandb_name=None, wandb_entity='llm-selection', saved_file=None, sort_metric=None, topk=5, output_path='vis_molecule', output_dir=None, max_n_samples=10000000000, bon_rate=1, bon_guidance=None)
[DeepCache] DeepCacheDPSGuidance 초기화: use_deepcache=True, cache_interval=5
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:01<00:56,  1.15s/it]  4%|▍         | 2/50 [00:01<00:31,  1.52it/s]  6%|▌         | 3/50 [00:01<00:23,  2.03it/s]  8%|▊         | 4/50 [00:02<00:19,  2.40it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=5, clean_step=0
[DeepCache] DeepCache UNet 초기화: cache_interval=5, cache_block_id=4, clean_step=0
[DeepCache Debug] 첫 번째 실행: start_timestep=50
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200b20>
[DeepCache DPS Debug] t=0, grad_norm: 54.625225, grad_max: 1.344147
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f2009d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f2009d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200a60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200a60>
[DeepCache DPS Debug] t=1, grad_norm: 47.602417, grad_max: 1.348660
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f2009a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f2009a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200b50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200b50>
[DeepCache DPS Debug] t=2, grad_norm: 37.437679, grad_max: 1.208618
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f2008e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f2008e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f2011b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f2011b0>
[DeepCache DPS Debug] t=3, grad_norm: 30.951302, grad_max: 0.896351
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200a00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200a00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200d30> 10%|█         | 5/50 [00:02<00:16,  2.67it/s] 12%|█▏        | 6/50 [00:03<00:22,  1.97it/s] 14%|█▍        | 7/50 [00:03<00:18,  2.27it/s] 16%|█▌        | 8/50 [00:03<00:16,  2.53it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200d30>
[DeepCache DPS Debug] t=4, grad_norm: 25.884563, grad_max: 0.526905
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200970>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200970>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=45): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200ca0>
[DeepCache DPS Debug] t=5, grad_norm: 29.295813, grad_max: 1.538391
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f2008b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f2008b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f2017b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f2017b0>
[DeepCache DPS Debug] t=6, grad_norm: 22.653578, grad_max: 0.471415
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200b20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200b20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201930>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201930>
[DeepCache DPS Debug] t=7, grad_norm: 18.085957, grad_max: 0.397972
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200a60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200a60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201c60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201c60>
[DeepCache DPS Debug] t=8, grad_norm: 15.115272, grad_max: 0.371726
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200b50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200b50> 18%|█▊        | 9/50 [00:04<00:14,  2.74it/s] 20%|██        | 10/50 [00:04<00:13,  2.90it/s] 22%|██▏       | 11/50 [00:05<00:18,  2.11it/s] 24%|██▍       | 12/50 [00:05<00:15,  2.38it/s] 26%|██▌       | 13/50 [00:05<00:14,  2.60it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201840>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201840>
[DeepCache DPS Debug] t=9, grad_norm: 13.171906, grad_max: 0.319509
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f2011b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f2011b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201690>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201690>
[DeepCache DPS Debug] t=10, grad_norm: 21.926292, grad_max: 0.390343
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201ae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201ae0>
[DeepCache DPS Debug] t=11, grad_norm: 20.526958, grad_max: 0.549218
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200ca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=38): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201fc0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201fc0>
[DeepCache DPS Debug] t=12, grad_norm: 14.516253, grad_max: 0.302457
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f2017b0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f2017b0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202110> 28%|██▊       | 14/50 [00:05<00:12,  2.79it/s] 30%|███       | 15/50 [00:06<00:11,  2.93it/s] 32%|███▏      | 16/50 [00:07<00:15,  2.13it/s] 34%|███▍      | 17/50 [00:07<00:13,  2.39it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202110>
[DeepCache DPS Debug] t=13, grad_norm: 12.622348, grad_max: 0.292566
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201930>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201930>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201e10>
[DeepCache DPS Debug] t=14, grad_norm: 11.706104, grad_max: 0.246555
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201c60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201c60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49d50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49d50>
[DeepCache DPS Debug] t=15, grad_norm: 9.600613, grad_max: 0.346184
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202110>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202110>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202050>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202050>
[DeepCache DPS Debug] t=16, grad_norm: 49.808731, grad_max: 0.904516
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201e10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201e10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202470>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202470>
[DeepCache DPS Debug] t=17, grad_norm: 31.638777, grad_max: 0.706361
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201750>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201750> 36%|███▌      | 18/50 [00:07<00:12,  2.61it/s] 38%|███▊      | 19/50 [00:07<00:11,  2.79it/s] 40%|████      | 20/50 [00:08<00:10,  2.94it/s] 42%|████▏     | 21/50 [00:09<00:16,  1.79it/s] 44%|████▍     | 22/50 [00:09<00:13,  2.08it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202590>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202590>
[DeepCache DPS Debug] t=18, grad_norm: 25.836586, grad_max: 0.575706
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f200910>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f200910>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f2022c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f2022c0>
[DeepCache DPS Debug] t=19, grad_norm: 24.023409, grad_max: 0.450848
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201690>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201690>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49ae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49ae0>
[DeepCache DPS Debug] t=20, grad_norm: 10.858605, grad_max: 0.439070
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49c60>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49c60>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49b70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49b70>
[DeepCache DPS Debug] t=21, grad_norm: 46.270210, grad_max: 0.858398
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49210>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49210>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산 46%|████▌     | 23/50 [00:09<00:11,  2.34it/s] 48%|████▊     | 24/50 [00:10<00:10,  2.57it/s] 50%|█████     | 25/50 [00:10<00:09,  2.76it/s] 52%|█████▏    | 26/50 [00:11<00:11,  2.06it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49ba0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49ba0>
[DeepCache DPS Debug] t=22, grad_norm: 39.355061, grad_max: 0.762635
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49b10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49b10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49ea0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49ea0>
[DeepCache DPS Debug] t=23, grad_norm: 35.921528, grad_max: 0.673884
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49ae0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49ae0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=26): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49e70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49e70>
[DeepCache DPS Debug] t=24, grad_norm: 30.272495, grad_max: 0.620703
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe499f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe499f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=25): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a260>
[DeepCache DPS Debug] t=25, grad_norm: 21.709597, grad_max: 1.184593
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49ab0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49ab0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a5c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a5c0>
[DeepCache DPS Debug] t=26, grad_norm: 54.548416, grad_max: 0.976989
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49a80> 54%|█████▍    | 27/50 [00:11<00:09,  2.33it/s] 56%|█████▌    | 28/50 [00:11<00:08,  2.56it/s] 58%|█████▊    | 29/50 [00:12<00:07,  2.75it/s] 60%|██████    | 30/50 [00:12<00:06,  2.90it/s] 62%|██████▏   | 31/50 [00:13<00:08,  2.12it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49a80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a740>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a740>
[DeepCache DPS Debug] t=27, grad_norm: 39.534035, grad_max: 0.839757
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49b70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49b70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a920>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a920>
[DeepCache DPS Debug] t=28, grad_norm: 33.097176, grad_max: 0.622284
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49ba0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49ba0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a650>
[DeepCache DPS Debug] t=29, grad_norm: 30.280354, grad_max: 0.492809
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49ea0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49ea0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49300>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49300>
[DeepCache DPS Debug] t=30, grad_norm: 30.095535, grad_max: 0.902375
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49e70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49e70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:13<00:07,  2.38it/s] 66%|██████▌   | 33/50 [00:13<00:06,  2.60it/s] 68%|██████▊   | 34/50 [00:14<00:05,  2.78it/s] 70%|███████   | 35/50 [00:14<00:05,  2.93it/s]
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a890>
[DeepCache DPS Debug] t=31, grad_norm: 67.363091, grad_max: 1.568212
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a260>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a260>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ac80>
[DeepCache DPS Debug] t=32, grad_norm: 45.090778, grad_max: 0.954078
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a5c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a5c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] t=33, grad_norm: 37.969696, grad_max: 1.082880
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a740>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a740>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ab30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ab30>
[DeepCache DPS Debug] t=34, grad_norm: 34.405418, grad_max: 0.578023
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a920>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a920>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=15): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe48190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe48190>
[DeepCache DPS Debug] t=35, grad_norm: 55.090580, grad_max: 1.906213
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a650> 72%|███████▏  | 36/50 [00:15<00:06,  2.13it/s] 74%|███████▍  | 37/50 [00:15<00:05,  2.39it/s] 76%|███████▌  | 38/50 [00:15<00:04,  2.61it/s] 78%|███████▊  | 39/50 [00:16<00:03,  2.79it/s] 80%|████████  | 40/50 [00:16<00:03,  2.93it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=14): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ad10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ad10>
[DeepCache DPS Debug] t=36, grad_norm: 106.169182, grad_max: 2.799941
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49300>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49300>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b0d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b0d0>
[DeepCache DPS Debug] t=37, grad_norm: 76.770515, grad_max: 2.837371
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a890>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a890>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b280>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b280>
[DeepCache DPS Debug] t=38, grad_norm: 57.677387, grad_max: 1.400216
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ac80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ac80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4af80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4af80>
[DeepCache DPS Debug] t=39, grad_norm: 53.572578, grad_max: 1.473031
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:17<00:04,  2.13it/s] 84%|████████▍ | 42/50 [00:17<00:03,  2.38it/s] 86%|████████▌ | 43/50 [00:17<00:02,  2.59it/s] 88%|████████▊ | 44/50 [00:18<00:02,  2.77it/s]
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a440>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a440>
[DeepCache DPS Debug] t=40, grad_norm: 71.478127, grad_max: 3.951857
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ab30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ab30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b1c0>
[DeepCache DPS Debug] t=41, grad_norm: 115.702217, grad_max: 3.804098
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe48190>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe48190>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b5e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b5e0>
[DeepCache DPS Debug] t=42, grad_norm: 102.250328, grad_max: 2.237669
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ad10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ad10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b730>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b730>
[DeepCache DPS Debug] t=43, grad_norm: 97.891441, grad_max: 2.730142
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b0d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b0d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b370>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b370>
[DeepCache DPS Debug] t=44, grad_norm: 99.132683, grad_max: 2.606161
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b280> 90%|█████████ | 45/50 [00:18<00:01,  2.90it/s] 92%|█████████▏| 46/50 [00:19<00:01,  2.11it/s] 94%|█████████▍| 47/50 [00:19<00:01,  2.36it/s] 96%|█████████▌| 48/50 [00:19<00:00,  2.58it/s] 98%|█████████▊| 49/50 [00:20<00:00,  2.75it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b280>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe499c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe499c0>
[DeepCache DPS Debug] t=45, grad_norm: 113.333656, grad_max: 5.997409
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4af80>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4af80>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b6d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b6d0>
[DeepCache DPS Debug] t=46, grad_norm: 185.958252, grad_max: 10.139879
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a440>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a440>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4baf0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4baf0>
[DeepCache DPS Debug] t=47, grad_norm: 175.866882, grad_max: 6.967659
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b1c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b1c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=2): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bbe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bbe0>
[DeepCache DPS Debug] t=48, grad_norm: 216.797638, grad_max: 6.165465
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b5e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b5e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5cd9c256c0>100%|██████████| 50/50 [00:20<00:00,  2.04it/s]100%|██████████| 50/50 [00:20<00:00,  2.39it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5cd9c256c0>
[DeepCache DPS Debug] t=49, grad_norm: 213.187302, grad_max: 10.756303
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5cd9c243a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5cd9c243a0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:38,  1.28it/s]  4%|▍         | 2/50 [00:01<00:24,  1.99it/s]  6%|▌         | 3/50 [00:01<00:19,  2.41it/s]  8%|▊         | 4/50 [00:01<00:17,  2.68it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49a20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49a20>
[DeepCache DPS Debug] t=0, grad_norm: 54.215027, grad_max: 1.744003
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe499c0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe499c0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a3e0>
[DeepCache DPS Debug] t=1, grad_norm: 47.773006, grad_max: 0.942679
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b6d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b6d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] t=2, grad_norm: 37.882362, grad_max: 1.009359
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49d50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49d50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] t=3, grad_norm: 31.354139, grad_max: 0.754628
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bbe0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bbe0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310> 10%|█         | 5/50 [00:02<00:15,  2.85it/s] 12%|█▏        | 6/50 [00:02<00:22,  1.99it/s] 14%|█▍        | 7/50 [00:03<00:18,  2.28it/s] 16%|█▌        | 8/50 [00:03<00:16,  2.51it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] t=4, grad_norm: 26.021427, grad_max: 0.585305
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b8e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=45): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] t=5, grad_norm: 32.015541, grad_max: 1.206245
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49660>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49660>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=6, grad_norm: 22.927320, grad_max: 0.496986
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49a20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49a20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] t=7, grad_norm: 18.318970, grad_max: 0.380424
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a3e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a3e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] t=8, grad_norm: 15.393331, grad_max: 0.388318
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0> 18%|█▊        | 9/50 [00:03<00:15,  2.69it/s] 20%|██        | 10/50 [00:04<00:14,  2.83it/s] 22%|██▏       | 11/50 [00:04<00:19,  2.04it/s] 24%|██▍       | 12/50 [00:05<00:16,  2.29it/s] 26%|██▌       | 13/50 [00:05<00:14,  2.50it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] t=9, grad_norm: 13.230447, grad_max: 0.362454
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] t=10, grad_norm: 22.401863, grad_max: 0.607471
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] t=11, grad_norm: 20.970139, grad_max: 0.400936
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=38): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] t=12, grad_norm: 14.851003, grad_max: 0.364314
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20> 28%|██▊       | 14/50 [00:05<00:13,  2.68it/s] 30%|███       | 15/50 [00:06<00:12,  2.81it/s] 32%|███▏      | 16/50 [00:06<00:16,  2.03it/s] 34%|███▍      | 17/50 [00:07<00:14,  2.28it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=13, grad_norm: 12.693322, grad_max: 0.286350
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] t=14, grad_norm: 11.858324, grad_max: 0.196365
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] t=15, grad_norm: 9.486313, grad_max: 0.174187
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] t=16, grad_norm: 51.620640, grad_max: 1.016664
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] t=17, grad_norm: 32.857162, grad_max: 0.826796
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310> 36%|███▌      | 18/50 [00:07<00:12,  2.48it/s] 38%|███▊      | 19/50 [00:07<00:11,  2.65it/s] 40%|████      | 20/50 [00:08<00:10,  2.79it/s] 42%|████▏     | 21/50 [00:08<00:14,  2.03it/s] 44%|████▍     | 22/50 [00:09<00:12,  2.27it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] t=18, grad_norm: 26.859222, grad_max: 0.499509
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] t=19, grad_norm: 24.903090, grad_max: 0.611304
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=20, grad_norm: 9.102309, grad_max: 0.133813
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] t=21, grad_norm: 46.220570, grad_max: 0.869107
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산 46%|████▌     | 23/50 [00:09<00:10,  2.47it/s] 48%|████▊     | 24/50 [00:09<00:09,  2.64it/s] 50%|█████     | 25/50 [00:10<00:09,  2.77it/s] 52%|█████▏    | 26/50 [00:11<00:11,  2.01it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] t=22, grad_norm: 39.799232, grad_max: 0.824901
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] t=23, grad_norm: 34.218189, grad_max: 0.698418
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=26): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] t=24, grad_norm: 29.472712, grad_max: 0.730119
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=25): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] t=25, grad_norm: 15.599746, grad_max: 0.590795
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] t=26, grad_norm: 53.398251, grad_max: 0.947945
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20> 54%|█████▍    | 27/50 [00:11<00:10,  2.24it/s] 56%|█████▌    | 28/50 [00:11<00:08,  2.45it/s] 58%|█████▊    | 29/50 [00:12<00:08,  2.61it/s] 60%|██████    | 30/50 [00:12<00:07,  2.74it/s] 62%|██████▏   | 31/50 [00:13<00:09,  1.99it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=27, grad_norm: 39.130436, grad_max: 0.942557
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] t=28, grad_norm: 32.778873, grad_max: 0.848336
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] t=29, grad_norm: 29.646488, grad_max: 0.535726
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] t=30, grad_norm: 41.299553, grad_max: 3.089571
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:13<00:08,  2.23it/s] 66%|██████▌   | 33/50 [00:13<00:06,  2.43it/s] 68%|██████▊   | 34/50 [00:14<00:06,  2.60it/s] 70%|███████   | 35/50 [00:14<00:05,  2.73it/s]
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] t=31, grad_norm: 68.025925, grad_max: 3.017213
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] t=32, grad_norm: 46.900379, grad_max: 1.056278
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] t=33, grad_norm: 37.489006, grad_max: 0.729523
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=34, grad_norm: 34.615150, grad_max: 0.979400
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=15): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] t=35, grad_norm: 52.767456, grad_max: 2.199561
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320> 72%|███████▏  | 36/50 [00:15<00:07,  1.98it/s] 74%|███████▍  | 37/50 [00:15<00:05,  2.22it/s] 76%|███████▌  | 38/50 [00:15<00:04,  2.42it/s] 78%|███████▊  | 39/50 [00:16<00:04,  2.59it/s] 80%|████████  | 40/50 [00:16<00:03,  2.71it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=14): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] t=36, grad_norm: 99.854095, grad_max: 2.322786
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] t=37, grad_norm: 73.217789, grad_max: 1.674424
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] t=38, grad_norm: 57.294926, grad_max: 2.319209
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] t=39, grad_norm: 52.751015, grad_max: 1.370482
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:17<00:04,  1.97it/s] 84%|████████▍ | 42/50 [00:17<00:03,  2.21it/s] 86%|████████▌ | 43/50 [00:18<00:02,  2.41it/s] 88%|████████▊ | 44/50 [00:18<00:02,  2.58it/s]
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] t=40, grad_norm: 65.526993, grad_max: 2.702041
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=41, grad_norm: 112.636238, grad_max: 2.707732
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] t=42, grad_norm: 106.369957, grad_max: 3.632125
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] t=43, grad_norm: 96.386963, grad_max: 2.546059
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] t=44, grad_norm: 99.487244, grad_max: 2.852385
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20> 90%|█████████ | 45/50 [00:18<00:01,  2.70it/s] 92%|█████████▏| 46/50 [00:19<00:02,  1.96it/s] 94%|█████████▍| 47/50 [00:19<00:01,  2.20it/s] 96%|█████████▌| 48/50 [00:20<00:00,  2.41it/s] 98%|█████████▊| 49/50 [00:20<00:00,  2.57it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] t=45, grad_norm: 115.081474, grad_max: 7.885132
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] t=46, grad_norm: 167.067184, grad_max: 4.434190
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] t=47, grad_norm: 157.775879, grad_max: 4.705104
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=2): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=48, grad_norm: 206.914825, grad_max: 12.070584
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>100%|██████████| 50/50 [00:21<00:00,  1.91it/s]100%|██████████| 50/50 [00:21<00:00,  2.33it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] t=49, grad_norm: 217.770508, grad_max: 6.417686
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.19it/s]  4%|▍         | 2/50 [00:01<00:25,  1.85it/s]  6%|▌         | 3/50 [00:01<00:20,  2.26it/s]  8%|▊         | 4/50 [00:01<00:18,  2.52it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] t=0, grad_norm: 55.922852, grad_max: 2.076897
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] t=1, grad_norm: 47.529842, grad_max: 1.234036
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] t=2, grad_norm: 37.481606, grad_max: 0.778543
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] t=3, grad_norm: 30.998659, grad_max: 0.729285
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30> 10%|█         | 5/50 [00:02<00:16,  2.68it/s] 12%|█▏        | 6/50 [00:02<00:23,  1.88it/s] 14%|█▍        | 7/50 [00:03<00:19,  2.15it/s] 16%|█▌        | 8/50 [00:03<00:17,  2.38it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] t=4, grad_norm: 25.979090, grad_max: 0.518985
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=45): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=5, grad_norm: 28.298006, grad_max: 1.650932
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49180>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49180>
[DeepCache DPS Debug] t=6, grad_norm: 23.257986, grad_max: 0.542020
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] t=7, grad_norm: 18.097740, grad_max: 0.468157
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4beb0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4beb0>
[DeepCache DPS Debug] t=8, grad_norm: 15.232705, grad_max: 0.398025
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20> 18%|█▊        | 9/50 [00:03<00:16,  2.55it/s] 20%|██        | 10/50 [00:04<00:14,  2.69it/s] 22%|██▏       | 11/50 [00:05<00:20,  1.94it/s] 24%|██▍       | 12/50 [00:05<00:17,  2.19it/s] 26%|██▌       | 13/50 [00:05<00:15,  2.39it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] t=9, grad_norm: 13.150572, grad_max: 0.538083
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4b310>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4b310>
[DeepCache DPS Debug] t=10, grad_norm: 22.648336, grad_max: 0.576675
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4ae30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4ae30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b82e3b8e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b82e3b8e0>
[DeepCache DPS Debug] t=11, grad_norm: 20.622442, grad_max: 0.385016
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b82c7bfa0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b82c7bfa0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=38): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4a320>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4a320>
[DeepCache DPS Debug] t=12, grad_norm: 14.559245, grad_max: 0.270631
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4be20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4be20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d30> 28%|██▊       | 14/50 [00:06<00:14,  2.55it/s] 30%|███       | 15/50 [00:06<00:13,  2.68it/s] 32%|███▏      | 16/50 [00:07<00:17,  1.95it/s] 34%|███▍      | 17/50 [00:07<00:15,  2.19it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d30>
[DeepCache DPS Debug] t=13, grad_norm: 12.649058, grad_max: 0.257181
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d30>
[DeepCache DPS Debug] t=14, grad_norm: 11.851313, grad_max: 0.255625
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0cd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0cd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0cd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0cd0>
[DeepCache DPS Debug] t=15, grad_norm: 9.853374, grad_max: 0.314951
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49720>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49720>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49720>
[DeepCache DPS Debug] t=16, grad_norm: 50.182564, grad_max: 1.003301
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] t=17, grad_norm: 32.707836, grad_max: 0.728731
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe496f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe496f0> 36%|███▌      | 18/50 [00:07<00:13,  2.39it/s] 38%|███▊      | 19/50 [00:08<00:12,  2.56it/s] 40%|████      | 20/50 [00:08<00:11,  2.69it/s] 42%|████▏     | 21/50 [00:09<00:14,  1.95it/s] 44%|████▍     | 22/50 [00:09<00:12,  2.19it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe496f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe496f0>
[DeepCache DPS Debug] t=18, grad_norm: 26.270767, grad_max: 0.534574
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d30>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d30>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d30>
[DeepCache DPS Debug] t=19, grad_norm: 24.735149, grad_max: 0.460553
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49870>
[DeepCache DPS Debug] t=20, grad_norm: 8.273800, grad_max: 0.126618
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0ca0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0ca0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0ca0>
[DeepCache DPS Debug] t=21, grad_norm: 46.704491, grad_max: 0.965329
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산 46%|████▌     | 23/50 [00:10<00:11,  2.39it/s] 48%|████▊     | 24/50 [00:10<00:10,  2.56it/s] 50%|█████     | 25/50 [00:10<00:09,  2.69it/s] 52%|█████▏    | 26/50 [00:11<00:12,  1.96it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] t=22, grad_norm: 38.110367, grad_max: 0.712583
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0cd0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0cd0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=23, grad_norm: 34.696785, grad_max: 0.771247
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=26): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=24, grad_norm: 29.863960, grad_max: 0.536630
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=25): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=25, grad_norm: 22.121086, grad_max: 0.912957
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] t=26, grad_norm: 54.972973, grad_max: 0.975596
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0> 54%|█████▍    | 27/50 [00:11<00:10,  2.19it/s] 56%|█████▌    | 28/50 [00:12<00:09,  2.40it/s] 58%|█████▊    | 29/50 [00:12<00:08,  2.56it/s] 60%|██████    | 30/50 [00:12<00:07,  2.69it/s] 62%|██████▏   | 31/50 [00:13<00:09,  1.96it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=27, grad_norm: 39.563034, grad_max: 0.782364
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=28, grad_norm: 33.891483, grad_max: 0.806819
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] t=29, grad_norm: 30.151102, grad_max: 0.470845
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=30, grad_norm: 30.602407, grad_max: 1.396997
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:14<00:08,  2.19it/s] 66%|██████▌   | 33/50 [00:14<00:07,  2.40it/s] 68%|██████▊   | 34/50 [00:14<00:06,  2.56it/s] 70%|███████   | 35/50 [00:15<00:05,  2.69it/s]
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=31, grad_norm: 67.544624, grad_max: 1.587965
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] t=32, grad_norm: 44.609222, grad_max: 1.074888
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=33, grad_norm: 38.841545, grad_max: 0.883867
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=34, grad_norm: 35.849972, grad_max: 0.661240
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=15): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] t=35, grad_norm: 58.931011, grad_max: 3.139173
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10> 72%|███████▏  | 36/50 [00:15<00:07,  1.96it/s] 74%|███████▍  | 37/50 [00:16<00:05,  2.19it/s] 76%|███████▌  | 38/50 [00:16<00:05,  2.39it/s] 78%|███████▊  | 39/50 [00:16<00:04,  2.56it/s] 80%|████████  | 40/50 [00:17<00:03,  2.69it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=14): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=36, grad_norm: 105.227592, grad_max: 2.416760
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=37, grad_norm: 72.526840, grad_max: 1.931551
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] t=38, grad_norm: 61.020794, grad_max: 1.887921
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=39, grad_norm: 50.880699, grad_max: 1.405746
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:18<00:04,  1.96it/s] 84%|████████▍ | 42/50 [00:18<00:03,  2.19it/s] 86%|████████▌ | 43/50 [00:18<00:02,  2.40it/s] 88%|████████▊ | 44/50 [00:19<00:02,  2.56it/s]
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=40, grad_norm: 64.311539, grad_max: 2.532305
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] t=41, grad_norm: 121.863808, grad_max: 3.438990
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=42, grad_norm: 104.093559, grad_max: 2.927292
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=43, grad_norm: 103.204323, grad_max: 3.520570
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] t=44, grad_norm: 102.298172, grad_max: 2.852818
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0> 90%|█████████ | 45/50 [00:19<00:01,  2.69it/s] 92%|█████████▏| 46/50 [00:20<00:02,  1.96it/s] 94%|█████████▍| 47/50 [00:20<00:01,  2.19it/s] 96%|█████████▌| 48/50 [00:20<00:00,  2.40it/s] 98%|█████████▊| 49/50 [00:21<00:00,  2.56it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=45, grad_norm: 88.899338, grad_max: 4.073284
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=46, grad_norm: 163.936218, grad_max: 4.219063
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] t=47, grad_norm: 182.813080, grad_max: 8.085594
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=2): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=48, grad_norm: 218.840408, grad_max: 10.015344
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>100%|██████████| 50/50 [00:21<00:00,  1.90it/s]100%|██████████| 50/50 [00:21<00:00,  2.27it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=49, grad_norm: 217.135712, grad_max: 5.367237
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.19it/s]  4%|▍         | 2/50 [00:01<00:25,  1.86it/s]  6%|▌         | 3/50 [00:01<00:20,  2.26it/s]  8%|▊         | 4/50 [00:01<00:18,  2.52it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b863a0d00>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b863a0d00>
[DeepCache DPS Debug] t=0, grad_norm: 56.072048, grad_max: 2.476288
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=1, grad_norm: 47.452652, grad_max: 1.512458
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49810>
[DeepCache DPS Debug] t=2, grad_norm: 38.195660, grad_max: 0.947177
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe494e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe494e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe494e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe494e0>
[DeepCache DPS Debug] t=3, grad_norm: 31.245605, grad_max: 0.733188
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49870> 10%|█         | 5/50 [00:02<00:16,  2.69it/s] 12%|█▏        | 6/50 [00:02<00:23,  1.89it/s] 14%|█▍        | 7/50 [00:03<00:19,  2.16it/s] 16%|█▌        | 8/50 [00:03<00:17,  2.38it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49870>
[DeepCache DPS Debug] t=4, grad_norm: 26.379557, grad_max: 0.663962
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=45): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=5, grad_norm: 29.378483, grad_max: 1.081268
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe495d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe495d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe495d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe495d0>
[DeepCache DPS Debug] t=6, grad_norm: 23.019510, grad_max: 0.565635
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49150>
[DeepCache DPS Debug] t=7, grad_norm: 18.211185, grad_max: 0.375325
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49810>
[DeepCache DPS Debug] t=8, grad_norm: 15.427589, grad_max: 0.383219
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe494e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe494e0> 18%|█▊        | 9/50 [00:03<00:16,  2.55it/s] 20%|██        | 10/50 [00:04<00:14,  2.69it/s] 22%|██▏       | 11/50 [00:05<00:20,  1.95it/s] 24%|██▍       | 12/50 [00:05<00:17,  2.19it/s] 26%|██▌       | 13/50 [00:05<00:15,  2.39it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe494e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe494e0>
[DeepCache DPS Debug] t=9, grad_norm: 13.337474, grad_max: 0.306079
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49870>
[DeepCache DPS Debug] t=10, grad_norm: 22.699984, grad_max: 1.067459
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=11, grad_norm: 20.882189, grad_max: 0.535761
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe495d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe495d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=38): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe495d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe495d0>
[DeepCache DPS Debug] t=12, grad_norm: 14.436894, grad_max: 0.279226
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49150> 28%|██▊       | 14/50 [00:06<00:14,  2.56it/s] 30%|███       | 15/50 [00:06<00:13,  2.68it/s] 32%|███▏      | 16/50 [00:07<00:17,  1.95it/s] 34%|███▍      | 17/50 [00:07<00:15,  2.19it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49150>
[DeepCache DPS Debug] t=13, grad_norm: 12.895343, grad_max: 0.269657
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49810>
[DeepCache DPS Debug] t=14, grad_norm: 12.071132, grad_max: 0.284534
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe494e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe494e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe494e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe494e0>
[DeepCache DPS Debug] t=15, grad_norm: 8.474758, grad_max: 0.167951
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49870>
[DeepCache DPS Debug] t=16, grad_norm: 50.957531, grad_max: 0.987112
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=17, grad_norm: 31.702240, grad_max: 0.569916
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe495d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe495d0> 36%|███▌      | 18/50 [00:07<00:13,  2.39it/s] 38%|███▊      | 19/50 [00:08<00:12,  2.55it/s] 40%|████      | 20/50 [00:08<00:11,  2.68it/s] 42%|████▏     | 21/50 [00:09<00:14,  1.95it/s] 44%|████▍     | 22/50 [00:09<00:12,  2.19it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe495d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe495d0>
[DeepCache DPS Debug] t=18, grad_norm: 26.754122, grad_max: 0.550436
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49150>
[DeepCache DPS Debug] t=19, grad_norm: 25.579279, grad_max: 0.489347
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49810>
[DeepCache DPS Debug] t=20, grad_norm: 8.367244, grad_max: 0.115130
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe494e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe494e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe494e0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe494e0>
[DeepCache DPS Debug] t=21, grad_norm: 45.386826, grad_max: 0.790583
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산 46%|████▌     | 23/50 [00:10<00:11,  2.39it/s] 48%|████▊     | 24/50 [00:10<00:10,  2.56it/s] 50%|█████     | 25/50 [00:10<00:09,  2.69it/s] 52%|█████▏    | 26/50 [00:11<00:12,  1.96it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49870>
[DeepCache DPS Debug] t=22, grad_norm: 39.792953, grad_max: 0.884675
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe4bb20>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe4bb20>
[DeepCache DPS Debug] t=23, grad_norm: 33.600372, grad_max: 0.679128
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe495d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe495d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=26): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe495d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe495d0>
[DeepCache DPS Debug] t=24, grad_norm: 30.012192, grad_max: 0.745839
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49150>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=25): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49150>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49150>
[DeepCache DPS Debug] t=25, grad_norm: 21.142714, grad_max: 0.852653
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49810>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe49810>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe49810>
[DeepCache DPS Debug] t=26, grad_norm: 55.932762, grad_max: 1.608606
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b5fe494e0> 54%|█████▍    | 27/50 [00:11<00:10,  2.19it/s] 56%|█████▌    | 28/50 [00:12<00:09,  2.39it/s] 58%|█████▊    | 29/50 [00:12<00:08,  2.56it/s] 60%|██████    | 30/50 [00:12<00:07,  2.69it/s] 62%|██████▏   | 31/50 [00:13<00:09,  1.95it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b5fe494e0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=27, grad_norm: 38.840969, grad_max: 0.612575
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] t=28, grad_norm: 33.335442, grad_max: 0.605143
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] t=29, grad_norm: 30.146740, grad_max: 0.513045
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=30, grad_norm: 33.076897, grad_max: 1.132075
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:14<00:08,  2.18it/s] 66%|██████▌   | 33/50 [00:14<00:07,  2.37it/s] 68%|██████▊   | 34/50 [00:14<00:06,  2.53it/s] 70%|███████   | 35/50 [00:15<00:05,  2.65it/s]
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=31, grad_norm: 67.251587, grad_max: 1.443090
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] t=32, grad_norm: 45.959858, grad_max: 0.953140
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] t=33, grad_norm: 38.014782, grad_max: 0.691938
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] t=34, grad_norm: 33.441776, grad_max: 0.733517
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=15): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] t=35, grad_norm: 49.033676, grad_max: 1.416743
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10> 72%|███████▏  | 36/50 [00:15<00:07,  1.93it/s] 74%|███████▍  | 37/50 [00:16<00:06,  2.16it/s] 76%|███████▌  | 38/50 [00:16<00:05,  2.36it/s] 78%|███████▊  | 39/50 [00:16<00:04,  2.52it/s] 80%|████████  | 40/50 [00:17<00:03,  2.64it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=14): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=36, grad_norm: 101.181404, grad_max: 2.796155
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] t=37, grad_norm: 77.445717, grad_max: 1.719000
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=38, grad_norm: 62.017410, grad_max: 1.783408
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=39, grad_norm: 53.365013, grad_max: 1.542131
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:18<00:04,  1.92it/s] 84%|████████▍ | 42/50 [00:18<00:03,  2.15it/s] 86%|████████▌ | 43/50 [00:18<00:02,  2.35it/s] 88%|████████▊ | 44/50 [00:19<00:02,  2.51it/s]
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] t=40, grad_norm: 66.299911, grad_max: 2.426881
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] t=41, grad_norm: 118.808243, grad_max: 3.424620
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] t=42, grad_norm: 101.661392, grad_max: 2.145351
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] t=43, grad_norm: 104.244583, grad_max: 4.304287
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=44, grad_norm: 108.503693, grad_max: 3.526621
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870> 90%|█████████ | 45/50 [00:19<00:01,  2.64it/s] 92%|█████████▏| 46/50 [00:20<00:02,  1.92it/s] 94%|█████████▍| 47/50 [00:20<00:01,  2.15it/s] 96%|█████████▌| 48/50 [00:20<00:00,  2.35it/s] 98%|█████████▊| 49/50 [00:21<00:00,  2.52it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] t=45, grad_norm: 102.864365, grad_max: 4.138265
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=46, grad_norm: 187.945007, grad_max: 6.918921
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=47, grad_norm: 169.495468, grad_max: 6.066441
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=2): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] t=48, grad_norm: 206.260773, grad_max: 6.416470
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>100%|██████████| 50/50 [00:22<00:00,  1.87it/s]100%|██████████| 50/50 [00:22<00:00,  2.26it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] t=49, grad_norm: 231.570084, grad_max: 8.526862
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:26,  1.83it/s]  6%|▌         | 3/50 [00:01<00:21,  2.23it/s]  8%|▊         | 4/50 [00:01<00:18,  2.48it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] t=0, grad_norm: 55.987083, grad_max: 1.416199
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] t=1, grad_norm: 47.128990, grad_max: 1.380748
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=2, grad_norm: 37.487461, grad_max: 0.814729
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] t=3, grad_norm: 31.093203, grad_max: 0.700781
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0> 10%|█         | 5/50 [00:02<00:17,  2.64it/s] 12%|█▏        | 6/50 [00:03<00:23,  1.85it/s] 14%|█▍        | 7/50 [00:03<00:20,  2.12it/s] 16%|█▌        | 8/50 [00:03<00:17,  2.34it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=4, grad_norm: 25.673868, grad_max: 0.585439
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=45): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=5, grad_norm: 27.930922, grad_max: 0.813797
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] t=6, grad_norm: 22.959143, grad_max: 0.506981
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] t=7, grad_norm: 18.351633, grad_max: 0.341833
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] t=8, grad_norm: 15.425586, grad_max: 0.319159
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220> 18%|█▊        | 9/50 [00:04<00:16,  2.51it/s] 20%|██        | 10/50 [00:04<00:15,  2.65it/s] 22%|██▏       | 11/50 [00:05<00:20,  1.91it/s] 24%|██▍       | 12/50 [00:05<00:17,  2.15it/s] 26%|██▌       | 13/50 [00:05<00:15,  2.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] t=9, grad_norm: 13.349909, grad_max: 0.304875
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=10, grad_norm: 22.381050, grad_max: 0.481848
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] t=11, grad_norm: 20.722151, grad_max: 0.545091
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=38): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=12, grad_norm: 14.676453, grad_max: 0.298518
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70> 28%|██▊       | 14/50 [00:06<00:14,  2.52it/s] 30%|███       | 15/50 [00:06<00:13,  2.65it/s] 32%|███▏      | 16/50 [00:07<00:17,  1.92it/s] 34%|███▍      | 17/50 [00:07<00:15,  2.16it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=13, grad_norm: 12.645497, grad_max: 0.275817
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] t=14, grad_norm: 11.801061, grad_max: 0.224233
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] t=15, grad_norm: 9.501463, grad_max: 0.353924
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] t=16, grad_norm: 50.395931, grad_max: 0.877907
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] t=17, grad_norm: 31.279852, grad_max: 0.655655
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10> 36%|███▌      | 18/50 [00:08<00:13,  2.36it/s] 38%|███▊      | 19/50 [00:08<00:12,  2.52it/s] 40%|████      | 20/50 [00:08<00:11,  2.64it/s] 42%|████▏     | 21/50 [00:09<00:15,  1.92it/s] 44%|████▍     | 22/50 [00:09<00:12,  2.16it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=18, grad_norm: 26.541445, grad_max: 0.467350
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] t=19, grad_norm: 24.207008, grad_max: 0.541852
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=20, grad_norm: 8.764267, grad_max: 0.149460
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=21, grad_norm: 47.929092, grad_max: 1.286011
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산 46%|████▌     | 23/50 [00:10<00:11,  2.35it/s] 48%|████▊     | 24/50 [00:10<00:10,  2.52it/s] 50%|█████     | 25/50 [00:10<00:09,  2.64it/s] 52%|█████▏    | 26/50 [00:11<00:12,  1.92it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] t=22, grad_norm: 40.089512, grad_max: 0.786656
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] t=23, grad_norm: 33.706348, grad_max: 0.624818
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=26): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] t=24, grad_norm: 28.423801, grad_max: 0.666510
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=25): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] t=25, grad_norm: 15.684443, grad_max: 0.452871
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=26, grad_norm: 54.206608, grad_max: 0.955508
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870> 54%|█████▍    | 27/50 [00:12<00:10,  2.15it/s] 56%|█████▌    | 28/50 [00:12<00:09,  2.36it/s] 58%|█████▊    | 29/50 [00:12<00:08,  2.52it/s] 60%|██████    | 30/50 [00:13<00:07,  2.64it/s] 62%|██████▏   | 31/50 [00:13<00:09,  1.93it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] t=27, grad_norm: 38.630013, grad_max: 0.595602
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=28, grad_norm: 33.034847, grad_max: 0.580886
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=29, grad_norm: 30.106592, grad_max: 0.577846
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] t=30, grad_norm: 31.839998, grad_max: 1.602030
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:14<00:08,  2.16it/s] 66%|██████▌   | 33/50 [00:14<00:07,  2.35it/s] 68%|██████▊   | 34/50 [00:14<00:06,  2.52it/s] 70%|███████   | 35/50 [00:15<00:05,  2.65it/s]
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] t=31, grad_norm: 66.490471, grad_max: 1.792011
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] t=32, grad_norm: 44.441837, grad_max: 1.126851
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] t=33, grad_norm: 36.885056, grad_max: 0.856594
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=34, grad_norm: 33.340279, grad_max: 0.695739
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=15): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] t=35, grad_norm: 46.495995, grad_max: 2.092120
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0> 72%|███████▏  | 36/50 [00:16<00:07,  1.92it/s] 74%|███████▍  | 37/50 [00:16<00:06,  2.16it/s] 76%|███████▌  | 38/50 [00:16<00:05,  2.36it/s] 78%|███████▊  | 39/50 [00:17<00:04,  2.52it/s] 80%|████████  | 40/50 [00:17<00:03,  2.64it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=14): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a04f0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a04f0>
[DeepCache DPS Debug] t=36, grad_norm: 100.583946, grad_max: 2.409537
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=37, grad_norm: 74.258873, grad_max: 1.980636
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a30a0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a30a0>
[DeepCache DPS Debug] t=38, grad_norm: 59.341702, grad_max: 2.240480
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f202c50>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f202c50>
[DeepCache DPS Debug] t=39, grad_norm: 57.059959, grad_max: 3.045712
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:18<00:04,  1.92it/s] 84%|████████▍ | 42/50 [00:18<00:03,  2.15it/s] 86%|████████▌ | 43/50 [00:18<00:02,  2.35it/s] 88%|████████▊ | 44/50 [00:19<00:02,  2.51it/s]
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a09d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a09d0>
[DeepCache DPS Debug] t=40, grad_norm: 65.623070, grad_max: 2.886090
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203220>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203220>
[DeepCache DPS Debug] t=41, grad_norm: 119.276833, grad_max: 3.319812
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50bc70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50bc70>
[DeepCache DPS Debug] t=42, grad_norm: 106.784691, grad_max: 2.571303
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f201870>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f201870>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=43, grad_norm: 102.630539, grad_max: 4.491051
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=44, grad_norm: 102.909370, grad_max: 2.601952
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10> 90%|█████████ | 45/50 [00:19<00:01,  2.64it/s] 92%|█████████▏| 46/50 [00:20<00:02,  1.92it/s] 94%|█████████▍| 47/50 [00:20<00:01,  2.16it/s] 96%|█████████▌| 48/50 [00:21<00:00,  2.35it/s] 98%|█████████▊| 49/50 [00:21<00:00,  2.51it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=45, grad_norm: 99.596375, grad_max: 4.291770
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=46, grad_norm: 176.895844, grad_max: 5.193923
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=47, grad_norm: 178.364731, grad_max: 6.717051
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=2): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=48, grad_norm: 217.012253, grad_max: 11.810084
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>100%|██████████| 50/50 [00:22<00:00,  1.87it/s]100%|██████████| 50/50 [00:22<00:00,  2.24it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=49, grad_norm: 246.077133, grad_max: 8.201118
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.18it/s]  4%|▍         | 2/50 [00:01<00:26,  1.83it/s]  6%|▌         | 3/50 [00:01<00:21,  2.23it/s]  8%|▊         | 4/50 [00:01<00:18,  2.48it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=0, grad_norm: 57.406761, grad_max: 1.797935
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=1, grad_norm: 47.125061, grad_max: 1.502721
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=2, grad_norm: 37.519539, grad_max: 0.826518
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=3, grad_norm: 31.371370, grad_max: 0.728934
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10> 10%|█         | 5/50 [00:02<00:16,  2.65it/s] 12%|█▏        | 6/50 [00:03<00:23,  1.86it/s] 14%|█▍        | 7/50 [00:03<00:20,  2.12it/s] 16%|█▌        | 8/50 [00:03<00:17,  2.34it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=4, grad_norm: 26.038654, grad_max: 0.674711
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=45): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=5, grad_norm: 28.389328, grad_max: 0.895414
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=6, grad_norm: 22.695448, grad_max: 0.501316
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=7, grad_norm: 18.133406, grad_max: 0.465289
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=8, grad_norm: 15.329872, grad_max: 0.387640
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0> 18%|█▊        | 9/50 [00:04<00:16,  2.52it/s] 20%|██        | 10/50 [00:04<00:15,  2.65it/s] 22%|██▏       | 11/50 [00:05<00:20,  1.91it/s] 24%|██▍       | 12/50 [00:05<00:17,  2.15it/s] 26%|██▌       | 13/50 [00:05<00:15,  2.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=9, grad_norm: 13.380083, grad_max: 0.353232
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=10, grad_norm: 21.646919, grad_max: 0.347221
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=11, grad_norm: 20.830833, grad_max: 0.404414
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=38): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=12, grad_norm: 14.448165, grad_max: 0.286807
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10> 28%|██▊       | 14/50 [00:06<00:14,  2.52it/s] 30%|███       | 15/50 [00:06<00:13,  2.65it/s] 32%|███▏      | 16/50 [00:07<00:17,  1.92it/s] 34%|███▍      | 17/50 [00:07<00:15,  2.16it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=13, grad_norm: 12.442805, grad_max: 0.290920
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=14, grad_norm: 11.814657, grad_max: 0.311132
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=15, grad_norm: 8.749632, grad_max: 0.200617
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=16, grad_norm: 49.917400, grad_max: 0.914086
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=17, grad_norm: 31.848660, grad_max: 0.715857
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760> 36%|███▌      | 18/50 [00:08<00:13,  2.35it/s] 38%|███▊      | 19/50 [00:08<00:12,  2.52it/s] 40%|████      | 20/50 [00:08<00:11,  2.65it/s] 42%|████▏     | 21/50 [00:09<00:15,  1.92it/s] 44%|████▍     | 22/50 [00:09<00:12,  2.15it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=18, grad_norm: 26.661776, grad_max: 0.583616
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=19, grad_norm: 24.457726, grad_max: 0.483330
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=20, grad_norm: 8.322453, grad_max: 0.150479
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=21, grad_norm: 46.572403, grad_max: 0.959839
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산 46%|████▌     | 23/50 [00:10<00:11,  2.35it/s] 48%|████▊     | 24/50 [00:10<00:10,  2.52it/s] 50%|█████     | 25/50 [00:10<00:09,  2.65it/s] 52%|█████▏    | 26/50 [00:11<00:12,  1.93it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=22, grad_norm: 40.476887, grad_max: 0.792921
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=23, grad_norm: 33.586163, grad_max: 0.721517
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=26): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=24, grad_norm: 29.946760, grad_max: 0.617758
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=25): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=25, grad_norm: 15.786158, grad_max: 0.837667
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=26, grad_norm: 54.947350, grad_max: 1.266551
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0> 54%|█████▍    | 27/50 [00:12<00:10,  2.16it/s] 56%|█████▌    | 28/50 [00:12<00:09,  2.36it/s] 58%|█████▊    | 29/50 [00:12<00:08,  2.52it/s] 60%|██████    | 30/50 [00:13<00:07,  2.64it/s] 62%|██████▏   | 31/50 [00:13<00:09,  1.92it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=27, grad_norm: 39.121174, grad_max: 0.830348
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=28, grad_norm: 32.752106, grad_max: 0.755907
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=29, grad_norm: 29.585360, grad_max: 0.527973
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=30, grad_norm: 31.729826, grad_max: 1.363982
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:14<00:08,  2.15it/s] 66%|██████▌   | 33/50 [00:14<00:07,  2.35it/s] 68%|██████▊   | 34/50 [00:14<00:06,  2.52it/s] 70%|███████   | 35/50 [00:15<00:05,  2.65it/s]
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=31, grad_norm: 69.076172, grad_max: 2.142619
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=32, grad_norm: 45.075741, grad_max: 0.913856
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=33, grad_norm: 38.012753, grad_max: 0.972059
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=34, grad_norm: 33.649536, grad_max: 0.635611
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=15): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=35, grad_norm: 55.572327, grad_max: 2.848682
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760> 72%|███████▏  | 36/50 [00:16<00:07,  1.92it/s] 74%|███████▍  | 37/50 [00:16<00:06,  2.16it/s] 76%|███████▌  | 38/50 [00:16<00:05,  2.36it/s] 78%|███████▊  | 39/50 [00:17<00:04,  2.52it/s] 80%|████████  | 40/50 [00:17<00:03,  2.64it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=14): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=36, grad_norm: 102.859734, grad_max: 3.413105
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=37, grad_norm: 74.406265, grad_max: 2.774911
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=38, grad_norm: 59.173840, grad_max: 1.286732
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=39, grad_norm: 54.128464, grad_max: 1.513678
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:18<00:04,  1.92it/s] 84%|████████▍ | 42/50 [00:18<00:03,  2.15it/s] 86%|████████▌ | 43/50 [00:18<00:02,  2.35it/s] 88%|████████▊ | 44/50 [00:19<00:02,  2.52it/s]
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=40, grad_norm: 70.813538, grad_max: 4.935905
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=41, grad_norm: 115.471046, grad_max: 2.547274
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=42, grad_norm: 102.414467, grad_max: 2.959836
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=43, grad_norm: 102.691307, grad_max: 3.711552
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=44, grad_norm: 103.834518, grad_max: 4.357375
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0> 90%|█████████ | 45/50 [00:19<00:01,  2.64it/s] 92%|█████████▏| 46/50 [00:20<00:02,  1.92it/s] 94%|█████████▍| 47/50 [00:20<00:01,  2.15it/s] 96%|█████████▌| 48/50 [00:21<00:00,  2.35it/s] 98%|█████████▊| 49/50 [00:21<00:00,  2.51it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=45, grad_norm: 105.768738, grad_max: 4.445860
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=46, grad_norm: 197.969742, grad_max: 11.054699
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=47, grad_norm: 190.627518, grad_max: 7.025066
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=2): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=48, grad_norm: 237.915741, grad_max: 10.492969
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>100%|██████████| 50/50 [00:22<00:00,  1.87it/s]100%|██████████| 50/50 [00:22<00:00,  2.24it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=49, grad_norm: 231.246552, grad_max: 12.727058
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.17it/s]  4%|▍         | 2/50 [00:01<00:26,  1.83it/s]  6%|▌         | 3/50 [00:01<00:21,  2.23it/s]  8%|▊         | 4/50 [00:01<00:18,  2.48it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=0, grad_norm: 55.510162, grad_max: 1.413101
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=1, grad_norm: 47.252831, grad_max: 1.108039
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=2, grad_norm: 37.594501, grad_max: 0.849595
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=3, grad_norm: 31.483360, grad_max: 0.791531
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c508760> 10%|█         | 5/50 [00:02<00:17,  2.65it/s] 12%|█▏        | 6/50 [00:03<00:23,  1.85it/s] 14%|█▍        | 7/50 [00:03<00:20,  2.12it/s] 16%|█▌        | 8/50 [00:03<00:17,  2.34it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c508760>
[DeepCache DPS Debug] t=4, grad_norm: 25.681353, grad_max: 0.723457
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=45): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] t=5, grad_norm: 28.045378, grad_max: 0.956795
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=6, grad_norm: 22.535900, grad_max: 0.570272
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=7, grad_norm: 18.233475, grad_max: 0.433374
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f1a3c10>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f1a3c10>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=8, grad_norm: 15.332447, grad_max: 0.373266
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70> 18%|█▊        | 9/50 [00:04<00:16,  2.51it/s] 20%|██        | 10/50 [00:04<00:15,  2.65it/s] 22%|██▏       | 11/50 [00:05<00:20,  1.91it/s] 24%|██▍       | 12/50 [00:05<00:17,  2.15it/s] 26%|██▌       | 13/50 [00:05<00:15,  2.35it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=9, grad_norm: 13.353848, grad_max: 0.336542
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=10, grad_norm: 22.390656, grad_max: 0.406274
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=11, grad_norm: 20.737797, grad_max: 0.448357
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=38): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=12, grad_norm: 14.654573, grad_max: 0.342434
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030> 28%|██▊       | 14/50 [00:06<00:14,  2.52it/s] 30%|███       | 15/50 [00:06<00:13,  2.65it/s] 32%|███▏      | 16/50 [00:07<00:17,  1.92it/s] 34%|███▍      | 17/50 [00:07<00:15,  2.16it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=13, grad_norm: 12.643196, grad_max: 0.277346
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=14, grad_norm: 11.772355, grad_max: 0.272312
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=15, grad_norm: 9.678309, grad_max: 0.195083
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=16, grad_norm: 50.082798, grad_max: 0.924322
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=17, grad_norm: 31.708925, grad_max: 0.827430
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70> 36%|███▌      | 18/50 [00:08<00:13,  2.35it/s] 38%|███▊      | 19/50 [00:08<00:12,  2.52it/s] 40%|████      | 20/50 [00:08<00:11,  2.65it/s] 42%|████▏     | 21/50 [00:09<00:15,  1.92it/s] 44%|████▍     | 22/50 [00:09<00:12,  2.16it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=18, grad_norm: 26.215694, grad_max: 0.480075
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=19, grad_norm: 24.971645, grad_max: 0.649647
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=20, grad_norm: 12.375969, grad_max: 0.706932
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=21, grad_norm: 46.002674, grad_max: 0.921537
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산 46%|████▌     | 23/50 [00:10<00:11,  2.35it/s] 48%|████▊     | 24/50 [00:10<00:10,  2.52it/s] 50%|█████     | 25/50 [00:10<00:09,  2.64it/s] 52%|█████▏    | 26/50 [00:11<00:12,  1.93it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=22, grad_norm: 41.078541, grad_max: 0.855198
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=23, grad_norm: 34.837219, grad_max: 0.540459
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=26): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=24, grad_norm: 30.074556, grad_max: 0.558110
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=25): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=25, grad_norm: 15.535121, grad_max: 0.737424
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=26, grad_norm: 55.151608, grad_max: 1.171332
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70> 54%|█████▍    | 27/50 [00:12<00:10,  2.16it/s] 56%|█████▌    | 28/50 [00:12<00:09,  2.36it/s] 58%|█████▊    | 29/50 [00:12<00:08,  2.52it/s] 60%|██████    | 30/50 [00:13<00:07,  2.65it/s] 62%|██████▏   | 31/50 [00:13<00:09,  1.93it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=27, grad_norm: 39.406445, grad_max: 0.878973
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=28, grad_norm: 33.495720, grad_max: 0.571409
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=29, grad_norm: 29.869637, grad_max: 0.526734
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=30, grad_norm: 28.485138, grad_max: 0.872859
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:14<00:08,  2.16it/s] 66%|██████▌   | 33/50 [00:14<00:07,  2.36it/s] 68%|██████▊   | 34/50 [00:14<00:06,  2.53it/s] 70%|███████   | 35/50 [00:15<00:05,  2.66it/s]
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=31, grad_norm: 67.753510, grad_max: 1.658827
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=32, grad_norm: 46.637932, grad_max: 1.355894
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=33, grad_norm: 36.821384, grad_max: 0.706148
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=34, grad_norm: 32.939720, grad_max: 0.699492
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=15): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=35, grad_norm: 52.118034, grad_max: 1.768897
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70> 72%|███████▏  | 36/50 [00:16<00:07,  1.94it/s] 74%|███████▍  | 37/50 [00:16<00:05,  2.17it/s] 76%|███████▌  | 38/50 [00:16<00:05,  2.38it/s] 78%|███████▊  | 39/50 [00:17<00:04,  2.54it/s] 80%|████████  | 40/50 [00:17<00:03,  2.67it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=14): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=36, grad_norm: 101.682167, grad_max: 3.006101
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=37, grad_norm: 71.206802, grad_max: 1.986137
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=38, grad_norm: 58.255207, grad_max: 1.433334
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=39, grad_norm: 55.511047, grad_max: 1.558636
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:18<00:04,  1.95it/s] 84%|████████▍ | 42/50 [00:18<00:03,  2.18it/s] 86%|████████▌ | 43/50 [00:18<00:02,  2.38it/s] 88%|████████▊ | 44/50 [00:19<00:02,  2.54it/s]
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=40, grad_norm: 75.076836, grad_max: 2.381609
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=41, grad_norm: 117.793045, grad_max: 4.310203
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=42, grad_norm: 104.000641, grad_max: 2.251012
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=43, grad_norm: 98.083099, grad_max: 3.647638
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=44, grad_norm: 102.136185, grad_max: 2.619707
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70> 90%|█████████ | 45/50 [00:19<00:01,  2.66it/s] 92%|█████████▏| 46/50 [00:20<00:02,  1.94it/s] 94%|█████████▍| 47/50 [00:20<00:01,  2.17it/s] 96%|█████████▌| 48/50 [00:21<00:00,  2.37it/s] 98%|█████████▊| 49/50 [00:21<00:00,  2.54it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=45, grad_norm: 104.833153, grad_max: 4.856908
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=46, grad_norm: 184.500977, grad_max: 8.860505
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=47, grad_norm: 184.383560, grad_max: 6.814805
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=2): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=48, grad_norm: 225.625565, grad_max: 9.568227
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>100%|██████████| 50/50 [00:22<00:00,  1.89it/s]100%|██████████| 50/50 [00:22<00:00,  2.24it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=49, grad_norm: 207.260239, grad_max: 7.517981
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
  0%|          | 0/50 [00:00<?, ?it/s]  2%|▏         | 1/50 [00:00<00:41,  1.19it/s]  4%|▍         | 2/50 [00:01<00:25,  1.85it/s]  6%|▌         | 3/50 [00:01<00:20,  2.25it/s]  8%|▊         | 4/50 [00:01<00:18,  2.51it/s][DeepCache DPS Debug] _guide_step_unet 시작: t=0, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=50): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=0, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=0, grad_norm: 55.655506, grad_max: 1.451996
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 999 -> 50
[DeepCache Debug] Forward 시작: raw_t=999, current_t=50, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=50, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=50): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=1, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=49): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=1, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=1, grad_norm: 47.201408, grad_max: 1.343041
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 979 -> 49
[DeepCache Debug] Forward 시작: raw_t=979, current_t=49, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=49, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=49): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=2, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=48): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=2, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=2, grad_norm: 37.424774, grad_max: 0.753257
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 958 -> 48
[DeepCache Debug] Forward 시작: raw_t=958, current_t=48, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=48, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=48): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=3, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=47): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=3, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=3, grad_norm: 31.146990, grad_max: 0.943502
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 938 -> 47
[DeepCache Debug] Forward 시작: raw_t=938, current_t=47, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=47, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=47): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=4, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=46): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=4, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70> 10%|█         | 5/50 [00:02<00:16,  2.67it/s] 12%|█▏        | 6/50 [00:02<00:23,  1.88it/s] 14%|█▍        | 7/50 [00:03<00:20,  2.15it/s] 16%|█▌        | 8/50 [00:03<00:17,  2.37it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=4, grad_norm: 26.090059, grad_max: 0.619491
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 917 -> 46
[DeepCache Debug] Forward 시작: raw_t=917, current_t=46, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=46, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=46): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=5, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=45): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=5, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=5, grad_norm: 30.023691, grad_max: 0.845060
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 897 -> 45
[DeepCache Debug] Forward 시작: raw_t=897, current_t=45, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=45, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=45): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=6, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=44): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=6, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=6, grad_norm: 22.600080, grad_max: 0.459449
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 877 -> 44
[DeepCache Debug] Forward 시작: raw_t=877, current_t=44, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=44, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=44): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=7, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=43): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=7, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=7, grad_norm: 18.432833, grad_max: 0.408324
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 856 -> 43
[DeepCache Debug] Forward 시작: raw_t=856, current_t=43, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=43, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=43): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=8, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=42): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=8, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=8, grad_norm: 15.485589, grad_max: 0.307496
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 836 -> 42
[DeepCache Debug] Forward 시작: raw_t=836, current_t=42, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=42, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=42): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0> 18%|█▊        | 9/50 [00:03<00:16,  2.54it/s] 20%|██        | 10/50 [00:04<00:14,  2.67it/s] 22%|██▏       | 11/50 [00:05<00:20,  1.93it/s] 24%|██▍       | 12/50 [00:05<00:17,  2.17it/s] 26%|██▌       | 13/50 [00:05<00:15,  2.37it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=9, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=41): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=9, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=9, grad_norm: 13.328712, grad_max: 0.298726
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 816 -> 41
[DeepCache Debug] Forward 시작: raw_t=816, current_t=41, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=41, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=41): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=10, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=40): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=10, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=10, grad_norm: 22.406641, grad_max: 0.495506
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 795 -> 40
[DeepCache Debug] Forward 시작: raw_t=795, current_t=40, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=40, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=40): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=11, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=39): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=11, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=11, grad_norm: 20.463642, grad_max: 0.368621
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 775 -> 39
[DeepCache Debug] Forward 시작: raw_t=775, current_t=39, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=39, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=39): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=12, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=38): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=12, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=12, grad_norm: 14.588447, grad_max: 0.346884
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 754 -> 38
[DeepCache Debug] Forward 시작: raw_t=754, current_t=38, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=38, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=38): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=13, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=37): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=13, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70> 28%|██▊       | 14/50 [00:06<00:14,  2.53it/s] 30%|███       | 15/50 [00:06<00:13,  2.66it/s] 32%|███▏      | 16/50 [00:07<00:17,  1.94it/s] 34%|███▍      | 17/50 [00:07<00:15,  2.18it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=13, grad_norm: 12.714399, grad_max: 0.283791
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 734 -> 37
[DeepCache Debug] Forward 시작: raw_t=734, current_t=37, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=37, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=37): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=14, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=36): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=14, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=14, grad_norm: 11.659258, grad_max: 0.256567
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 714 -> 36
[DeepCache Debug] Forward 시작: raw_t=714, current_t=36, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=36, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=36): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=15, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=35): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=15, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=15, grad_norm: 9.207505, grad_max: 0.262947
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 693 -> 35
[DeepCache Debug] Forward 시작: raw_t=693, current_t=35, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=35, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=35): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=16, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=34): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=16, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=16, grad_norm: 49.107235, grad_max: 0.966652
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 673 -> 34
[DeepCache Debug] Forward 시작: raw_t=673, current_t=34, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=34, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=34): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=17, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=33): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=17, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] t=17, grad_norm: 31.343657, grad_max: 0.572446
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 652 -> 33
[DeepCache Debug] Forward 시작: raw_t=652, current_t=33, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=33, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=33): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0> 36%|███▌      | 18/50 [00:07<00:13,  2.38it/s] 38%|███▊      | 19/50 [00:08<00:12,  2.54it/s] 40%|████      | 20/50 [00:08<00:11,  2.67it/s] 42%|████▏     | 21/50 [00:09<00:14,  1.94it/s] 44%|████▍     | 22/50 [00:09<00:12,  2.17it/s]
[DeepCache DPS Debug] _guide_step_unet 시작: t=18, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=32): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=18, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=18, grad_norm: 26.365990, grad_max: 0.566972
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 632 -> 32
[DeepCache Debug] Forward 시작: raw_t=632, current_t=32, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=32, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=32): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=19, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=31): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=19, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=19, grad_norm: 24.696581, grad_max: 0.481444
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 612 -> 31
[DeepCache Debug] Forward 시작: raw_t=612, current_t=31, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=31, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=31): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=20, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=30): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=20, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=20, grad_norm: 8.110595, grad_max: 0.173799
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 591 -> 30
[DeepCache Debug] Forward 시작: raw_t=591, current_t=30, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=30, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=30): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=21, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=29): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=21, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=21, grad_norm: 47.119625, grad_max: 0.862300
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 571 -> 29
[DeepCache Debug] Forward 시작: raw_t=571, current_t=29, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=29, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=29): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=22, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=28): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=22, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산 46%|████▌     | 23/50 [00:10<00:11,  2.37it/s] 48%|████▊     | 24/50 [00:10<00:10,  2.54it/s] 50%|█████     | 25/50 [00:10<00:09,  2.67it/s] 52%|█████▏    | 26/50 [00:11<00:12,  1.95it/s]
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c509e40>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c509e40>
[DeepCache DPS Debug] t=22, grad_norm: 40.481403, grad_max: 1.043425
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 550 -> 28
[DeepCache Debug] Forward 시작: raw_t=550, current_t=28, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=28, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=28): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c431030>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c431030>
[DeepCache DPS Debug] _guide_step_unet 시작: t=23, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=27): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=23, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=23, grad_norm: 34.577812, grad_max: 0.700079
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 530 -> 27
[DeepCache Debug] Forward 시작: raw_t=530, current_t=27, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=27, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=27): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=24, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=26): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=24, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=24, grad_norm: 29.490955, grad_max: 0.631688
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 510 -> 26
[DeepCache Debug] Forward 시작: raw_t=510, current_t=26, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=26, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=26): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=25, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=25): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=25, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] t=25, grad_norm: 21.693623, grad_max: 0.730208
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 489 -> 25
[DeepCache Debug] Forward 시작: raw_t=489, current_t=25, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=25, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=25): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=26, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=24): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=26, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=26, grad_norm: 54.141895, grad_max: 1.332318
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 469 -> 24
[DeepCache Debug] Forward 시작: raw_t=469, current_t=24, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=24, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=24): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650> 54%|█████▍    | 27/50 [00:11<00:10,  2.18it/s] 56%|█████▌    | 28/50 [00:12<00:09,  2.38it/s] 58%|█████▊    | 29/50 [00:12<00:08,  2.54it/s] 60%|██████    | 30/50 [00:12<00:07,  2.67it/s] 62%|██████▏   | 31/50 [00:13<00:09,  1.95it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=27, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=23): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=27, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=27, grad_norm: 38.544014, grad_max: 0.736179
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 449 -> 23
[DeepCache Debug] Forward 시작: raw_t=449, current_t=23, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=23, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=23): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=28, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=22): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=28, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=28, grad_norm: 32.496025, grad_max: 0.621757
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 428 -> 22
[DeepCache Debug] Forward 시작: raw_t=428, current_t=22, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=22, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=22): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=29, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=21): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=29, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] t=29, grad_norm: 30.029696, grad_max: 0.585867
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 408 -> 21
[DeepCache Debug] Forward 시작: raw_t=408, current_t=21, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=21, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=21): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=30, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=20): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=30, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=30, grad_norm: 30.580900, grad_max: 2.120812
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 387 -> 20
[DeepCache Debug] Forward 시작: raw_t=387, current_t=20, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=20, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=20): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=31, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=19): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=31, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개 64%|██████▍   | 32/50 [00:14<00:08,  2.18it/s] 66%|██████▌   | 33/50 [00:14<00:07,  2.38it/s] 68%|██████▊   | 34/50 [00:14<00:06,  2.54it/s] 70%|███████   | 35/50 [00:15<00:05,  2.67it/s]
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=31, grad_norm: 66.402260, grad_max: 1.592876
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 367 -> 19
[DeepCache Debug] Forward 시작: raw_t=367, current_t=19, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=19, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=19): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=32, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=18): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=32, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=32, grad_norm: 44.298447, grad_max: 1.115051
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 347 -> 18
[DeepCache Debug] Forward 시작: raw_t=347, current_t=18, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=18, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=18): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=33, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=17): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=33, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] t=33, grad_norm: 38.538887, grad_max: 0.849311
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 326 -> 17
[DeepCache Debug] Forward 시작: raw_t=326, current_t=17, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=17, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=17): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=34, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=16): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=34, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=34, grad_norm: 32.245079, grad_max: 0.617886
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 306 -> 16
[DeepCache Debug] Forward 시작: raw_t=306, current_t=16, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=16, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=16): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=35, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=15): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=35, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=35, grad_norm: 53.506573, grad_max: 1.774840
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 285 -> 15
[DeepCache Debug] Forward 시작: raw_t=285, current_t=15, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=15, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=15): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0> 72%|███████▏  | 36/50 [00:15<00:07,  1.94it/s] 74%|███████▍  | 37/50 [00:16<00:05,  2.17it/s] 76%|███████▌  | 38/50 [00:16<00:05,  2.37it/s] 78%|███████▊  | 39/50 [00:16<00:04,  2.54it/s] 80%|████████  | 40/50 [00:17<00:03,  2.66it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=36, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=14): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=36, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=36, grad_norm: 102.766571, grad_max: 2.353417
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 265 -> 14
[DeepCache Debug] Forward 시작: raw_t=265, current_t=14, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=14, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=14): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=37, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=13): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=37, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] t=37, grad_norm: 73.946182, grad_max: 1.577448
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 245 -> 13
[DeepCache Debug] Forward 시작: raw_t=245, current_t=13, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=13, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=13): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=38, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=12): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=38, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=38, grad_norm: 57.332870, grad_max: 1.106015
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 224 -> 12
[DeepCache Debug] Forward 시작: raw_t=224, current_t=12, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=12, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=12): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=39, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=11): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=39, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=39, grad_norm: 55.618317, grad_max: 1.408008
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 204 -> 11
[DeepCache Debug] Forward 시작: raw_t=204, current_t=11, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=11, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=11): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=40, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=10): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=40, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개 82%|████████▏ | 41/50 [00:18<00:04,  1.94it/s] 84%|████████▍ | 42/50 [00:18<00:03,  2.18it/s] 86%|████████▌ | 43/50 [00:18<00:02,  2.38it/s] 88%|████████▊ | 44/50 [00:19<00:02,  2.54it/s]
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=40, grad_norm: 71.762222, grad_max: 2.876152
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 183 -> 10
[DeepCache Debug] Forward 시작: raw_t=183, current_t=10, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=10, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=10): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=41, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=9): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=41, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] t=41, grad_norm: 118.155281, grad_max: 3.945112
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 163 -> 9
[DeepCache Debug] Forward 시작: raw_t=163, current_t=9, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=9, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=9): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=42, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=8): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=42, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=42, grad_norm: 107.227249, grad_max: 2.755417
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 143 -> 8
[DeepCache Debug] Forward 시작: raw_t=143, current_t=8, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=8, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=8): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=43, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=7): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=43, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=43, grad_norm: 100.497208, grad_max: 2.219625
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 122 -> 7
[DeepCache Debug] Forward 시작: raw_t=122, current_t=7, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=7, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=7): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=44, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=6): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=44, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=44, grad_norm: 104.753548, grad_max: 4.107112
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 102 -> 6
[DeepCache Debug] Forward 시작: raw_t=102, current_t=6, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=6, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=6): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0> 90%|█████████ | 45/50 [00:19<00:01,  2.67it/s] 92%|█████████▏| 46/50 [00:20<00:02,  1.94it/s] 94%|█████████▍| 47/50 [00:20<00:01,  2.18it/s] 96%|█████████▌| 48/50 [00:20<00:00,  2.37it/s] 98%|█████████▊| 49/50 [00:21<00:00,  2.54it/s]
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=45, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache DPS] 캐시 업데이트 스텝 (t=5): x0 예측에서 전체 계산
[DeepCache DPS Debug] t=45, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] t=45, grad_norm: 104.874069, grad_max: 4.384733
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 82 -> 5
[DeepCache Debug] Forward 시작: raw_t=82, current_t=5, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=5, start_timestep=50, cache_interval=5, is_update=True
[DeepCache] 캐시 업데이트 스텝 (t=5): 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] _guide_step_unet 시작: t=46, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=4): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=46, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
[DeepCache DPS Debug] t=46, grad_norm: 202.551666, grad_max: 6.988883
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 61 -> 4
[DeepCache Debug] Forward 시작: raw_t=61, current_t=4, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=4, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=4): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] _guide_step_unet 시작: t=47, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=3): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=47, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c432650>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c432650>
[DeepCache DPS Debug] t=47, grad_norm: 180.051498, grad_max: 7.444773
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 41 -> 3
[DeepCache Debug] Forward 시작: raw_t=41, current_t=3, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=3, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=3): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=48, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=2): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=48, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c50a1d0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c50a1d0>
[DeepCache DPS Debug] t=48, grad_norm: 200.222961, grad_max: 5.864076
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 근사 변환: 20 -> 2
[DeepCache Debug] Forward 시작: raw_t=20, current_t=2, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=2, start_timestep=50, cache_interval=5, is_update=False
[DeepCache] 캐싱 스텝 (t=2): 캐시된 특징 사용
[DeepCache] 캐시된 특징 사용: cache_block_id=4
[DeepCache] 저장된 스킵 사용: 16개
[DeepCache] 디코더 계산: U4 ~ U1 역순 계산
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] _guide_step_unet 시작: t=49, current_t=1, cache_interval=5, clean_step=0
[DeepCache Debug] 캐시 업데이트 체크: timestep=1, start_timestep=50, cache_interval=5, is_update=False
[DeepCache DPS] 캐싱 스텝 (t=1): x0 예측에서 캐시 사용
[DeepCache DPS Debug] t=49, x_for_grad.requires_grad: True
[Epsilon Debug] zt.requires_grad: True, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4c524af0>100%|██████████| 50/50 [00:22<00:00,  1.89it/s]100%|██████████| 50/50 [00:22<00:00,  2.26it/s]

[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4c524af0>
[DeepCache DPS Debug] t=49, grad_norm: 213.360352, grad_max: 7.321999
[Epsilon Debug] zt.requires_grad: False, zt.grad_fn: None
[DeepCache Debug] Timestep 변환: 0 -> 0
[DeepCache Debug] Forward 시작: raw_t=0, current_t=0, cache_interval=5, clean_step=0
[DeepCache] Clean step (t=0): DeepCache 사용 안함, 전체 계산 수행
[DeepCache] 인코더 스킵 캐시 완료: 16개
[DeepCache] U13 입력 캐시 완료(pre-hook): torch.Size([128, 384, 32, 32])
[Epsilon Debug] epsilon.requires_grad: True, epsilon.grad_fn: <ConvolutionBackward0 object at 0x7f5b4f203c70>
[X0 Debug] x0.requires_grad: True, x0.grad_fn: <DivBackward0 object at 0x7f5b4f203c70>
save npy to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=5_20250828_225246/cache_interval_5_layer_depth_4/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=5/bon=1/guidance_strength=1.0/images.npy
Saving images to /home/juhyeong/Training-Free-Guidance/deepcache_layer_experiments_target=5_20250828_225246/cache_interval_5_layer_depth_4/guidance_name=dps+recur_steps=1+iter_steps=4/model=openai_cifar10.pt/guide_net=resnet_cifar10.pt/target=5/bon=1/guidance_strength=1.0/images.png
